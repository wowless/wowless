---
Actor:
  fields: {}
  inherits:
    ParentedObjectBase: {}
    RegionBase: {}
    ScriptObjectBase: {}
  methods:
    AttachToMount: {}
    CalculateMountScale: {}
    ClearModel: {}
    Dress: {}
    GetActiveBoundingBox: {}
    GetAnimation: {}
    GetAnimationBlendOperation: {}
    GetAnimationVariation: {}
    GetAutoDress: {}
    GetDesaturation: {}
    GetItemTransmogInfo: {}
    GetItemTransmogInfoList: {}
    GetMaxBoundingBox: {}
    GetModelFileID: {}
    GetModelPath: {}
    GetModelUnitGUID: {}
    GetObeyHideInTransmogFlag: {}
    GetParticleOverrideScale: {}
    GetPaused: {}
    GetPitch: {}
    GetPosition: {}
    GetRoll: {}
    GetSheathed: {}
    GetSpellVisualKit: {}
    GetUseTransmogChoices: {}
    GetUseTransmogSkin: {}
    GetYaw: {}
    IsGeoReady: {}
    IsLoaded: {}
    IsSlotAllowed: {}
    IsSlotVisible: {}
    IsUsingCenterForOrigin: {}
    PlayAnimationKit: {}
    SetAnimation: {}
    SetAnimationBlendOperation: {}
    SetAutoDress: {}
    SetDesaturation: {}
    SetItemTransmogInfo: {}
    SetModelByCreatureDisplayID: {}
    SetModelByFileID: {}
    SetModelByHyperlink: {}
    SetModelByPath: {}
    SetModelByUnit: {}
    SetObeyHideInTransmogFlag: {}
    SetParticleOverrideScale: {}
    SetPaused: {}
    SetPitch: {}
    SetPlayerModelFromGlues: {}
    SetPosition: {}
    SetRoll: {}
    SetSheathed: {}
    SetSpellVisualKit: {}
    SetUseCenterForOrigin: {}
    SetUseTransmogChoices: {}
    SetUseTransmogSkin: {}
    SetYaw: {}
    StopAnimationKit: {}
    TryOn: {}
    Undress: {}
    UndressSlot: {}
  objectType: ModelSceneActor
Alpha:
  inherits:
    Animation: {}
  methods:
    GetFromAlpha: {}
    GetToAlpha: {}
    SetFromAlpha: {}
    SetToAlpha: {}
Animation:
  fields:
    endDelay:
      type: number
    smoothing:
      init: OUT
      type: string
    startDelay:
      type: number
  inherits:
    ParentedObject: {}
    ScriptObject: {}
  methods:
    GetDuration: {}
    GetElapsed: {}
    GetEndDelay:
      getter:
      - name: endDelay
    GetOrder: {}
    GetProgress: {}
    GetRegionParent:
      impl: Animation/GetRegionParent
    GetSmoothing:
      getter:
      - name: smoothing
    GetSmoothProgress: {}
    GetStartDelay:
      getter:
      - name: startDelay
    GetTarget: {}
    IsDelaying: {}
    IsDone: {}
    IsPaused: {}
    IsPlaying: {}
    IsStopped: {}
    Pause: {}
    Play: {}
    Restart: {}
    SetChildKey: {}
    SetDuration: {}
    SetEndDelay:
      setter:
      - name: endDelay
    SetOrder: {}
    SetPlaying: {}
    SetSmoothing:
      setter:
      - name: smoothing
    SetSmoothProgress: {}
    SetStartDelay:
      setter:
      - name: startDelay
    SetTarget: {}
    SetTargetKey: {}
    SetTargetName: {}
    SetTargetParent: {}
    Stop: {}
AnimationGroup:
  inherits:
    ParentedObjectBase: {}
    ScriptObject: {}
  methods:
    CreateAnimation:
      impl: AnimationGroup/CreateAnimation
    Finish: {}
    GetAnimations:
      impl: AnimationGroup/GetAnimations
    GetAnimationSpeedMultiplier: {}
    GetDuration: {}
    GetLooping: {}
    GetLoopState: {}
    GetProgress: {}
    IsDone: {}
    IsPaused: {}
    IsPendingFinish: {}
    IsPlaying: {}
    IsReverse: {}
    IsSetToFinalAlpha: {}
    Pause: {}
    Play: {}
    RemoveAnimations: {}
    Restart: {}
    SetAnimationSpeedMultiplier: {}
    SetLooping: {}
    SetPlaying: {}
    SetToFinalAlpha: {}
    Stop: {}
Browser:
  inherits:
    Frame: {}
  methods:
    ClearFocus: {}
    CopyExternalLink: {}
    DeleteCookies: {}
    NavigateBack: {}
    NavigateForward: {}
    NavigateHome: {}
    NavigateReload: {}
    NavigateStop: {}
    NavigateTo: {}
    OpenExternalLink: {}
    OpenTicket: {}
    SetFocus: {}
    SetZoom: {}
Button:
  fields:
    beingClicked:
      init: false
      type: boolean
    buttonLocked:
      init: false
      type: boolean
    buttonState:
      init: NORMAL
      type: string
    disabledTexture:
      nilable: true
      type: texture
    fontstring:
      nilable: true
      type: fontstring
    highlightTexture:
      nilable: true
      type: texture
    motionScriptsWhileDisabled:
      init: false
      type: boolean
    normalFontObject:
      nilable: true
      type: font
    normalTexture:
      nilable: true
      type: texture
    pushedTextOffsetX:
      init: 0
      type: number
    pushedTextOffsetY:
      init: 0
      type: number
    pushedTexture:
      type: texture
    registeredClicks:
      init:
        leftbuttonup: true
      type: table
  inherits:
    Frame: {}
  methods:
    ClearDisabledTexture: {}
    ClearHighlightTexture: {}
    ClearNormalTexture: {}
    ClearPushedTexture: {}
    Click:
      impl: Button/Click
    Disable:
      impl: Button/Disable
    Enable:
      impl: Button/Enable
    GetButtonState:
      getter:
      - name: buttonState
    GetDisabledFontObject: {}
    GetDisabledTexture:
      getter:
      - name: disabledTexture
    GetFontString:
      getter:
      - name: fontstring
    GetHighlightFontObject: {}
    GetHighlightTexture:
      getter:
      - name: highlightTexture
    GetMotionScriptsWhileDisabled:
      getter:
      - name: motionScriptsWhileDisabled
    GetNormalFontObject:
      getter:
      - name: normalFontObject
    GetNormalTexture:
      getter:
      - name: normalTexture
    GetPushedTextOffset:
      getter:
      - name: pushedTextOffsetX
      - name: pushedTextOffsetY
    GetPushedTexture:
      getter:
      - name: pushedTexture
    GetText:
      impl: Button/GetText
    GetTextHeight:
      outputs:
      - type: number
    GetTextWidth:
      outputs:
      - type: number
    IsEnabled:
      impl: Button/IsEnabled
    LockHighlight: {}
    RegisterForClicks:
      impl: Button/RegisterForClicks
    RegisterForMouse: {}
    SetButtonState:
      impl: Button/SetButtonState
    SetDisabledAtlas:
      impl: Button/SetDisabledAtlas
    SetDisabledFontObject: {}
    SetDisabledTexture:
      impl: Button/SetDisabledTexture
    SetEnabled:
      impl: Button/SetEnabled
    SetFontString:
      impl: Button/SetFontString
    SetFormattedText:
      impl: Button/SetFormattedText
    SetHighlightAtlas:
      impl: Button/SetHighlightAtlas
    SetHighlightFontObject: {}
    SetHighlightLocked: {}
    SetHighlightTexture:
      impl: Button/SetHighlightTexture
    SetMotionScriptsWhileDisabled:
      setter:
      - name: motionScriptsWhileDisabled
    SetNormalAtlas:
      impl: Button/SetNormalAtlas
    SetNormalFontObject:
      setter:
      - name: normalFontObject
    SetNormalTexture:
      impl: Button/SetNormalTexture
    SetPushedAtlas:
      impl: Button/SetPushedAtlas
    SetPushedTextOffset:
      setter:
      - name: pushedTextOffsetX
      - name: pushedTextOffsetY
    SetPushedTexture:
      impl: Button/SetPushedTexture
    SetText:
      impl: Button/SetText
    UnlockHighlight: {}
CheckButton:
  fields:
    checked:
      init: false
      type: boolean
    checkedTexture:
      type: texture
    disabledCheckedTexture:
      type: texture
  inherits:
    Button: {}
  methods:
    GetChecked:
      getter:
      - name: checked
    GetCheckedTexture:
      getter:
      - name: checkedTexture
    GetDisabledCheckedTexture:
      getter:
      - name: disabledCheckedTexture
    SetChecked:
      impl: CheckButton/SetChecked
    SetCheckedTexture:
      impl: CheckButton/SetCheckedTexture
    SetDisabledCheckedTexture:
      setter:
      - name: disabledCheckedTexture
Checkout:
  inherits:
    Frame: {}
  methods:
    CancelOpenCheckout: {}
    ClearFocus: {}
    CloseCheckout: {}
    CopyExternalLink: {}
    OpenCheckout: {}
    OpenExternalLink: {}
    SetFocus: {}
    SetZoom: {}
  objectType: BlizzardCheckout
CinematicModel:
  inherits:
    PlayerModel: {}
  methods:
    EquipItem: {}
    InitializeCamera: {}
    InitializePanCamera: {}
    SetAnimOffset: {}
    SetCreatureData: {}
    SetFacingLeft: {}
    SetFadeTimes: {}
    SetHeightFactor: {}
    SetJumpInfo: {}
    SetPanDistance: {}
    SetSpellVisualKit: {}
    SetTargetDistance: {}
    StartPan: {}
    StopPan: {}
    UnequipItems: {}
ColorSelect:
  fields:
    colorValueTexture:
      type: texture
    colorValueThumbTexture:
      type: texture
    colorWheelTexture:
      type: texture
    colorWheelThumbTexture:
      type: texture
  inherits:
    Frame: {}
  methods:
    ClearColorWheelTexture: {}
    GetColorHSV:
      outputs:
      - name: h
        type: number
      - name: s
        type: number
      - name: v
        type: number
    GetColorRGB:
      outputs:
      - name: r
        type: number
      - name: g
        type: number
      - name: b
        type: number
    GetColorValueTexture:
      getter:
      - name: colorValueTexture
    GetColorValueThumbTexture:
      getter:
      - name: colorValueThumbTexture
    GetColorWheelTexture:
      getter:
      - name: colorWheelTexture
    GetColorWheelThumbTexture:
      getter:
      - name: colorWheelThumbTexture
    SetColorHSV: {}
    SetColorRGB: {}
    SetColorValueTexture:
      setter:
      - name: colorValueTexture
    SetColorValueThumbTexture:
      setter:
      - name: colorValueThumbTexture
    SetColorWheelTexture:
      setter:
      - name: colorWheelTexture
    SetColorWheelThumbTexture:
      setter:
      - name: colorWheelThumbTexture
ControlPoint:
  inherits:
    ParentedObject: {}
  methods:
    GetOffset: {}
    GetOrder: {}
    SetOffset: {}
    SetOrder: {}
Cooldown:
  fields:
    blingTexture:
      type: texture
    edgeTexture:
      type: texture
    swipeTexture:
      type: texture
  inherits:
    Frame: {}
  methods:
    Clear: {}
    GetCooldownDisplayDuration: {}
    GetCooldownDuration: {}
    GetCooldownTimes: {}
    GetDrawBling: {}
    GetDrawEdge: {}
    GetDrawSwipe: {}
    GetEdgeScale: {}
    GetReverse: {}
    GetRotation: {}
    IsPaused: {}
    Pause: {}
    Resume: {}
    SetBlingTexture:
      setter:
      - name: blingTexture
    SetCooldown: {}
    SetCooldownDuration: {}
    SetCooldownUNIX: {}
    SetCountdownAbbrevThreshold: {}
    SetCountdownFont: {}
    SetDrawBling: {}
    SetDrawEdge: {}
    SetDrawSwipe: {}
    SetEdgeScale: {}
    SetEdgeTexture:
      setter:
      - name: edgeTexture
    SetHideCountdownNumbers: {}
    SetReverse: {}
    SetRotation: {}
    SetSwipeColor: {}
    SetSwipeTexture:
      setter:
      - name: swipeTexture
    SetTexCoordRange: {}
    SetUseCircularEdge: {}
DressUpModel:
  inherits:
    PlayerModel: {}
  methods:
    Dress: {}
    GetAutoDress: {}
    GetItemTransmogInfo: {}
    GetItemTransmogInfoList: {}
    GetObeyHideInTransmogFlag: {}
    GetSheathed: {}
    GetUseTransmogChoices: {}
    GetUseTransmogSkin: {}
    IsGeoReady: {}
    IsSlotAllowed: {}
    IsSlotVisible: {}
    SetAutoDress: {}
    SetItemTransmogInfo: {}
    SetObeyHideInTransmogFlag: {}
    SetSheathed: {}
    SetUseTransmogChoices: {}
    SetUseTransmogSkin: {}
    TryOn: {}
    Undress: {}
    UndressSlot: {}
EditBox:
  fields:
    editboxText:
      init: ''
      type: string
    enabled:
      init: true
      type: boolean
    historyLines:
      init: 10
      type: number
    isAutoFocus:
      init: true
      type: boolean
    isCountInvisibleLetters:
      init: false
      type: boolean
    isMultiLine:
      init: false
      type: boolean
    isSecureText:
      init: false
      type: boolean
    maxBytes:
      init: 200
      type: number
    maxLetters:
      init: 64
      type: number
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    AddHistoryLine: {}
    ClearFocus: {}
    ClearHighlightText: {}
    ClearHistory: {}
    Disable:
      impl: EditBox/Disable
    Enable:
      impl: EditBox/Enable
    GetAltArrowKeyMode: {}
    GetBlinkSpeed: {}
    GetCursorPosition: {}
    GetDisplayText: {}
    GetHighlightColor: {}
    GetHistoryLines:
      getter:
      - name: historyLines
    GetInputLanguage:
      impl: EditBox/GetInputLanguage
    GetMaxBytes:
      getter:
      - name: maxBytes
    GetMaxLetters:
      getter:
      - name: maxLetters
    GetNumber:
      outputs:
      - type: number
    GetNumLetters: {}
    GetText:
      getter:
      - name: editboxText
    GetTextInsets: {}
    GetUTF8CursorPosition: {}
    GetVisibleTextByteLimit: {}
    HasFocus: {}
    HasText: {}
    HighlightText: {}
    Insert:
      impl: EditBox/Insert
    IsAutoFocus:
      getter:
      - name: isAutoFocus
    IsCountInvisibleLetters:
      getter:
      - name: isCountInvisibleLetters
    IsEnabled:
      getter:
      - name: enabled
    IsInIMECompositionMode: {}
    IsMultiLine:
      getter:
      - name: isMultiLine
    IsNumeric: {}
    IsPassword: {}
    IsSecureText:
      getter:
      - name: isSecureText
    SetAltArrowKeyMode: {}
    SetAutoFocus:
      setter:
      - name: isAutoFocus
    SetBlinkSpeed: {}
    SetCountInvisibleLetters:
      setter:
      - name: isCountInvisibleLetters
    SetCursorPosition: {}
    SetEnabled:
      setter:
      - name: enabled
    SetFocus: {}
    SetHighlightColor: {}
    SetHistoryLines:
      setter:
      - name: historyLines
    SetMaxBytes:
      setter:
      - name: maxBytes
    SetMaxLetters:
      setter:
      - name: maxLetters
    SetMultiLine:
      setter:
      - name: isMultiLine
    SetNumber: {}
    SetNumeric: {}
    SetPassword: {}
    SetSecureText:
      setter:
      - name: isSecureText
    SetSecurityDisablePaste: {}
    SetSecurityDisableSetText: {}
    SetText:
      setter:
      - name: editboxText
    SetTextInsets: {}
    SetVisibleTextByteLimit: {}
    ToggleInputLanguage: {}
FogOfWarFrame:
  inherits:
    Frame: {}
  methods:
    GetFogOfWarBackgroundAtlas: {}
    GetFogOfWarBackgroundTexture: {}
    GetFogOfWarMaskAtlas: {}
    GetFogOfWarMaskTexture: {}
    GetMaskScalar: {}
    GetUiMapID: {}
    SetFogOfWarBackgroundAtlas: {}
    SetFogOfWarBackgroundTexture: {}
    SetFogOfWarMaskAtlas: {}
    SetFogOfWarMaskTexture: {}
    SetMaskScalar: {}
    SetUiMapID: {}
Font:
  inherits:
    FontInstance: {}
    UIObject: {}
  methods:
    CopyFontObject: {}
    GetAlpha: {}
    SetAlpha: {}
FontInstance:
  inherits: {}
  methods:
    GetFont:
      impl: FontInstance/GetFont
    GetFontObject:
      impl: FontInstance/GetFontObject
    GetIndentedWordWrap: {}
    GetJustifyH: {}
    GetJustifyV: {}
    GetShadowColor:
      outputs:
      - type: number
      - type: number
      - type: number
    GetShadowOffset:
      outputs:
      - type: number
    GetSpacing:
      outputs:
      - type: number
    GetTextColor:
      outputs:
      - type: number
      - type: number
      - type: number
    SetFont: {}
    SetFontObject: {}
    SetIndentedWordWrap: {}
    SetJustifyH: {}
    SetJustifyV: {}
    SetShadowColor: {}
    SetShadowOffset: {}
    SetSpacing: {}
    SetTextColor: {}
  virtual: true
FontString:
  fields:
    maxLines:
      init: 0
      type: number
    text:
      nilable: true
      type: string
    textScale:
      init: 1
      type: number
  inherits:
    FontInstance: {}
    LayeredRegion: {}
    ScriptObject: {}
  methods:
    CalculateScreenAreaFromCharacterSpan: {}
    CanNonSpaceWrap: {}
    CanWordWrap: {}
    FindCharacterIndexAtCoordinate: {}
    GetFieldSize: {}
    GetLineHeight:
      outputs:
      - type: number
    GetMaxLines:
      getter:
      - name: maxLines
    GetNumLines:
      outputs:
      - type: number
    GetRotation: {}
    GetStringHeight:
      outputs:
      - type: number
    GetStringWidth:
      outputs:
      - type: number
    GetText:
      getter:
      - name: text
    GetTextScale:
      getter:
      - name: textScale
    GetUnboundedStringWidth:
      outputs:
      - type: number
    GetVertexColor: {}
    GetWrappedWidth:
      outputs:
      - type: number
    IsTruncated: {}
    SetAlphaGradient: {}
    SetFixedColor: {}
    SetFormattedText: {}
    SetMaxLines:
      setter:
      - name: maxLines
    SetNonSpaceWrap: {}
    SetRotation: {}
    SetText:
      impl: FontString/SetText
    SetTextHeight: {}
    SetTextScale:
      setter:
      - name: textScale
    SetWordWrap: {}
ForbiddenMixin:
  fields:
    forbidden:
      init: false
      type: boolean
  inherits: {}
  methods:
    IsForbidden:
      getter:
      - name: forbidden
    SetForbidden:
      impl: ForbiddenMixin/SetForbidden
  virtual: true
Frame:
  fields:
    attributes:
      init: {}
      type: table
    frameLevel:
      init: 0
      type: number
    frameStrata:
      init: MEDIUM
      type: string
    hasFixedFrameLevel:
      init: false
      type: boolean
    hasFixedFrameStrata:
      init: false
      type: boolean
    hyperlinksEnabled:
      init: false
      type: boolean
    id:
      init: 0
      type: number
    isClampedToScreen:
      init: false
      type: boolean
    isUserPlaced:
      init: false
      type: boolean
    maxResizeHeight:
      type: number
    maxResizeWidth:
      type: number
    minResizeHeight:
      type: number
    minResizeWidth:
      type: number
    movable:
      init: false
      type: boolean
    propagateKeyboardInput:
      init: false
      type: boolean
    resizable:
      init: false
      type: boolean
    toplevel:
      init: false
      type: boolean
  inherits:
    Region: {}
    ScriptObject: {}
  methods:
    CanChangeAttribute: {}
    CreateFontString:
      impl: Frame/CreateFontString
    CreateLine:
      impl: Frame/CreateLine
    CreateMaskTexture:
      impl: Frame/CreateMaskTexture
    CreateTexture:
      impl: Frame/CreateTexture
    DesaturateHierarchy: {}
    DisableDrawLayer: {}
    DoesClipChildren: {}
    EnableDrawLayer: {}
    EnableGamePadButton: {}
    EnableGamePadStick: {}
    EnableKeyboard: {}
    ExecuteAttribute: {}
    GetAttribute:
      impl: Frame/GetAttribute
    GetBoundsRect: {}
    GetChildren:
      impl: Frame/GetChildren
    GetClampRectInsets: {}
    GetDontSavePosition: {}
    GetEffectiveAlpha:
      impl: Frame/GetEffectiveAlpha
    GetEffectivelyFlattensRenderLayers: {}
    GetFlattensRenderLayers: {}
    GetFrameLevel:
      getter:
      - name: frameLevel
    GetFrameStrata:
      getter:
      - name: frameStrata
    GetHitRectInsets: {}
    GetHyperlinksEnabled:
      getter:
      - name: hyperlinksEnabled
    GetID:
      getter:
      - name: id
    GetNumChildren:
      impl: Frame/GetNumChildren
    GetNumRegions:
      impl: Frame/GetNumRegions
    GetPropagateKeyboardInput:
      getter:
      - name: propagateKeyboardInput
    GetRegions:
      impl: Frame/GetRegions
    GetResizeBounds: {}
    HasFixedFrameLevel:
      getter:
      - name: hasFixedFrameLevel
    HasFixedFrameStrata:
      getter:
      - name: hasFixedFrameStrata
    IsClampedToScreen:
      getter:
      - name: isClampedToScreen
    IsEventRegistered:
      impl: Frame/IsEventRegistered
    IsGamePadButtonEnabled: {}
    IsGamePadStickEnabled: {}
    IsKeyboardEnabled: {}
    IsMovable:
      getter:
      - name: movable
    IsResizable:
      getter:
      - name: resizable
    IsToplevel:
      getter:
      - name: toplevel
    IsUserPlaced:
      getter:
      - name: isUserPlaced
    Lower: {}
    Raise: {}
    RegisterAllEvents:
      impl: Frame/RegisterAllEvents
    RegisterEvent:
      impl: Frame/RegisterEvent
    RegisterForDrag: {}
    RegisterUnitEvent:
      impl: Frame/RegisterUnitEvent
    RotateTextures: {}
    SetAttribute:
      impl: Frame/SetAttribute
    SetAttributeNoHandler:
      impl: Frame/SetAttributeNoHandler
    SetClampedToScreen:
      setter:
      - name: isClampedToScreen
    SetClampRectInsets: {}
    SetClipsChildren: {}
    SetDontSavePosition: {}
    SetDrawLayerEnabled: {}
    SetFixedFrameLevel:
      setter:
      - name: hasFixedFrameLevel
    SetFixedFrameStrata:
      setter:
      - name: hasFixedFrameStrata
    SetFlattensRenderLayers: {}
    SetFrameLevel:
      impl: Frame/SetFrameLevel
    SetFrameStrata:
      setter:
      - name: frameStrata
    SetHitRectInsets: {}
    SetHyperlinksEnabled:
      setter:
      - name: hyperlinksEnabled
    SetID:
      setter:
      - name: id
    SetIsFrameBuffer: {}
    SetMovable:
      setter:
      - name: movable
    SetPropagateKeyboardInput:
      setter:
      - name: propagateKeyboardInput
    SetResizable:
      setter:
      - name: resizable
    SetResizeBounds: {}
    SetToplevel:
      setter:
      - name: toplevel
    SetUserPlaced:
      setter:
      - name: isUserPlaced
    StartMoving: {}
    StartSizing: {}
    StopMovingOrSizing: {}
    UnregisterAllEvents:
      impl: Frame/UnregisterAllEvents
    UnregisterEvent:
      impl: Frame/UnregisterEvent
GameTooltip:
  fields:
    tooltipAnchorType:
      init: ANCHOR_NONE
      type: string
    tooltipLines:
      init: 0
      type: number
    tooltipOwner:
      nilable: true
      type: frame
  inherits:
    Frame: {}
  methods:
    AddAtlas: {}
    AddDoubleLine: {}
    AddFontStrings: {}
    AddLine: {}
    AddTexture: {}
    AppendText: {}
    ClearLines: {}
    CopyTooltip: {}
    FadeOut: {}
    GetAnchorType:
      getter:
      - name: tooltipAnchorType
    GetCustomLineSpacing: {}
    GetMinimumWidth:
      outputs:
      - type: number
    GetOwner:
      getter:
      - name: tooltipOwner
    GetPadding: {}
    IsOwned:
      impl: GameTooltip/IsOwned
    NumLines:
      getter:
      - name: tooltipLines
    SetAllowShowWithNoLines: {}
    SetAnchorType: {}
    SetCustomLineSpacing: {}
    SetFrameStack: {}
    SetMinimumWidth: {}
    SetObjectTooltipPosition: {}
    SetOwner:
      impl: GameTooltip/SetOwner
    SetPadding: {}
    SetShrinkToFitWrapped: {}
    SetText: {}
LayeredRegion:
  fields:
    layer:
      init: ARTWORK
      type: string
    sublevel:
      init: 0
      type: number
    vertexColorA:
      init: 1
      type: number
    vertexColorB:
      init: 1
      type: number
    vertexColorG:
      init: 1
      type: number
    vertexColorR:
      init: 1
      type: number
  inherits:
    Region: {}
  methods:
    GetDrawLayer:
      getter:
      - name: layer
      - name: sublevel
    SetDrawLayer:
      setter:
      - name: layer
      - name: sublevel
        nilable: true
    SetVertexColor:
      impl: LayeredRegion/SetVertexColor
  virtual: true
Line:
  fields:
    thickness:
      init: 1
      type: number
  inherits:
    TextureBase: {}
  methods:
    GetEndPoint: {}
    GetStartPoint: {}
    GetThickness:
      getter:
      - name: thickness
    SetEndPoint: {}
    SetStartPoint: {}
    SetThickness:
      setter:
      - name: thickness
LineScale:
  inherits:
    Scale: {}
  methods: {}
LineTranslation:
  inherits:
    Translation: {}
  methods: {}
MaskTexture:
  inherits:
    TextureBase: {}
  methods: {}
MessageFrame:
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    AddMessage:
      impl: MessageFrame/AddMessage
    Clear: {}
    GetFadeDuration: {}
    GetFadePower: {}
    GetFading: {}
    GetFontStringByID: {}
    GetInsertMode: {}
    GetTimeVisible: {}
    HasMessageByID: {}
    ResetMessageFadeByID: {}
    SetFadeDuration: {}
    SetFadePower: {}
    SetFading: {}
    SetInsertMode: {}
    SetTimeVisible: {}
Minimap:
  inherits:
    Frame: {}
  methods:
    GetPingPosition: {}
    GetZoom:
      outputs:
      - type: number
    GetZoomLevels:
      outputs:
      - type: number
    PingLocation: {}
    SetArchBlobInsideAlpha: {}
    SetArchBlobInsideTexture: {}
    SetArchBlobOutsideAlpha: {}
    SetArchBlobOutsideTexture: {}
    SetArchBlobRingAlpha: {}
    SetArchBlobRingScalar: {}
    SetArchBlobRingTexture: {}
    SetBlipTexture: {}
    SetCorpsePOIArrowTexture: {}
    SetIconTexture: {}
    SetMaskTexture: {}
    SetPlayerTexture: {}
    SetPOIArrowTexture: {}
    SetQuestBlobInsideAlpha: {}
    SetQuestBlobInsideTexture: {}
    SetQuestBlobOutsideAlpha: {}
    SetQuestBlobOutsideSelectedTexture: {}
    SetQuestBlobOutsideTexture: {}
    SetQuestBlobRingAlpha: {}
    SetQuestBlobRingScalar: {}
    SetQuestBlobRingTexture: {}
    SetStaticPOIArrowTexture: {}
    SetTaskBlobInsideAlpha: {}
    SetTaskBlobInsideTexture: {}
    SetTaskBlobOutsideAlpha: {}
    SetTaskBlobOutsideSelectedTexture: {}
    SetTaskBlobOutsideTexture: {}
    SetTaskBlobRingAlpha: {}
    SetTaskBlobRingScalar: {}
    SetTaskBlobRingTexture: {}
    SetZoom: {}
    UpdateBlips: {}
Model:
  fields:
    modelScale:
      type: number
  inherits:
    Frame: {}
  methods:
    AdvanceTime: {}
    ClearFog: {}
    ClearModel: {}
    ClearTransform: {}
    GetCameraDistance: {}
    GetCameraFacing: {}
    GetCameraPosition: {}
    GetCameraRoll: {}
    GetCameraTarget: {}
    GetDesaturation: {}
    GetFacing: {}
    GetFogColor: {}
    GetFogFar: {}
    GetFogNear: {}
    GetLight: {}
    GetModelAlpha: {}
    GetModelDrawLayer: {}
    GetModelFileID: {}
    GetModelScale:
      getter:
      - name: modelScale
    GetPaused: {}
    GetPitch: {}
    GetPosition: {}
    GetRoll: {}
    GetShadowEffect: {}
    GetViewInsets: {}
    GetViewTranslation: {}
    GetWorldScale: {}
    HasAttachmentPoints: {}
    HasCustomCamera: {}
    IsUsingModelCenterToTransform: {}
    MakeCurrentCameraCustom: {}
    ReplaceIconTexture: {}
    SetCamera: {}
    SetCameraDistance: {}
    SetCameraFacing: {}
    SetCameraPosition: {}
    SetCameraRoll: {}
    SetCameraTarget: {}
    SetCustomCamera: {}
    SetDesaturation: {}
    SetFacing: {}
    SetFogColor: {}
    SetFogFar: {}
    SetFogNear: {}
    SetGlow: {}
    SetLight: {}
    SetModel: {}
    SetModelAlpha: {}
    SetModelDrawLayer: {}
    SetModelScale:
      setter:
      - name: modelScale
    SetParticlesEnabled: {}
    SetPaused: {}
    SetPitch: {}
    SetPosition: {}
    SetRoll: {}
    SetSequence: {}
    SetSequenceTime: {}
    SetShadowEffect: {}
    SetTransform: {}
    SetViewInsets: {}
    SetViewTranslation: {}
    TransformCameraSpaceToModelSpace:
      impl: Model/TransformCameraSpaceToModelSpace
    UseModelCenterToTransform: {}
ModelScene:
  inherits:
    Frame: {}
  methods:
    ClearFog: {}
    CreateActor:
      impl: ModelScene/CreateActor
    GetActorAtIndex: {}
    GetCameraFarClip: {}
    GetCameraFieldOfView: {}
    GetCameraForward: {}
    GetCameraNearClip: {}
    GetCameraPosition: {}
    GetCameraRight: {}
    GetCameraUp: {}
    GetDrawLayer: {}
    GetFogColor: {}
    GetFogFar: {}
    GetFogNear: {}
    GetLightAmbientColor: {}
    GetLightDiffuseColor: {}
    GetLightDirection:
      outputs:
      - type: number
      - type: number
      - type: number
    GetLightPosition:
      outputs:
      - type: number
      - type: number
      - type: number
    GetLightType: {}
    GetNumActors: {}
    GetViewInsets:
      outputs:
      - type: number
      - type: number
      - type: number
      - type: number
    GetViewTranslation: {}
    IsLightVisible: {}
    Project3DPointTo2D: {}
    SetCameraFarClip: {}
    SetCameraFieldOfView: {}
    SetCameraNearClip: {}
    SetCameraOrientationByAxisVectors: {}
    SetCameraOrientationByYawPitchRoll: {}
    SetCameraPosition: {}
    SetDesaturation: {}
    SetDrawLayer: {}
    SetFogColor: {}
    SetFogFar: {}
    SetFogNear: {}
    SetLightAmbientColor: {}
    SetLightDiffuseColor: {}
    SetLightDirection: {}
    SetLightPosition: {}
    SetLightType: {}
    SetLightVisible: {}
    SetPaused: {}
    SetViewInsets: {}
    SetViewTranslation: {}
    TakeActor: {}
MouseMixin:
  fields:
    mouseClickEnabled:
      init: true
      type: boolean
    mouseMotionEnabled:
      init: true
      type: boolean
    mouseWheelEnabled:
      init: false
      type: boolean
  inherits: {}
  methods:
    EnableMouse:
      impl: MouseMixin/EnableMouse
    EnableMouseWheel:
      setter:
      - name: mouseWheelEnabled
    IsMouseClickEnabled:
      getter:
      - name: mouseClickEnabled
    IsMouseEnabled:
      impl: MouseMixin/IsMouseEnabled
    IsMouseMotionEnabled:
      getter:
      - name: mouseMotionEnabled
    IsMouseWheelEnabled:
      getter:
      - name: mouseWheelEnabled
    SetMouseClickEnabled:
      setter:
      - name: mouseClickEnabled
    SetMouseMotionEnabled:
      setter:
      - name: mouseMotionEnabled
  virtual: true
MovieFrame:
  inherits:
    Frame: {}
  methods:
    EnableSubtitles: {}
    StartMovie: {}
    StartMovieByName: {}
    StopMovie: {}
OffScreenFrame:
  inherits:
    Frame: {}
  methods:
    ApplySnapshot: {}
    Flush: {}
    GetMaxSnapshots: {}
    IsSnapshotValid: {}
    SetMaxSnapshots: {}
    TakeSnapshot: {}
    TestPrintToFile: {}
    UsesNPOT: {}
ParentedObject:
  inherits:
    ParentedObjectBase: {}
  methods:
    SetParent:
      impl: ParentedObject/SetParent
  virtual: true
ParentedObjectBase:
  fields:
    children:
      type: hlist
    parent:
      nilable: true
      type: uiobject
  inherits:
    UIObject: {}
  methods:
    GetDebugName:
      impl: ParentedObject/GetDebugName
    GetParent:
      getter:
      - name: parent
    GetParentKey: {}
    SetParentKey: {}
  virtual: true
Path:
  inherits:
    Animation: {}
  methods:
    CreateControlPoint:
      impl: Path/CreateControlPoint
    GetControlPoints: {}
    GetCurveType: {}
    GetMaxControlPointOrder: {}
    SetCurveType: {}
PlayerModel:
  inherits:
    Model: {}
  methods:
    ApplySpellVisualKit: {}
    CanSetUnit: {}
    FreezeAnimation: {}
    GetDisplayInfo: {}
    GetDoBlend: {}
    GetKeepModelOnHide: {}
    HasAnimation: {}
    PlayAnimKit: {}
    RefreshCamera: {}
    RefreshUnit: {}
    SetAnimation: {}
    SetBarberShopAlternateForm: {}
    SetCamDistanceScale: {}
    SetCreature: {}
    SetCustomRace: {}
    SetDisplayInfo: {}
    SetDoBlend: {}
    SetItem: {}
    SetItemAppearance: {}
    SetKeepModelOnHide: {}
    SetPortraitZoom: {}
    SetRotation: {}
    SetUnit: {}
    StopAnimKit: {}
    ZeroCachedCenterXY: {}
POIFrame:
  inherits: {}
  methods:
    DrawAll: {}
    DrawBlob: {}
    DrawNone: {}
    EnableMerging: {}
    EnableSmoothing: {}
    GetMapID: {}
    SetBorderAlpha: {}
    SetBorderScalar: {}
    SetBorderTexture: {}
    SetFillAlpha: {}
    SetFillTexture: {}
    SetMapID: {}
    SetMergeThreshold: {}
    SetNumSplinePoints: {}
    UpdateMouseOverTooltip: {}
  virtual: true
QuestPOIFrame:
  inherits:
    Frame: {}
    POIFrame: {}
  methods:
    GetNumTooltips: {}
    GetTooltipIndex: {}
Region:
  fields:
    animationGroups:
      init: {}
      type: table
    bottom:
      init: 0
      type: number
    explicitlyProtected:
      init: false
      type: boolean
    height:
      init: 0
      type: number
    isIgnoringParentAlpha:
      init: false
      type: boolean
    isIgnoringParentScale:
      init: false
      type: boolean
    left:
      init: 0
      type: number
    points:
      init: {}
      type: table
    width:
      init: 0
      type: number
  inherits:
    MouseMixin: {}
    ParentedObject: {}
    RegionBase: {}
  methods:
    AdjustPointsOffset: {}
    CanChangeProtectedState: {}
    ClearAllPoints:
      impl: Region/ClearAllPoints
    ClearPoint: {}
    ClearPointsOffset: {}
    CreateAnimationGroup:
      impl: Region/CreateAnimationGroup
    GetAnimationGroups:
      impl: Region/GetAnimationGroups
    GetBottom:
      getter:
      - name: bottom
    GetCenter:
      impl: Region/GetCenter
    GetEffectiveScale:
      impl: Region/GetEffectiveScale
    GetHeight:
      getter:
      - name: height
    GetLeft:
      getter:
      - name: left
    GetNumPoints:
      impl: Region/GetNumPoints
    GetPoint:
      impl: Region/GetPoint
    GetPointByName: {}
    GetRect:
      getter:
      - name: bottom
      - name: left
      - name: width
      - name: height
    GetRight:
      impl: Region/GetRight
    GetScaledRect:
      impl: Region/GetScaledRect
    GetSize:
      getter:
      - name: width
      - name: height
    GetSourceLocation: {}
    GetTop:
      impl: Region/GetTop
    GetWidth:
      getter:
      - name: width
    IsAnchoringRestricted: {}
    IsDragging: {}
    IsIgnoringParentAlpha:
      getter:
      - name: isIgnoringParentAlpha
    IsIgnoringParentScale:
      getter:
      - name: isIgnoringParentScale
    IsMouseOver: {}
    IsObjectLoaded: {}
    IsProtected:
      impl: Region/IsProtected
    IsRectValid: {}
    SetAllPoints:
      impl: Region/SetAllPoints
    SetHeight:
      setter:
      - name: height
    SetIgnoreParentAlpha:
      setter:
      - name: isIgnoringParentAlpha
    SetIgnoreParentScale:
      setter:
      - name: isIgnoringParentScale
    SetPassThroughButtons: {}
    SetPoint:
      impl: Region/SetPoint
    SetSize:
      setter:
      - name: width
      - name: height
    SetWidth:
      setter:
      - name: width
    StopAnimating: {}
  virtual: true
RegionBase:
  fields:
    alpha:
      init: 1
      type: number
    scale:
      init: 1
      type: number
    shown:
      init: true
      type: boolean
  inherits: {}
  methods:
    GetAlpha:
      getter:
      - name: alpha
    GetScale:
      getter:
      - name: scale
    Hide:
      impl: Region/Hide
    IsShown:
      getter:
      - name: shown
    IsVisible:
      impl: Region/IsVisible
    SetAlpha:
      impl: Region/SetAlpha
    SetScale:
      impl: Region/SetScale
    SetShown:
      impl: Region/SetShown
    Show:
      impl: Region/Show
  virtual: true
Rotation:
  inherits:
    Animation: {}
  methods:
    GetDegrees: {}
    GetOrigin: {}
    GetRadians: {}
    SetDegrees: {}
    SetOrigin: {}
    SetRadians: {}
Scale:
  inherits:
    Animation: {}
  methods:
    GetOrigin: {}
    GetScale: {}
    GetScaleFrom: {}
    GetScaleTo: {}
    SetOrigin: {}
    SetScale: {}
    SetScaleFrom: {}
    SetScaleTo: {}
ScenarioPOIFrame:
  inherits:
    Frame: {}
    POIFrame: {}
  methods:
    GetScenarioTooltipText: {}
ScriptObject:
  inherits:
    ScriptObjectBase: {}
  methods:
    GetScript:
      impl: ScriptObject/GetScript
    HasScript:
      impl: ScriptObject/HasScript
    HookScript:
      impl: ScriptObject/HookScript
    SetScript:
      impl: ScriptObject/SetScript
  virtual: true
ScriptObjectBase:
  fields:
    scripts:
      init:
        0: {}
        1: {}
        2: {}
      type: table
  inherits: {}
  methods: {}
  virtual: true
ScrollFrame:
  fields:
    scrollChild:
      nilable: true
      type: frame
  inherits:
    Frame: {}
  methods:
    GetHorizontalScroll:
      outputs:
      - type: number
    GetHorizontalScrollRange:
      outputs:
      - type: number
    GetScrollChild:
      getter:
      - name: scrollChild
    GetVerticalScroll:
      outputs:
      - type: number
    GetVerticalScrollRange:
      outputs:
      - type: number
    SetHorizontalScroll: {}
    SetScrollChild:
      impl: ScrollFrame/SetScrollChild
    SetVerticalScroll: {}
    UpdateScrollChildRect: {}
SimpleHTML:
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    GetContentHeight:
      outputs:
      - type: number
    GetHyperlinkFormat: {}
    GetTextData: {}
    SetHyperlinkFormat: {}
    SetText: {}
Slider:
  fields:
    enabled:
      init: true
      type: boolean
    max:
      init: 0
      type: number
    min:
      init: 0
      type: number
    thumbTexture:
      nilable: true
      type: texture
    value:
      init: 0
      type: number
  inherits:
    Frame: {}
  methods:
    Disable:
      impl: Slider/Disable
    Enable:
      impl: Slider/Enable
    GetMinMaxValues:
      getter:
      - name: min
      - name: max
    GetObeyStepOnDrag: {}
    GetOrientation: {}
    GetStepsPerPage: {}
    GetThumbTexture:
      getter:
      - name: thumbTexture
    GetValue:
      getter:
      - name: value
    GetValueStep: {}
    IsDraggingThumb: {}
    IsEnabled: {}
    SetEnabled: {}
    SetMinMaxValues:
      setter:
      - name: min
      - name: max
    SetObeyStepOnDrag: {}
    SetOrientation: {}
    SetStepsPerPage: {}
    SetThumbTexture:
      setter:
      - name: thumbTexture
    SetValue:
      setter:
      - name: value
    SetValueStep: {}
StatusBar:
  fields:
    max:
      init: 0
      type: number
    min:
      init: 0
      type: number
    statusBarTexture:
      type: texture
    value:
      init: 0
      type: number
  inherits:
    Frame: {}
  methods:
    GetFillStyle: {}
    GetMinMaxValues:
      getter:
      - name: min
      - name: max
    GetOrientation: {}
    GetReverseFill: {}
    GetRotatesTexture: {}
    GetStatusBarColor:
      impl: StatusBar/GetStatusBarColor
    GetStatusBarDesaturation: {}
    GetStatusBarTexture:
      getter:
      - name: statusBarTexture
    GetValue:
      getter:
      - name: value
    IsStatusBarDesaturated: {}
    SetColorFill: {}
    SetFillStyle: {}
    SetMinMaxValues:
      setter:
      - name: min
      - name: max
    SetOrientation: {}
    SetReverseFill: {}
    SetRotatesTexture: {}
    SetStatusBarColor:
      impl: StatusBar/SetStatusBarColor
    SetStatusBarDesaturated: {}
    SetStatusBarDesaturation: {}
    SetStatusBarTexture:
      impl: StatusBar/SetStatusBarTexture
    SetValue:
      setter:
      - name: value
TabardModel:
  inherits:
    PlayerModel: {}
  methods:
    CanSaveTabardNow: {}
    CycleVariation: {}
    GetLowerBackgroundFileName: {}
    GetLowerEmblemFile: {}
    GetLowerEmblemTexture: {}
    GetUpperBackgroundFileName: {}
    GetUpperEmblemFile: {}
    GetUpperEmblemTexture: {}
    InitializeTabardColors: {}
    Save: {}
Texture:
  inherits:
    TextureBase: {}
  methods:
    AddMaskTexture: {}
    GetMaskTexture: {}
    GetNumMaskTextures: {}
    RemoveMaskTexture: {}
TextureBase:
  fields:
    blendMode:
      init: BLEND
      type: string
    blx:
      init: 0
      type: number
    bly:
      init: 1
      type: number
    brx:
      init: 1
      type: number
    bry:
      init: 1
      type: number
    colorTextureA:
      nilable: true
      type: number
    colorTextureB:
      nilable: true
      type: number
    colorTextureG:
      nilable: true
      type: number
    colorTextureR:
      nilable: true
      type: number
    horizTile:
      init: false
      type: boolean
    maskName:
      nilable: true
      type: string
    texture:
      nilable: true
      type: string
    tlx:
      init: 0
      type: number
    tly:
      init: 0
      type: number
    trx:
      init: 1
      type: number
    try:
      init: 0
      type: number
    vertTile:
      init: false
      type: boolean
  inherits:
    LayeredRegion: {}
    ScriptObject: {}
  methods:
    GetAtlas: {}
    GetBlendMode:
      getter:
      - name: blendMode
    GetDesaturation: {}
    GetHorizTile:
      getter:
      - name: horizTile
    GetRotation: {}
    GetTexCoord:
      getter:
      - name: tlx
      - name: tly
      - name: blx
      - name: bly
      - name: trx
      - name: try
      - name: brx
      - name: bry
    GetTexelSnappingBias: {}
    GetTexture:
      impl: Texture/GetTexture
    GetTextureFileID: {}
    GetTextureFilePath: {}
    GetVertexColor:
      getter:
      - name: vertexColorR
      - name: vertexColorG
      - name: vertexColorB
      - name: vertexColorA
    GetVertexOffset: {}
    GetVertTile:
      getter:
      - name: vertTile
    IsBlockingLoadRequested: {}
    IsDesaturated: {}
    IsSnappingToPixelGrid: {}
    SetAtlas:
      impl: Texture/SetAtlas
    SetBlendMode:
      setter:
      - name: blendMode
    SetBlockingLoadsRequested: {}
    SetColorTexture:
      impl: Texture/SetColorTexture
    SetDesaturated: {}
    SetDesaturation: {}
    SetGradient: {}
    SetHorizTile:
      setter:
      - name: horizTile
    SetMask:
      setter:
      - name: maskName
    SetRotation: {}
    SetSnapToPixelGrid: {}
    SetTexCoord:
      impl: Texture/SetTexCoord
    SetTexelSnappingBias: {}
    SetTexture:
      impl: Texture/SetTexture
    SetVertexOffset: {}
    SetVertTile:
      setter:
      - name: vertTile
  virtual: true
TextureCoordTranslation:
  inherits:
    Animation: {}
  methods: {}
Translation:
  inherits:
    Animation: {}
  methods:
    GetOffset: {}
    SetOffset: {}
UIObject:
  fields:
    name:
      type: string
  inherits:
    ForbiddenMixin: {}
  methods:
    GetName:
      getter:
      - name: name
    GetObjectType:
      impl: UIObject/GetObjectType
    IsObjectType:
      impl: UIObject/IsObjectType
  virtual: true
UnitPositionFrame:
  inherits:
    Frame: {}
  methods:
    AddUnit: {}
    AddUnitAtlas: {}
    AddUnitFileID: {}
    ClearUnits: {}
    FinalizeUnits: {}
    GetMouseOverUnits: {}
    GetPlayerPingScale: {}
    GetUiMapID: {}
    SetPlayerPingScale: {}
    SetPlayerPingTexture: {}
    SetUiMapID: {}
    SetUnitColor: {}
    StartPlayerPing: {}
    StopPlayerPing: {}
WorldFrame:
  inherits:
    Frame: {}
  methods: {}

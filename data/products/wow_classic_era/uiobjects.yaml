---
Actor:
  fields: {}
  inherits:
    ParentedObjectBase: {}
    RegionBase: {}
    ScriptObjectBase: {}
  methods:
    ClearModel:
      inputs: {}
      outputs: {}
    GetActiveBoundingBox:
      inputs: {}
      outputs:
      - name: boxBottom
        type:
          structure: vector3
      - name: boxTop
        type:
          structure: vector3
    GetAnimation:
      inputs: {}
      outputs:
      - name: animation
        type: number
    GetAnimationBlendOperation:
      inputs: {}
      outputs:
      - name: blendOp
        type:
          enum: ModelBlendOperation
    GetAnimationVariation:
      inputs: {}
      outputs:
      - name: variation
        type: number
    GetDesaturation:
      inputs: {}
      outputs:
      - name: strength
        type: number
    GetMaxBoundingBox:
      inputs: {}
      outputs:
      - name: boxBottom
        type:
          structure: vector3
      - name: boxTop
        type:
          structure: vector3
    GetModelFileID:
      inputs: {}
      outputs:
      - name: file
        type: number
    GetModelPath:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetModelUnitGUID:
      inputs: {}
      outputs:
      - name: guid
        type: string
    GetParticleOverrideScale:
      inputs: {}
      outputs:
      - name: scale
        nilable: true
        type: number
    GetPitch:
      inputs: {}
      outputs:
      - name: pitch
        type: number
    GetPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
    GetRoll:
      inputs: {}
      outputs:
      - name: roll
        type: number
    GetSpellVisualKit:
      inputs: {}
      outputs:
      - name: spellVisualKitID
        type: number
    GetYaw:
      inputs: {}
      outputs:
      - name: yaw
        type: number
    IsLoaded:
      inputs: {}
      outputs:
      - name: isLoaded
        type: boolean
    IsUsingCenterForOrigin:
      inputs: {}
      outputs:
      - name: x
        type: boolean
      - name: y
        type: boolean
      - name: z
        type: boolean
    PlayAnimationKit:
      inputs:
      - name: animationKit
        type: number
      - default: false
        name: isLooping
        type: boolean
      outputs: {}
    SetAnimation:
      inputs:
      - name: animation
        type: number
      - name: variation
        nilable: true
        type: number
      - default: 1
        name: animSpeed
        type: number
      - default: 0
        name: animOffsetSeconds
        type: number
      outputs: {}
    SetAnimationBlendOperation:
      inputs:
      - name: blendOp
        type:
          enum: ModelBlendOperation
      outputs: {}
    SetDesaturation:
      inputs:
      - name: strength
        type: number
      outputs: {}
    SetModelByCreatureDisplayID:
      inputs:
      - name: creatureDisplayID
        type: number
      - default: false
        name: useActivePlayerCustomizations
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetModelByFileID:
      inputs:
      - name: asset
        type: string
      - default: false
        name: useMips
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetModelByPath:
      inputs:
      - name: asset
        type: string
      - default: false
        name: useMips
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetModelByUnit:
      inputs:
      - name: unit
        type: unit
      - default: false
        name: sheatheWeapons
        type: boolean
      - default: true
        name: autoDress
        type: boolean
      - default: false
        name: hideWeapons
        type: boolean
      - default: true
        name: usePlayerNativeForm
        type: boolean
      - default: false
        name: holdBowString
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetParticleOverrideScale:
      inputs:
      - name: scale
        nilable: true
        type: number
      outputs: {}
    SetPitch:
      inputs:
      - name: pitch
        type: number
      outputs: {}
    SetPlayerModelFromGlues:
      inputs:
      - name: characterIndex
        nilable: true
        type: number
      - default: false
        name: sheatheWeapons
        type: boolean
      - default: true
        name: autoDress
        type: boolean
      - default: false
        name: hideWeapons
        type: boolean
      - default: true
        name: usePlayerNativeForm
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetPosition:
      inputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
      outputs: {}
    SetRoll:
      inputs:
      - name: roll
        type: number
      outputs: {}
    SetSpellVisualKit:
      inputs:
      - default: 0
        name: spellVisualKitID
        type: number
      - default: false
        name: oneShot
        type: boolean
      outputs: {}
    SetUseCenterForOrigin:
      inputs:
      - default: false
        name: x
        type: boolean
      - default: false
        name: y
        type: boolean
      - default: false
        name: z
        type: boolean
      outputs: {}
    SetYaw:
      inputs:
      - name: yaw
        type: number
      outputs: {}
    StopAnimationKit:
      inputs: {}
      outputs: {}
    TryOn:
      inputs:
      - name: itemLinkOrItemModifiedAppearanceID
        type: string
      - name: handSlotName
        nilable: true
        type: string
      - default: 0
        name: spellEnchantmentID
        type: number
      outputs:
      - name: reason
        nilable: true
        type:
          enum: ItemTryOnReason
  objectType: ModelSceneActor
Alpha:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetFromAlpha:
      inputs: {}
      outputs:
      - name: normalizedAlpha
        type: number
    GetToAlpha:
      inputs: {}
      outputs:
      - name: normalizedAlpha
        type: number
    SetFromAlpha:
      inputs:
      - name: normalizedAlpha
        type: number
      outputs: {}
    SetToAlpha:
      inputs:
      - name: normalizedAlpha
        type: number
      outputs: {}
Animation:
  fields:
    endDelay:
      init: 0
      type: number
    smoothing:
      init: NONE
      type: SmoothingType
    startDelay:
      init: 0
      type: number
  inherits:
    ParentedObject: {}
    ScriptObject: {}
  methods:
    GetDuration:
      inputs: {}
      outputs:
      - name: durationSec
        type: number
    GetElapsed:
      inputs: {}
      outputs:
      - name: elapsedSec
        type: number
    GetEndDelay:
      getter:
      - name: endDelay
    GetOrder:
      inputs: {}
      outputs:
      - name: order
        type: number
    GetProgress:
      inputs: {}
      outputs:
      - name: progress
        type: number
    GetRegionParent:
      impl: Animation/GetRegionParent
      inputs: {}
      outputs:
      - name: region
        type: UIObject
    GetSmoothing:
      getter:
      - name: smoothing
    GetSmoothProgress:
      inputs: {}
      outputs:
      - name: progress
        type: number
    GetStartDelay:
      getter:
      - name: startDelay
    GetTarget:
      impl: Animation/GetTarget
      inputs: {}
      outputs:
      - name: target
        type: UIObject
    IsDelaying:
      inputs: {}
      outputs:
      - name: isDelaying
        type: boolean
    IsDone:
      inputs: {}
      outputs:
      - name: isDone
        type: boolean
    IsPaused:
      inputs: {}
      outputs:
      - name: isPaused
        type: boolean
    IsPlaying:
      inputs: {}
      outputs:
      - name: isPlaying
        type: boolean
    IsStopped:
      inputs: {}
      outputs:
      - name: isStopped
        type: boolean
    Pause:
      inputs: {}
      outputs: {}
    Play:
      inputs: {}
      outputs: {}
    Restart:
      inputs: {}
      outputs: {}
    SetChildKey:
      inputs:
      - name: childKey
        type: string
      outputs:
      - name: success
        type: boolean
    SetDuration:
      inputs:
      - name: durationSec
        type: number
      - default: true
        name: recomputeGroupDuration
        type: boolean
      outputs: {}
    SetEndDelay:
      setter:
      - name: endDelay
    SetOrder:
      inputs:
      - name: newOrder
        type: number
      outputs: {}
    SetPlaying:
      inputs:
      - name: play
        type: boolean
      outputs: {}
    SetSmoothing:
      setter:
      - name: smoothing
    SetSmoothProgress:
      inputs:
      - name: durationSec
        type: number
      outputs: {}
    SetStartDelay:
      setter:
      - name: startDelay
    SetTarget:
      inputs:
      - name: target
        type: UIObject
      outputs:
      - name: success
        type: boolean
    SetTargetKey:
      inputs:
      - name: key
        type: string
      outputs:
      - name: success
        type: boolean
    SetTargetName:
      inputs:
      - name: name
        type: string
      outputs:
      - name: success
        type: boolean
    SetTargetParent:
      inputs: {}
      outputs:
      - name: success
        type: boolean
    Stop:
      inputs: {}
      outputs: {}
AnimationGroup:
  fields:
    looping:
      init: NONE
      type: LoopType
  inherits:
    ParentedObjectBase: {}
    ScriptObject: {}
  methods:
    CreateAnimation:
      impl: AnimationGroup/CreateAnimation
      inputs:
      - name: animationType
        nilable: true
        type: string
      - name: name
        nilable: true
        type: string
      - name: templateName
        nilable: true
        type: string
      outputs:
      - name: anim
        type: Animation
    Finish:
      inputs: {}
      outputs: {}
    GetAnimations:
      impl: AnimationGroup/GetAnimations
      inputs: {}
      outputs:
      - name: scriptObject
        type: UIObject
      outstride: 1
    GetAnimationSpeedMultiplier:
      inputs: {}
      outputs:
      - name: animationSpeedMultiplier
        type: number
    GetDuration:
      inputs: {}
      outputs:
      - name: durationSec
        type: number
    GetElapsed:
      inputs: {}
      outputs:
      - name: elapsedSec
        type: number
    GetLooping:
      getter:
      - name: looping
    GetLoopState:
      inputs: {}
      outputs:
      - name: loopState
        type: string
    GetProgress:
      inputs: {}
      outputs:
      - name: progress
        type: number
    IsDone:
      inputs: {}
      outputs:
      - name: isDone
        type: boolean
    IsPaused:
      inputs: {}
      outputs:
      - name: isPaused
        type: boolean
    IsPendingFinish:
      inputs: {}
      outputs:
      - name: isPendingFinish
        type: boolean
    IsPlaying:
      inputs: {}
      outputs:
      - name: isPlaying
        type: boolean
    IsReverse:
      inputs: {}
      outputs:
      - name: isReverse
        type: boolean
    IsSetToFinalAlpha:
      inputs: {}
      outputs:
      - name: isSetToFinalAlpha
        type: boolean
    Pause:
      inputs: {}
      outputs: {}
    Play:
      inputs:
      - default: false
        name: reverse
        type: boolean
      - default: 0
        name: offset
        type: number
      outputs: {}
    RemoveAnimations:
      inputs: {}
      outputs: {}
    Restart:
      inputs:
      - default: false
        name: reverse
        type: boolean
      - default: 0
        name: offset
        type: number
      outputs: {}
    SetAnimationSpeedMultiplier:
      inputs:
      - name: animationSpeedMultiplier
        type: number
      outputs: {}
    SetLooping:
      setter:
      - name: looping
    SetPlaying:
      inputs:
      - name: play
        type: boolean
      outputs: {}
    SetToFinalAlpha:
      inputs:
      - name: setToFinalAlpha
        type: boolean
      outputs: {}
    Stop:
      inputs: {}
      outputs: {}
Browser:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
    mouseWheelEnabled: true
    resizable: true
  fields: {}
  inherits:
    Frame: {}
  methods:
    ClearFocus:
      inputs: {}
      outputs: {}
    CopyExternalLink:
      inputs: {}
      outputs: {}
    DeleteCookies:
      inputs: {}
      outputs: {}
    NavigateBack:
      inputs: {}
      outputs: {}
    NavigateForward:
      inputs: {}
      outputs: {}
    NavigateHome:
      inputs:
      - name: urlType
        type: string
      outputs: {}
    NavigateReload:
      inputs: {}
      outputs: {}
    NavigateStop:
      inputs: {}
      outputs: {}
    NavigateTo:
      inputs:
      - name: url
        type: string
      outputs: {}
    OpenExternalLink:
      inputs: {}
      outputs: {}
    OpenTicket:
      inputs:
      - name: index
        type: number
      outputs: {}
    SetFocus:
      inputs: {}
      outputs: {}
    SetZoom:
      inputs:
      - name: zoom
        type: number
      outputs: {}
Button:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    beingClicked:
      init: false
      type: boolean
    buttonLocked:
      init: false
      type: boolean
    buttonState:
      init: NORMAL
      type: SimpleButtonStateToken
    disabledTexture:
      nilable: true
      type: Texture
    fontstring:
      nilable: true
      type: FontString
    highlightTexture:
      nilable: true
      type: Texture
    motionScriptsWhileDisabled:
      init: false
      type: boolean
    normalFontObject:
      nilable: true
      type: Font
    normalTexture:
      nilable: true
      type: Texture
    pushedTextOffsetX:
      init: 0
      type: number
    pushedTextOffsetY:
      init: 0
      type: number
    pushedTexture:
      nilable: true
      type: Texture
    registeredClicks:
      init:
        leftbuttonup: true
      type: table
  inherits:
    Frame: {}
  methods:
    ClearDisabledTexture:
      inputs: {}
      outputs: {}
    ClearHighlightTexture:
      inputs: {}
      outputs: {}
    ClearNormalTexture:
      inputs: {}
      outputs: {}
    ClearPushedTexture:
      inputs: {}
      outputs: {}
    Click:
      impl: Button/Click
      inputs:
      - default: LeftButton
        name: button
        type: string
      - default: false
        name: isDown
        type: boolean
      outputs: {}
    Disable:
      impl: Button/Disable
      inputs: {}
      outputs: {}
    Enable:
      impl: Button/Enable
      inputs: {}
      outputs: {}
    GetButtonState:
      getter:
      - name: buttonState
    GetDisabledFontObject:
      inputs: {}
      outputs:
      - name: font
        type: table
    GetDisabledTexture:
      getter:
      - name: disabledTexture
    GetFontString:
      getter:
      - name: fontstring
    GetHighlightFontObject:
      inputs: {}
      outputs:
      - name: font
        type: table
    GetHighlightTexture:
      getter:
      - name: highlightTexture
    GetMotionScriptsWhileDisabled:
      getter:
      - name: motionScriptsWhileDisabled
    GetNormalFontObject:
      getter:
      - name: normalFontObject
    GetNormalTexture:
      getter:
      - name: normalTexture
    GetPushedTextOffset:
      getter:
      - name: pushedTextOffsetX
      - name: pushedTextOffsetY
    GetPushedTexture:
      getter:
      - name: pushedTexture
    GetText:
      impl: Button/GetText
    GetTextHeight:
      inputs: {}
      outputs:
      - name: height
        type: number
    GetTextWidth:
      inputs: {}
      outputs:
      - name: width
        type: number
    IsEnabled:
      impl: Button/IsEnabled
    RegisterForClicks:
      impl: Button/RegisterForClicks
    RegisterForMouse:
      inputs:
      - name: unpackedPrimitiveType
        type: number
      instride: 1
      outputs: {}
    SetButtonState:
      impl: Button/SetButtonState
      inputs:
      - name: buttonState
        type: SimpleButtonStateToken
      - default: false
        name: lock
        type: boolean
      outputs: {}
    SetDisabledAtlas:
      impl: Button/SetDisabledAtlas
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetDisabledFontObject:
      inputs:
      - name: font
        type: table
      outputs: {}
    SetDisabledTexture:
      impl: Button/SetDisabledTexture
    SetEnabled:
      impl: Button/SetEnabled
    SetFontString:
      impl: Button/SetFontString
      inputs:
      - name: fontString
        type: FontString
      outputs: {}
    SetFormattedText:
      impl: Button/SetFormattedText
    SetHighlightAtlas:
      impl: Button/SetHighlightAtlas
    SetHighlightFontObject:
      inputs:
      - name: font
        type: table
      outputs: {}
    SetHighlightTexture:
      impl: Button/SetHighlightTexture
    SetMotionScriptsWhileDisabled:
      setter:
      - name: motionScriptsWhileDisabled
    SetNormalAtlas:
      impl: Button/SetNormalAtlas
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetNormalFontObject:
      setter:
      - name: normalFontObject
    SetNormalTexture:
      impl: Button/SetNormalTexture
    SetPushedAtlas:
      impl: Button/SetPushedAtlas
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetPushedTextOffset:
      setter:
      - name: pushedTextOffsetX
      - name: pushedTextOffsetY
    SetPushedTexture:
      impl: Button/SetPushedTexture
    SetText:
      impl: Button/SetText
CheckButton:
  fields:
    checked:
      init: false
      type: boolean
    checkedTexture:
      nilable: true
      type: Texture
    disabledCheckedTexture:
      nilable: true
      type: Texture
  inherits:
    Button: {}
  methods:
    GetChecked:
      getter:
      - name: checked
    GetCheckedTexture:
      getter:
      - name: checkedTexture
    GetDisabledCheckedTexture:
      getter:
      - name: disabledCheckedTexture
    SetChecked:
      impl: CheckButton/SetChecked
    SetCheckedTexture:
      impl: CheckButton/SetCheckedTexture
    SetDisabledCheckedTexture:
      setter:
      - name: disabledCheckedTexture
Checkout:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
    mouseWheelEnabled: true
    resizable: true
  fields: {}
  inherits:
    Frame: {}
  methods:
    CancelOpenCheckout:
      inputs: {}
      outputs: {}
    ClearFocus:
      inputs: {}
      outputs: {}
    CloseCheckout:
      inputs: {}
      outputs: {}
    CopyExternalLink:
      inputs: {}
      outputs: {}
    OpenCheckout:
      inputs:
      - name: checkoutID
        type: number
      outputs:
      - name: wasOpened
        type: boolean
    OpenExternalLink:
      inputs: {}
      outputs: {}
    SetFocus:
      inputs: {}
      outputs: {}
    SetZoom:
      inputs:
      - name: zoomLevel
        type: number
      outputs: {}
  objectType: BlizzardCheckout
CinematicModel:
  fields: {}
  inherits:
    PlayerModel: {}
  methods:
    EquipItem:
      inputs:
      - name: itemID
        type: number
      outputs: {}
    InitializeCamera:
      inputs:
      - default: 0
        name: scaleFactor
        type: number
      outputs: {}
    InitializePanCamera:
      inputs:
      - default: 0
        name: scaleFactor
        type: number
      outputs: {}
    SetAnimOffset:
      inputs:
      - name: offset
        type: number
      outputs: {}
    SetCreatureData:
      inputs:
      - name: creatureID
        type: number
      outputs: {}
    SetFacingLeft:
      inputs:
      - default: false
        name: isFacingLeft
        type: boolean
      outputs: {}
    SetFadeTimes:
      inputs:
      - name: fadeInSeconds
        type: number
      - name: fadeOutSeconds
        type: number
      outputs: {}
    SetHeightFactor:
      inputs:
      - name: factor
        type: number
      outputs: {}
    SetJumpInfo:
      inputs:
      - name: jumpLength
        type: number
      - name: jumpHeight
        type: number
      outputs: {}
    SetPanDistance:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetSpellVisualKit:
      inputs:
      - name: visualKitID
        type: number
      outputs: {}
    SetTargetDistance:
      inputs:
      - name: scale
        type: number
      outputs: {}
    StartPan:
      inputs:
      - name: panType
        type: number
      - name: durationSeconds
        type: number
      - default: false
        name: doFade
        type: boolean
      - default: 0
        name: visKitID
        type: number
      - default: 0
        name: startPositionScale
        type: number
      - default: 1
        name: speedMultiplier
        type: number
      outputs: {}
    StopPan:
      inputs: {}
      outputs: {}
    UnequipItems:
      inputs: {}
      outputs: {}
ColorSelect:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    colorAlphaTexture:
      nilable: true
      type: Texture
    colorAlphaThumbTexture:
      nilable: true
      type: Texture
    colorValueTexture:
      nilable: true
      type: Texture
    colorValueThumbTexture:
      nilable: true
      type: Texture
    colorWheelTexture:
      nilable: true
      type: Texture
    colorWheelThumbTexture:
      nilable: true
      type: Texture
  inherits:
    Frame: {}
  methods:
    ClearColorWheelTexture:
      inputs: {}
      outputs: {}
    GetColorAlpha:
      inputs: {}
      outputs:
      - name: alpha
        type: number
    GetColorAlphaTexture:
      getter:
      - name: colorAlphaTexture
    GetColorAlphaThumbTexture:
      getter:
      - name: colorAlphaThumbTexture
    GetColorHSV:
      inputs: {}
      outputs:
      - name: hsvX
        type: number
      - name: hsvY
        type: number
      - name: hsvZ
        type: number
    GetColorRGB:
      inputs: {}
      outputs:
      - name: rgbR
        type: number
      - name: rgbG
        type: number
      - name: rgbB
        type: number
    GetColorValueTexture:
      getter:
      - name: colorValueTexture
    GetColorValueThumbTexture:
      getter:
      - name: colorValueThumbTexture
    GetColorWheelTexture:
      getter:
      - name: colorWheelTexture
    GetColorWheelThumbTexture:
      getter:
      - name: colorWheelThumbTexture
    SetColorAlpha:
      inputs:
      - name: alpha
        type: number
      outputs: {}
    SetColorAlphaTexture:
      setter:
      - name: colorAlphaTexture
    SetColorAlphaThumbTexture:
      setter:
      - name: colorAlphaThumbTexture
    SetColorHSV:
      inputs:
      - name: hsvX
        type: number
      - name: hsvY
        type: number
      - name: hsvZ
        type: number
      outputs: {}
    SetColorRGB:
      inputs:
      - name: rgbR
        type: number
      - name: rgbG
        type: number
      - name: rgbB
        type: number
      outputs: {}
    SetColorValueTexture:
      setter:
      - name: colorValueTexture
    SetColorValueThumbTexture:
      setter:
      - name: colorValueThumbTexture
    SetColorWheelTexture:
      setter:
      - name: colorWheelTexture
    SetColorWheelThumbTexture:
      setter:
      - name: colorWheelThumbTexture
ControlPoint:
  fields: {}
  inherits:
    ParentedObject: {}
  methods:
    GetOffset:
      inputs: {}
      outputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetOrder:
      inputs: {}
      outputs:
      - name: order
        type: number
    SetOffset:
      inputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
      outputs: {}
    SetOrder:
      inputs:
      - name: order
        type: number
      outputs: {}
Cooldown:
  fields:
    blingTexture:
      nilable: true
      type: Texture
    durationMillis:
      init: 0
      type: number
    edgeTexture:
      nilable: true
      type: Texture
    startTimeMillis:
      init: 0
      type: number
    swipeTexture:
      nilable: true
      type: Texture
  inherits:
    Frame: {}
  methods:
    Clear:
      inputs: {}
      outputs: {}
    GetCooldownDisplayDuration:
      inputs: {}
      outputs:
      - name: duration
        type: number
    GetCooldownDuration:
      inputs: {}
      outputs:
      - name: duration
        type: number
    GetCooldownTimes:
      getter:
      - name: startTimeMillis
      - name: durationMillis
    GetDrawBling:
      inputs: {}
      outputs:
      - name: drawBling
        type: boolean
    GetDrawEdge:
      inputs: {}
      outputs:
      - name: drawEdge
        type: boolean
    GetDrawSwipe:
      inputs: {}
      outputs:
      - name: drawSwipe
        type: boolean
    GetEdgeScale:
      inputs: {}
      outputs:
      - name: edgeScale
        type: number
    GetReverse:
      inputs: {}
      outputs:
      - name: reverse
        type: boolean
    GetRotation:
      inputs: {}
      outputs:
      - name: rotationRadians
        type: number
    IsPaused:
      inputs: {}
      outputs:
      - name: isPaused
        type: boolean
    Pause:
      inputs: {}
      outputs: {}
    Resume:
      inputs: {}
      outputs: {}
    SetBlingTexture:
      setter:
      - name: blingTexture
    SetCooldown:
      inputs:
      - name: start
        type: number
      - name: duration
        type: number
      - default: 1
        name: modRate
        type: number
      outputs: {}
    SetCooldownDuration:
      inputs:
      - name: duration
        type: number
      - default: 1
        name: modRate
        type: number
      outputs: {}
    SetCooldownUNIX:
      inputs:
      - name: start
        type: number
      - name: duration
        type: number
      - default: 1
        name: modRate
        type: number
      outputs: {}
    SetCountdownAbbrevThreshold:
      inputs:
      - name: seconds
        type: number
      outputs: {}
    SetCountdownFont:
      inputs:
      - name: fontName
        type: string
      outputs: {}
    SetDrawBling:
      inputs:
      - default: false
        name: drawBling
        type: boolean
      outputs: {}
    SetDrawEdge:
      inputs:
      - default: false
        name: drawEdge
        type: boolean
      outputs: {}
    SetDrawSwipe:
      inputs:
      - default: false
        name: drawSwipe
        type: boolean
      outputs: {}
    SetEdgeScale:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetEdgeTexture:
      setter:
      - name: edgeTexture
    SetHideCountdownNumbers:
      inputs:
      - default: false
        name: hideNumbers
        type: boolean
      outputs: {}
    SetReverse:
      inputs:
      - default: false
        name: reverse
        type: boolean
      outputs: {}
    SetRotation:
      inputs:
      - name: rotationRadians
        type: number
      outputs: {}
    SetSwipeColor:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: a
        nilable: true
        type: number
      outputs: {}
    SetSwipeTexture:
      setter:
      - name: swipeTexture
    SetTexCoordRange:
      inputs:
      - name: low
        type:
          structure: vector2
      - name: high
        type:
          structure: vector2
      outputs: {}
    SetUseCircularEdge:
      inputs:
      - default: false
        name: useCircularEdge
        type: boolean
      outputs: {}
DressUpModel:
  fields: {}
  inherits:
    PlayerModel: {}
  methods:
    Dress:
      inputs: {}
      outputs: {}
    GetAutoDress:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    GetItemModifiedAppearanceID:
      inputs:
      - name: invSlot
        type: number
      outputs:
      - name: itemModAppearanceID
        type: number
    GetItemTransmogInfo:
      inputs:
      - name: inventorySlot
        type: number
      mayreturnnothing: true
      outputs:
      - name: itemTransmogInfo
        type:
          structure: ItemTransmogInfo
    GetItemTransmogInfoList:
      inputs: {}
      outputs:
      - name: infoList
        type:
          arrayof:
            structure: ItemTransmogInfo
    GetObeyHideInTransmogFlag:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    GetSheathed:
      inputs: {}
      outputs:
      - name: sheathed
        type: boolean
    GetSpellItemEnchantmentID:
      inputs:
      - name: invSlot
        type: number
      outputs:
      - name: spellItemEnchantID
        type: number
    GetUseTransmogChoices:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    GetUseTransmogSkin:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    IsGeoReady:
      inputs: {}
      outputs:
      - name: ready
        type: boolean
    IsSlotAllowed:
      inputs:
      - name: inventorySlots
        type: number
      outputs:
      - name: allowed
        type: boolean
    IsSlotVisible:
      inputs:
      - name: inventorySlots
        type: number
      outputs:
      - name: visible
        type: boolean
    SetAutoDress:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetObeyHideInTransmogFlag:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetSheathed:
      inputs:
      - default: false
        name: sheathed
        type: boolean
      outputs: {}
    SetUseTransmogChoices:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetUseTransmogSkin:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    TryOn:
      inputs:
      - name: linkOrItemModifiedAppearanceID
        type: string
      - name: handSlotName
        nilable: true
        type: string
      - name: spellEnchantID
        nilable: true
        type: number
      outputs: {}
    Undress:
      inputs: {}
      outputs: {}
    UndressSlot:
      inputs:
      - name: inventorySlot
        type: number
      outputs: {}
EditBox:
  fieldinitoverrides:
    justifyh: LEFT
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    editboxText:
      init: ''
      type: string
    enabled:
      init: true
      type: boolean
    historyLines:
      init: 0
      type: number
    isAutoFocus:
      init: true
      type: boolean
    isCountInvisibleLetters:
      init: false
      type: boolean
    isMultiLine:
      init: false
      type: boolean
    isSecureText:
      init: false
      type: boolean
    maxBytes:
      init: 0
      type: number
    maxLetters:
      init: 0
      type: number
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    AddHistoryLine:
      inputs:
      - name: text
        type: string
      outputs: {}
    ClearFocus:
      inputs: {}
      outputs: {}
    ClearHighlightText:
      inputs: {}
      outputs: {}
    ClearHistory:
      inputs: {}
      outputs: {}
    Disable:
      impl: EditBox/Disable
      inputs: {}
      outputs: {}
    Enable:
      impl: EditBox/Enable
      inputs: {}
      outputs: {}
    GetAltArrowKeyMode:
      inputs: {}
      outputs:
      - name: altMode
        type: boolean
    GetBlinkSpeed:
      inputs: {}
      outputs:
      - name: cursorBlinkSpeedSec
        type: number
    GetCursorPosition:
      inputs: {}
      outputs:
      - name: cursorPosition
        type: number
    GetDisplayText:
      inputs: {}
      mayreturnnothing: true
      outputs:
      - name: displayText
        type: string
    GetHighlightColor:
      inputs: {}
      outputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: colorA
        type: number
    GetHistoryLines:
      getter:
      - name: historyLines
    GetInputLanguage:
      inputs: {}
      outputs:
      - name: language
        type: string
    GetMaxBytes:
      getter:
      - name: maxBytes
    GetMaxLetters:
      getter:
      - name: maxLetters
    GetNumber:
      inputs: {}
      outputs:
      - name: number
        nilable: true
        stubnotnil: true
        type: number
    GetNumLetters:
      inputs: {}
      mayreturnnothing: true
      outputs:
      - name: numLetters
        type: number
    GetNumLines:
      inputs: {}
      outputs:
      - name: lines
        type: number
    GetText:
      getter:
      - name: editboxText
    GetTextInsets:
      inputs: {}
      outputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
    GetUTF8CursorPosition:
      inputs: {}
      outputs:
      - name: cursorPosition
        type: number
    GetVisibleTextByteLimit:
      inputs: {}
      outputs:
      - name: maxVisibleBytes
        type: number
    HasFocus:
      inputs: {}
      outputs:
      - name: hasFocus
        type: boolean
    HasText:
      inputs: {}
      outputs:
      - name: hasText
        type: boolean
    HighlightText:
      inputs:
      - default: 0
        name: start
        type: number
      - default: -1
        name: stop
        type: number
      outputs: {}
    Insert:
      impl: EditBox/Insert
      inputs:
      - name: text
        type: string
      outputs: {}
    IsAlphabeticOnly:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    IsAutoFocus:
      getter:
      - name: isAutoFocus
    IsCountInvisibleLetters:
      getter:
      - name: isCountInvisibleLetters
    IsEnabled:
      getter:
      - name: enabled
    IsInIMECompositionMode:
      inputs: {}
      outputs:
      - name: isInIMECompositionMode
        type: boolean
    IsMultiLine:
      getter:
      - name: isMultiLine
    IsNumeric:
      inputs: {}
      outputs:
      - name: isNumeric
        type: boolean
    IsNumericFullRange:
      inputs: {}
      outputs:
      - name: isNumeric
        type: boolean
    IsPassword:
      inputs: {}
      outputs:
      - name: isPassword
        type: boolean
    IsSecureText:
      getter:
      - name: isSecureText
    ResetInputMode:
      inputs: {}
      outputs: {}
    SetAlphabeticOnly:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetAltArrowKeyMode:
      inputs:
      - default: false
        name: altMode
        type: boolean
      outputs: {}
    SetAutoFocus:
      setter:
      - name: isAutoFocus
    SetBlinkSpeed:
      inputs:
      - name: cursorBlinkSpeedSec
        type: number
      outputs: {}
    SetCountInvisibleLetters:
      setter:
      - name: isCountInvisibleLetters
    SetCursorPosition:
      inputs:
      - name: cursorPosition
        type: number
      outputs: {}
    SetEnabled:
      setter:
      - name: enabled
    SetFocus:
      inputs: {}
      outputs: {}
    SetFontStringIgnoreParentAlpha:
      inputs:
      - name: ignoreParentAlpha
        type: boolean
      outputs: {}
    SetHighlightColor:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: a
        nilable: true
        type: number
      outputs: {}
    SetHistoryLines:
      setter:
      - name: historyLines
    SetMaxBytes:
      setter:
      - name: maxBytes
    SetMaxLetters:
      setter:
      - name: maxLetters
    SetMultiLine:
      setter:
      - name: isMultiLine
    SetNumber:
      inputs:
      - name: number
        type: number
      outputs: {}
    SetNumeric:
      inputs:
      - default: false
        name: isNumeric
        type: boolean
      outputs: {}
    SetNumericFullRange:
      inputs:
      - default: false
        name: isNumeric
        type: boolean
      outputs: {}
    SetPassword:
      inputs:
      - default: false
        name: isPassword
        type: boolean
      outputs: {}
    SetSecureText:
      setter:
      - name: isSecureText
    SetSecurityDisablePaste:
      inputs: {}
      outputs: {}
    SetSecurityDisableSetText:
      inputs: {}
      outputs: {}
    SetText:
      setter:
      - name: editboxText
    SetTextInsets:
      inputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
      outputs: {}
    SetVisibleTextByteLimit:
      inputs:
      - name: maxVisibleBytes
        type: number
      outputs: {}
    ToggleInputLanguage:
      inputs: {}
      outputs: {}
FlipBook:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetFlipBookColumns:
      inputs: {}
      outputs:
      - name: columns
        type: number
    GetFlipBookFrameHeight:
      inputs: {}
      outputs:
      - name: height
        type: number
    GetFlipBookFrames:
      inputs: {}
      outputs:
      - name: frames
        type: number
    GetFlipBookFrameWidth:
      inputs: {}
      outputs:
      - name: width
        type: number
    GetFlipBookRows:
      inputs: {}
      outputs:
      - name: rows
        type: number
    SetFlipBookColumns:
      inputs:
      - name: columns
        type: number
      outputs: {}
    SetFlipBookFrameHeight:
      inputs:
      - name: height
        type: number
      outputs: {}
    SetFlipBookFrames:
      inputs:
      - name: frames
        type: number
      outputs: {}
    SetFlipBookFrameWidth:
      inputs:
      - name: width
        type: number
      outputs: {}
    SetFlipBookRows:
      inputs:
      - name: rows
        type: number
      outputs: {}
FogOfWarFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    GetFogOfWarBackgroundAtlas:
      inputs: {}
      outputs:
      - name: atlas
        type: string
    GetFogOfWarBackgroundTexture:
      inputs: {}
      outputs:
      - name: asset
        nilable: true
        type: string
    GetFogOfWarMaskAtlas:
      inputs: {}
      outputs:
      - name: atlas
        type: string
    GetFogOfWarMaskTexture:
      inputs: {}
      outputs:
      - name: asset
        nilable: true
        type: string
    GetMaskScalar:
      inputs: {}
      outputs:
      - name: scalar
        type: number
    GetUiMapID:
      inputs: {}
      outputs:
      - name: uiMapID
        type: number
    SetFogOfWarBackgroundAtlas:
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetFogOfWarBackgroundTexture:
      inputs:
      - name: asset
        type: string
      - name: horizontalTile
        type: boolean
      - name: verticalTile
        type: boolean
      outputs: {}
    SetFogOfWarMaskAtlas:
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetFogOfWarMaskTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetMaskScalar:
      inputs:
      - name: scalar
        type: number
      outputs: {}
    SetUiMapID:
      inputs:
      - name: uiMapID
        type: number
      outputs: {}
Font:
  fields: {}
  inherits:
    FontInstance: {}
    UIObject: {}
  methods:
    CopyFontObject:
      inputs:
      - name: sourceFont
        type: table
      outputs: {}
    GetAlpha:
      inputs: {}
      outputs:
      - name: alpha
        type: number
    GetFontObjectForAlphabet:
      inputs:
      - name: alphabet
        type: string
      outputs:
      - name: font
        type: table
    SetAlpha:
      inputs:
      - name: alpha
        type: number
      outputs: {}
    SetFontHeight:
      inputs:
      - name: height
        type: number
      outputs: {}
FontInstance:
  fields:
    justifyh:
      init: CENTER
      type: JustifyHorizontal
    justifyv:
      init: MIDDLE
      type: JustifyVertical
  inherits: {}
  methods:
    GetFont:
      outputs:
      - name: fontName
        type: string
      - name: fontHeight
        stub: 12
        type: number
      - name: fontFlags
        type: string
    GetFontObject:
      impl: FontInstance/GetFontObject
      inputs: {}
      outputs:
      - name: font
        nilable: true
        type: FontInstance
    GetIndentedWordWrap: {}
    GetJustifyH:
      getter:
      - name: justifyh
    GetJustifyV:
      getter:
      - name: justifyv
    GetShadowColor:
      outputs:
      - type: number
      - type: number
      - type: number
    GetShadowOffset:
      outputs:
      - type: number
    GetSpacing:
      outputs:
      - type: number
    GetTextColor:
      outputs:
      - type: number
      - type: number
      - type: number
    SetFont: {}
    SetFontObject: {}
    SetIndentedWordWrap: {}
    SetJustifyH:
      setter:
      - name: justifyh
    SetJustifyV:
      setter:
      - name: justifyv
    SetShadowColor: {}
    SetShadowOffset: {}
    SetSpacing: {}
    SetTextColor: {}
  virtual: true
FontString:
  fields:
    maxLines:
      init: 0
      type: number
    text:
      nilable: true
      type: string
    textScale:
      init: 1
      type: number
  inherits:
    FontInstance: {}
    LayeredRegion: {}
    ScriptObject: {}
  methods:
    CalculateScreenAreaFromCharacterSpan:
      inputs:
      - name: leftIndex
        type: number
      - name: rightIndex
        type: number
      outputs:
      - name: areas
        nilable: true
        type:
          arrayof:
            structure: uiBoundsRect
    CanNonSpaceWrap:
      inputs: {}
      outputs:
      - name: wrap
        type: boolean
    CanWordWrap:
      inputs: {}
      outputs:
      - name: wrap
        type: boolean
    FindCharacterIndexAtCoordinate:
      inputs:
      - name: x
        type: number
      - name: y
        type: number
      mayreturnnothing: true
      outputs:
      - name: characterIndex
        type: number
      - name: inside
        type: boolean
    GetFieldSize:
      inputs: {}
      outputs:
      - name: fieldSize
        type: number
    GetLineHeight:
      inputs: {}
      outputs:
      - name: lineHeight
        type: number
    GetMaxLines:
      getter:
      - name: maxLines
    GetNumLines:
      inputs: {}
      outputs:
      - name: numLines
        type: number
    GetRotation:
      inputs: {}
      outputs:
      - name: radians
        type: number
    GetStringHeight:
      inputs: {}
      outputs:
      - name: height
        type: number
    GetStringWidth:
      inputs: {}
      outputs:
      - name: width
        type: number
    GetText:
      getter:
      - name: text
    GetTextScale:
      getter:
      - name: textScale
    GetUnboundedStringWidth:
      inputs: {}
      outputs:
      - name: width
        type: number
    GetVertexColor: {}
    GetWrappedWidth:
      inputs: {}
      outputs:
      - name: width
        type: number
    IsTruncated:
      inputs: {}
      outputs:
      - name: isTruncated
        type: boolean
    SetAlphaGradient:
      inputs:
      - name: start
        type: number
      - name: length
        type: number
      outputs:
      - name: isWithinText
        type: boolean
    SetFixedColor:
      inputs:
      - name: fixedColor
        type: boolean
      outputs: {}
    SetFormattedText:
      inputs:
      - name: text
        type: string
      outputs: {}
    SetMaxLines:
      setter:
      - name: maxLines
    SetNonSpaceWrap:
      inputs:
      - name: wrap
        type: boolean
      outputs: {}
    SetRotation:
      inputs:
      - name: radians
        type: number
      outputs: {}
    SetText:
      impl: FontString/SetText
    SetTextHeight:
      inputs:
      - name: height
        type: number
      outputs: {}
    SetTextScale:
      setter:
      - name: textScale
    SetTextToFit:
      inputs:
      - default: ''
        name: text
        type: string
      outputs: {}
    SetWordWrap:
      inputs:
      - name: wrap
        type: boolean
      outputs: {}
Frame:
  fields:
    attributes:
      init: {}
      type: table
    frameLevel:
      init: 0
      type: number
    frameStrata:
      init: MEDIUM
      type: FrameStrata
    hasFixedFrameLevel:
      init: false
      type: boolean
    hasFixedFrameStrata:
      init: false
      type: boolean
    hyperlinkPropagateToParent:
      init: false
      type: boolean
    hyperlinksEnabled:
      init: false
      type: boolean
    id:
      init: 0
      type: number
    isClampedToScreen:
      init: false
      type: boolean
    isUserPlaced:
      init: false
      type: boolean
    maxResizeHeight:
      init: 0
      type: number
    maxResizeWidth:
      init: 0
      type: number
    minResizeHeight:
      init: 0
      type: number
    minResizeWidth:
      init: 0
      type: number
    movable:
      init: false
      type: boolean
    propagateKeyboardInput:
      init: false
      type: boolean
    resizable:
      init: false
      type: boolean
    toplevel:
      init: false
      type: boolean
    usingParentLevel:
      init: false
      type: boolean
  inherits:
    Region: {}
    ScriptObject: {}
  methods:
    AbortDrag:
      inputs: {}
      outputs: {}
    CanChangeAttribute:
      inputs: {}
      outputs:
      - name: canChangeAttributes
        type: boolean
    CreateFontString:
      impl: Frame/CreateFontString
      inputs:
      - name: name
        nilable: true
        type: string
      - default: ARTWORK
        name: drawLayer
        nilable: true
        type: DrawLayer
      - name: templateName
        nilable: true
        type: string
      outputs:
      - name: fontString
        type: FontString
    CreateLine:
      impl: Frame/CreateLine
      inputs: {}
      outputs:
      - name: line
        type: Line
    CreateMaskTexture:
      impl: Frame/CreateMaskTexture
      inputs:
      - name: name
        nilable: true
        type: string
      - name: layer
        nilable: true
        type: DrawLayer
      - name: inheritsFrom
        nilable: true
        type: string
      - name: subLayer
        nilable: true
        type: number
      outputs:
      - name: mask
        type: MaskTexture
    CreateTexture:
      impl: Frame/CreateTexture
      inputs:
      - name: name
        nilable: true
        type: string
      - name: layer
        nilable: true
        type: DrawLayer
      - name: inheritsFrom
        nilable: true
        type: string
      - name: subLayer
        nilable: true
        type: number
      outputs:
      - name: texture
        type: Texture
    DesaturateHierarchy:
      inputs:
      - name: desaturation
        type: number
      - default: false
        name: excludeRoot
        type: boolean
      outputs: {}
    DisableDrawLayer:
      inputs:
      - name: layer
        type: DrawLayer
      outputs: {}
    DoesClipChildren:
      inputs: {}
      outputs:
      - name: clipsChildren
        type: boolean
    DoesHyperlinkPropagateToParent:
      getter:
      - name: hyperlinkPropagateToParent
    EnableDrawLayer:
      inputs:
      - name: layer
        type: DrawLayer
      outputs: {}
    EnableGamePadButton:
      inputs:
      - default: false
        name: enable
        type: boolean
      outputs: {}
    EnableGamePadStick:
      inputs:
      - default: false
        name: enable
        type: boolean
      outputs: {}
    EnableKeyboard:
      inputs:
      - default: false
        name: enable
        type: boolean
      outputs: {}
    ExecuteAttribute:
      inputs:
      - name: attributeName
        type: string
      - name: unpackedPrimitiveType
        type: string
      instride: 1
      outputs:
      - name: success
        type: boolean
      - name: unpackedPrimitiveType
        type: string
      outstride: 1
    GetAttribute:
      impl: Frame/GetAttribute
    GetBoundsRect:
      inputs: {}
      outputs:
      - name: left
        type: number
      - name: bottom
        type: number
      - name: width
        type: number
      - name: height
        type: number
    GetChildren:
      impl: Frame/GetChildren
      inputs: {}
      outputs:
      - name: scriptObject
        type: UIObject
      outstride: 1
    GetClampRectInsets:
      inputs: {}
      outputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
    GetDontSavePosition:
      inputs: {}
      outputs:
      - name: dontSave
        type: boolean
    GetEffectiveAlpha:
      impl: Frame/GetEffectiveAlpha
    GetEffectivelyFlattensRenderLayers:
      inputs: {}
      outputs:
      - name: flatten
        type: boolean
    GetFlattensRenderLayers:
      inputs: {}
      outputs:
      - name: flatten
        type: boolean
    GetFrameLevel:
      getter:
      - name: frameLevel
    GetFrameStrata:
      getter:
      - name: frameStrata
    GetHitRectInsets:
      inputs: {}
      outputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
    GetHyperlinksEnabled:
      getter:
      - name: hyperlinksEnabled
    GetID:
      getter:
      - name: id
    GetNumChildren:
      impl: Frame/GetNumChildren
    GetNumRegions:
      impl: Frame/GetNumRegions
    GetPropagateKeyboardInput:
      getter:
      - name: propagateKeyboardInput
    GetRaisedFrameLevel:
      inputs: {}
      outputs:
      - name: frameLevel
        type: number
    GetRegions:
      impl: Frame/GetRegions
      inputs: {}
      outputs:
      - name: scriptObject
        type: UIObject
      outstride: 1
    GetResizeBounds:
      getter:
      - name: minResizeWidth
      - name: minResizeHeight
      - name: maxResizeWidth
      - name: maxResizeHeight
    GetWindow:
      inputs: {}
      outputs:
      - name: window
        type: nil
    HasFixedFrameLevel:
      getter:
      - name: hasFixedFrameLevel
    HasFixedFrameStrata:
      getter:
      - name: hasFixedFrameStrata
    InterceptStartDrag:
      inputs:
      - name: delegate
        type: Frame
      outputs:
      - name: success
        type: boolean
    IsClampedToScreen:
      getter:
      - name: isClampedToScreen
    IsDrawLayerEnabled:
      inputs:
      - name: layer
        type: DrawLayer
      outputs:
      - name: isEnabled
        type: boolean
    IsEventRegistered:
      impl: Frame/IsEventRegistered
    IsGamePadButtonEnabled:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    IsGamePadStickEnabled:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    IsKeyboardEnabled:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    IsMovable:
      getter:
      - name: movable
    IsResizable:
      getter:
      - name: resizable
    IsToplevel:
      getter:
      - name: toplevel
    IsUserPlaced:
      getter:
      - name: isUserPlaced
    IsUsingParentLevel:
      getter:
      - name: usingParentLevel
    LockHighlight:
      inputs: {}
      outputs: {}
    Lower:
      inputs: {}
      outputs: {}
    Raise:
      inputs: {}
      outputs: {}
    RegisterAllEvents:
      impl: Frame/RegisterAllEvents
    RegisterEvent:
      impl: Frame/RegisterEvent
    RegisterForDrag:
      inputs:
      - name: unpackedPrimitiveType
        type: number
      instride: 1
      outputs: {}
    RegisterUnitEvent:
      impl: Frame/RegisterUnitEvent
    RotateTextures:
      inputs:
      - name: radians
        type: number
      - default: 0.5
        name: x
        type: number
      - default: 0.5
        name: y
        type: number
      outputs: {}
    SetAttribute:
      impl: Frame/SetAttribute
    SetAttributeNoHandler:
      impl: Frame/SetAttributeNoHandler
    SetClampedToScreen:
      setter:
      - name: isClampedToScreen
    SetClampRectInsets:
      inputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
      outputs: {}
    SetClipsChildren:
      inputs:
      - name: clipsChildren
        type: boolean
      outputs: {}
    SetDontSavePosition:
      inputs:
      - name: dontSave
        type: boolean
      outputs: {}
    SetDrawLayerEnabled:
      inputs:
      - name: layer
        type: DrawLayer
      - default: false
        name: isEnabled
        type: boolean
      outputs: {}
    SetFixedFrameLevel:
      setter:
      - name: hasFixedFrameLevel
    SetFixedFrameStrata:
      setter:
      - name: hasFixedFrameStrata
    SetFlattensRenderLayers:
      inputs:
      - name: flatten
        type: boolean
      outputs: {}
    SetFrameLevel:
      impl: Frame/SetFrameLevel
    SetFrameStrata:
      setter:
      - name: frameStrata
    SetHighlightLocked:
      inputs:
      - name: locked
        type: boolean
      outputs: {}
    SetHitRectInsets:
      inputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
      outputs: {}
    SetHyperlinkPropagateToParent:
      setter:
      - name: hyperlinkPropagateToParent
    SetHyperlinksEnabled:
      setter:
      - name: hyperlinksEnabled
    SetID:
      setter:
      - name: id
    SetIsFrameBuffer:
      inputs:
      - name: isFrameBuffer
        type: boolean
      outputs: {}
    SetMovable:
      setter:
      - name: movable
    SetPropagateKeyboardInput:
      setter:
      - name: propagateKeyboardInput
    SetResizable:
      setter:
      - name: resizable
    SetResizeBounds:
      impl: Frame/SetResizeBounds
    SetToplevel:
      setter:
      - name: toplevel
    SetUserPlaced:
      setter:
      - name: isUserPlaced
    SetUsingParentLevel:
      setter:
      - name: usingParentLevel
    SetWindow:
      inputs:
      - name: window
        nilable: true
        type: nil
      outputs: {}
    StartMoving:
      inputs:
      - default: false
        name: alwaysStartFromMouse
        type: boolean
      outputs: {}
    StartSizing:
      inputs:
      - name: resizePoint
        nilable: true
        type: FramePoint
      - default: false
        name: alwaysStartFromMouse
        type: boolean
      outputs: {}
    StopMovingOrSizing:
      inputs: {}
      outputs: {}
    UnlockHighlight:
      inputs: {}
      outputs: {}
    UnregisterAllEvents:
      impl: Frame/UnregisterAllEvents
    UnregisterEvent:
      impl: Frame/UnregisterEvent
GameTooltip:
  fields:
    tooltipAnchorType:
      init: ANCHOR_NONE
      type: string
    tooltipLines:
      init: 0
      type: number
    tooltipOwner:
      nilable: true
      type: Frame
  inherits:
    Frame: {}
  methods:
    AddDoubleLine: {}
    AddFontStrings: {}
    AddLine: {}
    AddSpellByID: {}
    AddTexture: {}
    AdvanceSecondaryCompareItem: {}
    AppendText: {}
    ClearLines: {}
    CopyTooltip: {}
    FadeOut: {}
    GetAnchorType:
      getter:
      - name: tooltipAnchorType
    GetItem: {}
    GetMinimumWidth:
      outputs:
      - type: number
    GetOwner:
      getter:
      - name: tooltipOwner
    GetPadding: {}
    GetSpell: {}
    GetUnit: {}
    IsEquippedItem: {}
    IsOwned:
      impl: GameTooltip/IsOwned
      inputs:
      - name: frame
        type: Frame
      outputs:
      - name: isOwned
        type: boolean
    IsUnit: {}
    NumLines:
      getter:
      - name: tooltipLines
    ResetSecondaryCompareItem: {}
    SetAction: {}
    SetAnchorType: {}
    SetAuctionItem: {}
    SetAuctionSellItem: {}
    SetBackpackToken: {}
    SetBagItem: {}
    SetBagItemChild: {}
    SetBuybackItem: {}
    SetCompareItem: {}
    SetCraftItem: {}
    SetCraftSpell: {}
    SetCurrencyToken: {}
    SetCurrencyTokenByID: {}
    SetEngravingRune: {}
    SetEquipmentSet: {}
    SetExistingSocketGem: {}
    SetFrameStack: {}
    SetGuildBankItem: {}
    SetHeirloomByItemID: {}
    SetHyperlink: {}
    SetInboxItem: {}
    SetInstanceLockEncountersComplete: {}
    SetInventoryItem: {}
    SetInventoryItemByID: {}
    SetItemByID: {}
    SetItemKey: {}
    SetLFGDungeonReward: {}
    SetLFGDungeonShortageReward: {}
    SetLootCurrency: {}
    SetLootItem: {}
    SetLootRollItem: {}
    SetMerchantCostItem: {}
    SetMerchantItem: {}
    SetMinimumWidth: {}
    SetOwner:
      impl: GameTooltip/SetOwner
      inputs:
      - name: owner
        type: Frame
      - name: anchorType
        nilable: true
        type: string
      outputs: {}
    SetPadding: {}
    SetPetAction: {}
    SetPossession: {}
    SetQuestCurrency: {}
    SetQuestItem: {}
    SetQuestLogCurrency: {}
    SetQuestLogItem: {}
    SetQuestLogSpecialItem: {}
    SetReforgeItem: {}
    SetSendMailItem: {}
    SetShapeshift: {}
    SetSocketedItem: {}
    SetSocketGem: {}
    SetSpellBookItem: {}
    SetSpellByID: {}
    SetTalent: {}
    SetText: {}
    SetTotem: {}
    SetToyByItemID: {}
    SetTrackingSpell: {}
    SetTradePlayerItem: {}
    SetTradeSkillItem: {}
    SetTradeTargetItem: {}
    SetTrainerService: {}
    SetUnit: {}
    SetUnitAura: {}
    SetUnitBuff: {}
    SetUnitDebuff: {}
LayeredRegion:
  fields:
    layer:
      init: ARTWORK
      type: DrawLayer
    sublevel:
      init: 0
      type: number
    vertexColorA:
      init: 1
      type: number
    vertexColorB:
      init: 1
      type: number
    vertexColorG:
      init: 1
      type: number
    vertexColorR:
      init: 1
      type: number
  inherits:
    Region: {}
  methods:
    GetDrawLayer:
      getter:
      - name: layer
      - name: sublevel
    SetDrawLayer:
      setter:
      - name: layer
      - name: sublevel
        nilable: true
    SetVertexColor:
      impl: LayeredRegion/SetVertexColor
  virtual: true
Line:
  fields:
    thickness:
      init: 4
      type: number
  inherits:
    TextureBase: {}
  methods:
    GetEndPoint:
      inputs: {}
      outputs:
      - name: relativePoint
        type: FramePoint
      - name: relativeTo
        type: Region
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetHitRectThickness:
      inputs: {}
      outputs:
      - name: thickness
        type: number
    GetStartPoint:
      inputs: {}
      outputs:
      - name: relativePoint
        type: FramePoint
      - name: relativeTo
        type: Region
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetThickness:
      getter:
      - name: thickness
    SetEndPoint:
      inputs:
      - name: relativePoint
        type: FramePoint
      - name: relativeTo
        type: Region
      - default: 0
        name: offsetX
        type: number
      - default: 0
        name: offsetY
        type: number
      outputs: {}
    SetHitRectThickness:
      inputs:
      - name: thickness
        type: number
      outputs: {}
    SetStartPoint:
      inputs:
      - name: relativePoint
        type: FramePoint
      - name: relativeTo
        type: Region
      - default: 0
        name: offsetX
        type: number
      - default: 0
        name: offsetY
        type: number
      outputs: {}
    SetThickness:
      setter:
      - name: thickness
LineScale:
  fields: {}
  inherits:
    Scale: {}
  methods: {}
LineTranslation:
  fields: {}
  inherits:
    Translation: {}
  methods: {}
MaskTexture:
  fields: {}
  inherits:
    TextureBase: {}
  methods: {}
MessageFrame:
  fields: {}
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    AddMessage:
      impl: MessageFrame/AddMessage
    Clear:
      inputs: {}
      outputs: {}
    GetFadeDuration:
      inputs: {}
      outputs:
      - name: fadeDurationSeconds
        type: number
    GetFadePower:
      inputs: {}
      outputs:
      - name: fadePower
        type: number
    GetFading:
      inputs: {}
      outputs:
      - name: isFading
        type: boolean
    GetFontStringByID:
      inputs:
      - name: messageID
        type: number
      outputs:
      - name: fontString
        type: table
    GetInsertMode:
      inputs: {}
      outputs:
      - name: mode
        type: InsertMode
    GetTimeVisible:
      inputs: {}
      outputs:
      - name: timeVisibleSeconds
        type: number
    HasMessageByID:
      inputs:
      - name: messageID
        type: number
      outputs:
      - name: hasMessage
        type: boolean
    ResetMessageFadeByID:
      inputs:
      - name: messageID
        type: number
      outputs: {}
    SetFadeDuration:
      inputs:
      - name: fadeDurationSeconds
        type: number
      outputs: {}
    SetFadePower:
      inputs:
      - name: fadePower
        type: number
      outputs: {}
    SetFading:
      inputs:
      - name: fading
        type: boolean
      outputs: {}
    SetInsertMode:
      inputs:
      - name: mode
        type: InsertMode
      outputs: {}
    SetTimeVisible:
      inputs:
      - name: timeVisibleSeconds
        type: number
      outputs: {}
Minimap:
  fields: {}
  inherits:
    Frame: {}
  methods:
    GetPingPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
    GetZoom:
      inputs: {}
      outputs:
      - name: zoomFactor
        type: number
    GetZoomLevels:
      inputs: {}
      outputs:
      - name: zoomLevels
        type: number
    PingLocation:
      inputs:
      - name: locationX
        type: number
      - name: locationY
        type: number
      outputs: {}
    SetBlipTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetCorpsePOIArrowTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetIconTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetMaskTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetPlayerTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetPOIArrowTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetStaticPOIArrowTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetZoom:
      inputs:
      - name: zoomFactor
        type: number
      outputs: {}
    UpdateBlips:
      inputs: {}
      outputs: {}
  singleton: true
Model:
  fields:
    modelScale:
      init: 1
      type: number
  inherits:
    Frame: {}
  methods:
    AdvanceTime:
      inputs: {}
      outputs: {}
    ClearFog:
      inputs: {}
      outputs: {}
    ClearModel:
      inputs: {}
      outputs: {}
    ClearTransform:
      inputs: {}
      outputs: {}
    GetCameraDistance:
      inputs: {}
      outputs:
      - name: distance
        type: number
    GetCameraFacing:
      inputs: {}
      outputs:
      - name: radians
        type: number
    GetCameraPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
    GetCameraRoll:
      inputs: {}
      outputs:
      - name: radians
        type: number
    GetCameraTarget:
      inputs: {}
      outputs:
      - name: targetX
        type: number
      - name: targetY
        type: number
      - name: targetZ
        type: number
    GetDesaturation:
      inputs: {}
      outputs:
      - name: strength
        type: number
    GetFacing:
      inputs: {}
      outputs:
      - name: facing
        type: number
    GetFogColor:
      inputs: {}
      outputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: colorA
        type: number
    GetFogFar:
      inputs: {}
      outputs:
      - name: fogFar
        type: number
    GetFogNear:
      inputs: {}
      outputs:
      - name: fogNear
        type: number
    GetLight:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
      - name: light
        type:
          structure: ModelLight
    GetModelAlpha:
      inputs: {}
      outputs:
      - name: alpha
        type: number
    GetModelDrawLayer:
      inputs: {}
      outputs:
      - name: layer
        type: DrawLayer
      - name: sublayer
        type: number
    GetModelFileID:
      inputs: {}
      outputs:
      - name: modelFileID
        type: number
    GetModelScale:
      getter:
      - name: modelScale
    GetPaused:
      inputs: {}
      outputs:
      - name: paused
        type: boolean
    GetPitch:
      inputs: {}
      outputs:
      - name: pitch
        type: number
    GetPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
    GetRoll:
      inputs: {}
      outputs:
      - name: roll
        type: number
    GetShadowEffect:
      inputs: {}
      outputs:
      - name: strength
        type: number
    GetViewInsets:
      inputs: {}
      outputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
    GetViewTranslation:
      inputs: {}
      outputs:
      - name: x
        type: number
      - name: y
        type: number
    GetWorldScale:
      inputs: {}
      outputs:
      - name: worldScale
        type: number
    HasAttachmentPoints:
      inputs: {}
      outputs:
      - name: hasAttachmentPoints
        type: boolean
    HasCustomCamera:
      inputs: {}
      outputs:
      - name: hasCustomCamera
        type: boolean
    IsUsingModelCenterToTransform:
      inputs: {}
      outputs:
      - name: useCenter
        type: boolean
    MakeCurrentCameraCustom:
      inputs: {}
      outputs: {}
    ReplaceIconTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetCamera:
      inputs:
      - name: cameraIndex
        type: number
      outputs: {}
    SetCameraDistance:
      inputs:
      - name: distance
        type: number
      outputs: {}
    SetCameraFacing:
      inputs:
      - name: radians
        type: number
      outputs: {}
    SetCameraPosition:
      inputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
      outputs: {}
    SetCameraRoll:
      inputs:
      - name: radians
        type: number
      outputs: {}
    SetCameraTarget:
      inputs:
      - name: targetX
        type: number
      - name: targetY
        type: number
      - name: targetZ
        type: number
      outputs: {}
    SetCustomCamera:
      inputs:
      - name: cameraIndex
        type: number
      outputs: {}
    SetDesaturation:
      inputs:
      - name: strength
        type: number
      outputs: {}
    SetFacing:
      inputs:
      - name: facing
        type: number
      outputs: {}
    SetFogColor:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: a
        nilable: true
        type: number
      outputs: {}
    SetFogFar:
      inputs:
      - name: fogFar
        type: number
      outputs: {}
    SetFogNear:
      inputs:
      - name: fogNear
        type: number
      outputs: {}
    SetGlow:
      inputs:
      - name: glow
        type: number
      outputs: {}
    SetLight:
      inputs:
      - name: enabled
        type: boolean
      - name: light
        type:
          structure: ModelLight
      outputs: {}
    SetModel:
      inputs:
      - name: asset
        type: string
      - default: false
        name: noMip
        type: boolean
      outputs: {}
    SetModelAlpha:
      inputs:
      - name: alpha
        type: number
      outputs: {}
    SetModelDrawLayer:
      inputs:
      - name: layer
        type: DrawLayer
      outputs: {}
    SetModelScale:
      setter:
      - name: modelScale
    SetParticlesEnabled:
      inputs:
      - name: enabled
        type: boolean
      outputs: {}
    SetPaused:
      inputs:
      - name: paused
        type: boolean
      outputs: {}
    SetPitch:
      inputs:
      - name: pitch
        type: number
      outputs: {}
    SetPosition:
      inputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
      outputs: {}
    SetRoll:
      inputs:
      - name: roll
        type: number
      outputs: {}
    SetSequence:
      inputs:
      - name: sequence
        type: number
      outputs: {}
    SetSequenceTime:
      inputs:
      - name: sequence
        type: number
      - name: timeOffset
        type: number
      outputs: {}
    SetShadowEffect:
      inputs:
      - name: strength
        type: number
      outputs: {}
    SetTransform:
      inputs:
      - name: translation
        nilable: true
        type:
          structure: vector3
      - name: rotation
        nilable: true
        type:
          structure: vector3
      - name: scale
        nilable: true
        type: number
      outputs: {}
    SetViewInsets:
      inputs:
      - name: left
        type: number
      - name: right
        type: number
      - name: top
        type: number
      - name: bottom
        type: number
      outputs: {}
    SetViewTranslation:
      inputs:
      - name: x
        type: number
      - name: y
        type: number
      outputs: {}
    TransformCameraSpaceToModelSpace:
      impl: Model/TransformCameraSpaceToModelSpace
    UseModelCenterToTransform:
      inputs:
      - name: useCenter
        type: boolean
      outputs: {}
ModelScene:
  fields: {}
  inherits:
    Frame: {}
  methods:
    ClearFog:
      inputs: {}
      outputs: {}
    CreateActor:
      impl: ModelScene/CreateActor
      inputs:
      - name: name
        nilable: true
        type: string
      - name: template
        nilable: true
        type: string
      outputs:
      - name: actor
        type: Actor
    GetActorAtIndex:
      inputs:
      - name: index
        type: number
      outputs: {}
    GetCameraFarClip:
      inputs: {}
      outputs:
      - name: farClip
        type: number
    GetCameraFieldOfView:
      inputs: {}
      outputs:
      - name: fov
        type: number
    GetCameraForward:
      inputs: {}
      outputs:
      - name: forwardX
        type: number
      - name: forwardY
        type: number
      - name: forwardZ
        type: number
    GetCameraNearClip:
      inputs: {}
      outputs:
      - name: nearClip
        type: number
    GetCameraPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
    GetCameraRight:
      inputs: {}
      outputs:
      - name: rightX
        type: number
      - name: rightY
        type: number
      - name: rightZ
        type: number
    GetCameraUp:
      inputs: {}
      outputs:
      - name: upX
        type: number
      - name: upY
        type: number
      - name: upZ
        type: number
    GetDrawLayer:
      inputs: {}
      outputs:
      - name: layer
        type: DrawLayer
      - name: sublevel
        type: number
    GetFogColor:
      inputs: {}
      outputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
    GetFogFar:
      inputs: {}
      outputs:
      - name: far
        type: number
    GetFogNear:
      inputs: {}
      outputs:
      - name: near
        type: number
    GetLightAmbientColor:
      inputs: {}
      outputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
    GetLightDiffuseColor:
      inputs: {}
      outputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
    GetLightDirection:
      inputs: {}
      outputs:
      - name: directionX
        type: number
      - name: directionY
        type: number
      - name: directionZ
        type: number
    GetLightPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
    GetLightType:
      inputs: {}
      outputs:
      - name: lightType
        nilable: true
        type:
          enum: ModelLightType
    GetNumActors:
      inputs: {}
      outputs:
      - name: numActors
        type: number
    GetViewInsets:
      inputs: {}
      outputs:
      - name: insetsLeft
        type: number
      - name: insetsRight
        type: number
      - name: insetsTop
        type: number
      - name: insetsBottom
        type: number
    GetViewTranslation:
      inputs: {}
      outputs:
      - name: translationX
        type: number
      - name: translationY
        type: number
    IsLightVisible:
      inputs: {}
      outputs:
      - name: isVisible
        type: boolean
    Project3DPointTo2D:
      inputs:
      - name: pointX
        type: number
      - name: pointY
        type: number
      - name: pointZ
        type: number
      mayreturnnothing: true
      outputs:
      - name: point2DX
        type: number
      - name: point2DY
        type: number
      - name: depth
        type: number
    SetCameraFarClip:
      inputs:
      - name: farClip
        type: number
      outputs: {}
    SetCameraFieldOfView:
      inputs:
      - name: fov
        type: number
      outputs: {}
    SetCameraNearClip:
      inputs:
      - name: nearClip
        type: number
      outputs: {}
    SetCameraOrientationByAxisVectors:
      inputs:
      - name: forwardX
        type: number
      - name: forwardY
        type: number
      - name: forwardZ
        type: number
      - name: rightX
        type: number
      - name: rightY
        type: number
      - name: rightZ
        type: number
      - name: upX
        type: number
      - name: upY
        type: number
      - name: upZ
        type: number
      outputs: {}
    SetCameraOrientationByYawPitchRoll:
      inputs:
      - name: yaw
        type: number
      - name: pitch
        type: number
      - name: roll
        type: number
      outputs: {}
    SetCameraPosition:
      inputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
      outputs: {}
    SetDesaturation:
      inputs:
      - name: strength
        type: number
      outputs: {}
    SetDrawLayer:
      inputs:
      - name: layer
        type: DrawLayer
      outputs: {}
    SetFogColor:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      outputs: {}
    SetFogFar:
      inputs:
      - name: far
        type: number
      outputs: {}
    SetFogNear:
      inputs:
      - name: near
        type: number
      outputs: {}
    SetLightAmbientColor:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      outputs: {}
    SetLightDiffuseColor:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      outputs: {}
    SetLightDirection:
      inputs:
      - name: directionX
        type: number
      - name: directionY
        type: number
      - name: directionZ
        type: number
      outputs: {}
    SetLightPosition:
      inputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
      outputs: {}
    SetLightType:
      inputs:
      - name: lightType
        type:
          enum: ModelLightType
      outputs: {}
    SetLightVisible:
      inputs:
      - default: false
        name: visible
        type: boolean
      outputs: {}
    SetPaused:
      inputs:
      - name: paused
        type: boolean
      - default: true
        name: affectsGlobalPause
        type: boolean
      outputs: {}
    SetViewInsets:
      inputs:
      - name: insetsLeft
        type: number
      - name: insetsRight
        type: number
      - name: insetsTop
        type: number
      - name: insetsBottom
        type: number
      outputs: {}
    SetViewTranslation:
      inputs:
      - name: translationX
        type: number
      - name: translationY
        type: number
      outputs: {}
    TakeActor:
      inputs: {}
      outputs: {}
MovieFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    EnableSubtitles:
      inputs:
      - name: enable
        type: boolean
      outputs: {}
    StartMovie:
      inputs:
      - name: movieID
        type: number
      - default: false
        name: looping
        type: boolean
      outputs:
      - name: success
        type: boolean
      - name: returnCode
        type: number
    StartMovieByName:
      inputs:
      - name: movieName
        type: string
      - default: false
        name: looping
        type: boolean
      - default: 0
        name: resolution
        type: number
      outputs:
      - name: success
        type: boolean
      - name: returnCode
        type: number
    StopMovie:
      inputs: {}
      outputs: {}
OffScreenFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    ApplySnapshot:
      inputs:
      - name: texture
        type: Texture
      - name: snapshotID
        type: number
      outputs:
      - name: success
        type: boolean
    Flush:
      inputs: {}
      outputs: {}
    GetMaxSnapshots:
      inputs: {}
      outputs:
      - name: maxSnapshots
        type: number
    IsSnapshotValid:
      inputs:
      - name: snapshotID
        type: number
      outputs:
      - name: isValid
        type: boolean
    SetMaxSnapshots:
      inputs:
      - name: maxSnapshots
        type: number
      outputs: {}
    TakeSnapshot:
      inputs: {}
      outputs:
      - name: snapshotID
        nilable: true
        type: number
    TestPrintToFile:
      inputs:
      - name: snapshotID
        type: number
      - name: filename
        type: string
      outputs:
      - name: success
        type: boolean
    UsesNPOT:
      inputs: {}
      outputs:
      - name: usesNPOT
        nilable: true
        type: boolean
ParentedObject:
  fields: {}
  inherits:
    ParentedObjectBase: {}
  methods:
    SetParent:
      impl: ParentedObject/SetParent
      inputs:
      - name: parent
        nilable: true
        type: UIObject
      outputs: {}
  virtual: true
ParentedObjectBase:
  fields:
    children:
      type: hlist
    parent:
      nilable: true
      type: UIObject
  inherits:
    UIObject: {}
  methods:
    ClearParentKey:
      impl: ParentedObjectBase/ClearParentKey
    GetDebugName:
      impl: ParentedObject/GetDebugName
    GetParent:
      getter:
      - name: parent
    GetParentKey:
      impl: ParentedObjectBase/GetParentKey
    SetParentKey:
      impl: ParentedObjectBase/SetParentKey
  virtual: true
Path:
  fields:
    curveType:
      init: NONE
      type: CurveType
  inherits:
    Animation: {}
  methods:
    CreateControlPoint:
      impl: Path/CreateControlPoint
      inputs:
      - name: name
        nilable: true
        type: string
      - name: templateName
        nilable: true
        type: string
      - name: order
        nilable: true
        type: number
      outputs:
      - name: point
        type: ControlPoint
    GetControlPoints:
      impl: Path/GetControlPoints
      inputs: {}
      outputs:
      - name: scriptObject
        type: UIObject
      outstride: 1
    GetCurveType:
      getter:
      - name: curveType
    GetMaxControlPointOrder:
      inputs: {}
      outputs:
      - name: maxOrder
        type: number
    SetCurveType:
      setter:
      - name: curveType
PlayerModel:
  fields: {}
  inherits:
    Model: {}
  methods:
    ApplySpellVisualKit:
      inputs:
      - name: spellVisualKitID
        type: number
      - default: false
        name: oneShot
        type: boolean
      outputs: {}
    CanSetUnit:
      inputs:
      - name: unit
        type: unit
      outputs: {}
    FreezeAnimation:
      inputs:
      - name: anim
        type: number
      - name: variation
        type: number
      - name: frame
        type: number
      outputs: {}
    GetDisplayInfo:
      inputs: {}
      outputs:
      - name: displayID
        type: number
    GetDoBlend:
      inputs: {}
      outputs:
      - name: doBlend
        type: boolean
    GetKeepModelOnHide:
      inputs: {}
      outputs:
      - name: keepModelOnHide
        type: boolean
    HasAnimation:
      inputs:
      - name: anim
        type: number
      outputs:
      - name: hasAnimation
        type: boolean
    PlayAnimKit:
      inputs:
      - name: animKit
        type: number
      - default: false
        name: loop
        type: boolean
      outputs: {}
    RefreshCamera:
      inputs: {}
      outputs: {}
    RefreshUnit:
      inputs: {}
      outputs: {}
    SetAnimation:
      inputs:
      - name: anim
        type: number
      - name: variation
        nilable: true
        type: number
      outputs: {}
    SetBarberShopAlternateForm:
      inputs: {}
      outputs: {}
    SetCamDistanceScale:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetCreature:
      inputs:
      - name: creatureID
        type: number
      - default: 0
        name: displayID
        type: number
      outputs: {}
    SetDisplayInfo:
      inputs:
      - name: displayID
        type: number
      - name: mountDisplayID
        nilable: true
        type: number
      outputs: {}
    SetDoBlend:
      inputs:
      - default: false
        name: doBlend
        type: boolean
      outputs: {}
    SetItem:
      inputs:
      - name: itemID
        type: number
      - name: appearanceModID
        nilable: true
        type: number
      - name: itemVisualID
        nilable: true
        type: number
      outputs: {}
    SetItemAppearance:
      inputs:
      - name: itemAppearanceID
        type: number
      - name: itemVisualID
        nilable: true
        type: number
      - name: itemSubclass
        nilable: true
        type:
          enum: ItemWeaponSubclass
      outputs: {}
    SetKeepModelOnHide:
      inputs:
      - name: keepModelOnHide
        type: boolean
      outputs: {}
    SetPortraitZoom:
      inputs:
      - name: zoom
        type: number
      outputs: {}
    SetRotation:
      inputs:
      - name: radians
        type: number
      - default: true
        name: animate
        type: boolean
      outputs: {}
    SetUnit:
      inputs:
      - name: unit
        type: unit
      - default: true
        name: blend
        type: boolean
      outputs:
      - name: success
        type: boolean
    StopAnimKit:
      inputs: {}
      outputs: {}
    ZeroCachedCenterXY:
      inputs: {}
      outputs: {}
Region:
  fields:
    animationGroups:
      init: {}
      type: table
    bottom:
      init: 0
      type: number
    explicitlyProtected:
      init: false
      type: boolean
    height:
      init: 0
      type: number
    isIgnoringParentAlpha:
      init: false
      type: boolean
    isIgnoringParentScale:
      init: false
      type: boolean
    left:
      init: 0
      type: number
    mouseClickEnabled:
      init: false
      type: boolean
    mouseMotionEnabled:
      init: false
      type: boolean
    mouseWheelEnabled:
      init: false
      type: boolean
    points:
      init: {}
      type: table
    width:
      init: 0
      type: number
  inherits:
    ParentedObject: {}
    RegionBase: {}
  methods:
    AdjustPointsOffset:
      inputs:
      - name: x
        type: number
      - name: y
        type: number
      outputs: {}
    CanChangeProtectedState:
      inputs: {}
      outputs:
      - name: canChange
        type: boolean
    ClearAllPoints:
      impl: Region/ClearAllPoints
    ClearPoint:
      inputs:
      - name: point
        type: FramePoint
      outputs: {}
    ClearPointsOffset:
      inputs: {}
      outputs: {}
    CollapsesLayout:
      inputs: {}
      outputs:
      - name: collapsesLayout
        type: boolean
    CreateAnimationGroup:
      impl: Region/CreateAnimationGroup
      inputs:
      - name: name
        nilable: true
        type: string
      - name: templateName
        nilable: true
        type: string
      outputs:
      - name: animationGroup
        type: AnimationGroup
    EnableMouse:
      impl: MouseMixin/EnableMouse
    EnableMouseMotion:
      inputs:
      - default: false
        name: enable
        type: boolean
      outputs: {}
    EnableMouseWheel:
      setter:
      - name: mouseWheelEnabled
    GetAnimationGroups:
      impl: Region/GetAnimationGroups
      inputs: {}
      outputs:
      - name: scriptObject
        type: UIObject
      outstride: 1
    GetBottom:
      getter:
      - name: bottom
    GetCenter:
      impl: Region/GetCenter
    GetEffectiveScale:
      impl: Region/GetEffectiveScale
    GetHeight:
      getter:
      - name: height
    GetLeft:
      getter:
      - name: left
    GetNumPoints:
      impl: Region/GetNumPoints
    GetPoint:
      impl: Region/GetPoint
      inputs:
      - default: 1
        name: anchorIndex
        nilable: true
        type: tonumber
      mayreturnnothing: true
      outputs:
      - name: point
        type: FramePoint
      - name: relativeTo
        nilable: true
        type: UIObject
      - name: relativePoint
        type: FramePoint
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetPointByName:
      inputs:
      - name: point
        type: FramePoint
      - default: false
        name: resolveCollapsed
        type: boolean
      mayreturnnothing: true
      outputs:
      - name: point
        type: FramePoint
      - name: relativeTo
        type: Region
      - name: relativePoint
        type: FramePoint
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetRect:
      getter:
      - name: bottom
      - name: left
      - name: width
      - name: height
    GetRight:
      impl: Region/GetRight
    GetScaledRect:
      impl: Region/GetScaledRect
    GetSize:
      getter:
      - name: width
      - name: height
    GetSourceLocation:
      inputs: {}
      outputs:
      - name: location
        type: string
    GetTop:
      impl: Region/GetTop
    GetWidth:
      getter:
      - name: width
    Intersects:
      inputs:
      - name: region
        type: Region
      outputs:
      - name: intersects
        type: boolean
    IsAnchoringRestricted:
      inputs: {}
      outputs:
      - name: isRestricted
        type: boolean
    IsCollapsed:
      inputs: {}
      outputs:
      - name: isCollapsed
        type: boolean
    IsDragging:
      inputs: {}
      outputs:
      - name: isDragging
        type: boolean
    IsIgnoringParentAlpha:
      getter:
      - name: isIgnoringParentAlpha
    IsIgnoringParentScale:
      getter:
      - name: isIgnoringParentScale
    IsMouseClickEnabled:
      getter:
      - name: mouseClickEnabled
    IsMouseEnabled:
      impl: MouseMixin/IsMouseEnabled
    IsMouseMotionEnabled:
      getter:
      - name: mouseMotionEnabled
    IsMouseMotionFocus:
      inputs: {}
      outputs:
      - name: isMouseMotionFocus
        type: boolean
    IsMouseOver:
      inputs:
      - default: 0
        name: offsetTop
        type: number
      - default: 0
        name: offsetBottom
        type: number
      - default: 0
        name: offsetLeft
        type: number
      - default: 0
        name: offsetRight
        type: number
      outputs:
      - name: isMouseOver
        type: boolean
    IsMouseWheelEnabled:
      getter:
      - name: mouseWheelEnabled
    IsObjectLoaded:
      inputs: {}
      outputs:
      - name: isLoaded
        type: boolean
    IsProtected:
      impl: Region/IsProtected
    IsRectValid:
      inputs: {}
      outputs:
      - name: isValid
        type: boolean
    SetAllPoints:
      impl: Region/SetAllPoints
    SetCollapsesLayout:
      inputs:
      - name: collapsesLayout
        type: boolean
      outputs: {}
    SetHeight:
      setter:
      - name: height
    SetIgnoreParentAlpha:
      setter:
      - name: isIgnoringParentAlpha
    SetIgnoreParentScale:
      setter:
      - name: isIgnoringParentScale
    SetMouseClickEnabled:
      setter:
      - name: mouseClickEnabled
    SetMouseMotionEnabled:
      setter:
      - name: mouseMotionEnabled
    SetPassThroughButtons:
      inputs:
      - name: unpackedPrimitiveType
        type: number
      instride: 1
      outputs: {}
    SetPoint:
      impl: Region/SetPoint
    SetPropagateMouseClicks:
      inputs:
      - name: propagate
        type: boolean
      outputs: {}
    SetPropagateMouseMotion:
      inputs:
      - name: propagate
        type: boolean
      outputs: {}
    SetSize:
      setter:
      - name: width
      - name: height
    SetWidth:
      setter:
      - name: width
    StopAnimating:
      inputs: {}
      outputs: {}
  virtual: true
RegionBase:
  fields:
    alpha:
      init: 1
      type: number
    scale:
      init: 1
      type: number
    shown:
      init: true
      type: boolean
  inherits: {}
  methods:
    GetAlpha:
      getter:
      - name: alpha
    GetScale:
      getter:
      - name: scale
    Hide:
      impl: Region/Hide
    IsShown:
      getter:
      - name: shown
    IsVisible:
      impl: Region/IsVisible
    SetAlpha:
      impl: Region/SetAlpha
    SetScale:
      impl: Region/SetScale
    SetShown:
      impl: Region/SetShown
    Show:
      impl: Region/Show
  virtual: true
Rotation:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetDegrees:
      inputs: {}
      outputs:
      - name: angle
        type: number
    GetOrigin:
      inputs: {}
      outputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
    GetRadians:
      inputs: {}
      outputs:
      - name: angle
        type: number
    SetDegrees:
      inputs:
      - name: angle
        type: number
      outputs: {}
    SetOrigin:
      inputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
      outputs: {}
    SetRadians:
      inputs:
      - name: angle
        type: number
      outputs: {}
Scale:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetOrigin:
      inputs: {}
      outputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
    GetScale:
      inputs: {}
      outputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
    GetScaleFrom:
      inputs: {}
      outputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
    GetScaleTo:
      inputs: {}
      outputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
    SetOrigin:
      inputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
      outputs: {}
    SetScale:
      inputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
      outputs: {}
    SetScaleFrom:
      inputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
      outputs: {}
    SetScaleTo:
      inputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
      outputs: {}
ScriptObject:
  fields: {}
  inherits:
    ScriptObjectBase: {}
  methods:
    GetScript:
      impl: ScriptObject/GetScript
    HasScript:
      outputs:
      - name: hasScript
        stub: true
        type: boolean
    HookScript:
      impl: ScriptObject/HookScript
    SetScript:
      impl: ScriptObject/SetScript
  virtual: true
ScriptObjectBase:
  fields:
    scripts:
      init:
        0: {}
        1: {}
        2: {}
      type: table
  inherits: {}
  methods: {}
  virtual: true
ScrollFrame:
  fields:
    scrollChild:
      nilable: true
      type: Frame
  inherits:
    Frame: {}
  methods:
    GetHorizontalScroll:
      inputs: {}
      outputs:
      - name: offset
        type: number
    GetHorizontalScrollRange:
      inputs: {}
      outputs:
      - name: range
        type: number
    GetScrollChild:
      getter:
      - name: scrollChild
    GetVerticalScroll:
      inputs: {}
      outputs:
      - name: offset
        type: number
    GetVerticalScrollRange:
      inputs: {}
      outputs:
      - name: range
        type: number
    SetHorizontalScroll:
      inputs:
      - name: offset
        type: number
      outputs: {}
    SetScrollChild:
      impl: ScrollFrame/SetScrollChild
      inputs:
      - name: scrollChild
        type: Frame
      outputs: {}
    SetVerticalScroll:
      inputs:
      - name: offset
        type: number
      outputs: {}
    UpdateScrollChildRect:
      inputs: {}
      outputs: {}
SimpleHTML:
  fieldinitoverrides:
    hyperlinksEnabled: true
  fields: {}
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    GetContentHeight:
      inputs: {}
      outputs:
      - name: height
        type: number
    GetHyperlinkFormat:
      inputs: {}
      outputs:
      - name: format
        type: string
    GetTextData:
      inputs: {}
      outputs:
      - name: content
        type:
          arrayof:
            structure: HTMLContentNode
    SetHyperlinkFormat:
      inputs:
      - name: format
        type: string
      outputs: {}
    SetText:
      inputs:
      - name: text
        type: string
      - default: false
        name: ignoreMarkup
        type: boolean
      outputs: {}
Slider:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    enabled:
      init: true
      type: boolean
    max:
      init: 0
      type: number
    min:
      init: 0
      type: number
    orientation:
      init: VERTICAL
      type: Orientation
    thumbTexture:
      nilable: true
      type: Texture
    value:
      init: 0
      type: number
  inherits:
    Frame: {}
  methods:
    Disable:
      impl: Slider/Disable
      inputs: {}
      outputs: {}
    Enable:
      impl: Slider/Enable
      inputs: {}
      outputs: {}
    GetMinMaxValues:
      getter:
      - name: min
      - name: max
    GetObeyStepOnDrag:
      inputs: {}
      outputs:
      - name: isObeyStepOnDrag
        type: boolean
    GetOrientation:
      getter:
      - name: orientation
    GetStepsPerPage:
      inputs: {}
      outputs:
      - name: stepsPerPage
        type: number
    GetThumbTexture:
      getter:
      - name: thumbTexture
    GetValue:
      getter:
      - name: value
    GetValueStep:
      inputs: {}
      outputs:
      - name: valueStep
        type: number
    IsDraggingThumb:
      inputs: {}
      outputs:
      - name: isDraggingThumb
        type: boolean
    IsEnabled:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    SetEnabled:
      inputs:
      - name: enabled
        type: boolean
      outputs: {}
    SetMinMaxValues:
      setter:
      - name: min
      - name: max
    SetObeyStepOnDrag:
      inputs:
      - name: obeyStepOnDrag
        type: boolean
      outputs: {}
    SetOrientation:
      setter:
      - name: orientation
    SetStepsPerPage:
      inputs:
      - name: stepsPerPage
        type: number
      outputs: {}
    SetThumbTexture:
      setter:
      - name: thumbTexture
    SetValue:
      setter:
      - name: value
    SetValueStep:
      inputs:
      - name: valueStep
        type: number
      outputs: {}
StatusBar:
  fields:
    fillStyle:
      init: STANDARD
      type: StatusBarFillStyle
    max:
      init: 0
      type: number
    min:
      init: 0
      type: number
    statusBarTexture:
      nilable: true
      type: Texture
    value:
      init: 0
      type: number
  inherits:
    Frame: {}
  methods:
    GetFillStyle:
      getter:
      - name: fillStyle
    GetMinMaxValues:
      getter:
      - name: min
      - name: max
    GetOrientation:
      inputs: {}
      outputs:
      - name: orientation
        type: Orientation
    GetReverseFill:
      inputs: {}
      outputs:
      - name: isReverseFill
        type: boolean
    GetRotatesTexture:
      inputs: {}
      outputs:
      - name: rotatesTexture
        type: boolean
    GetStatusBarColor:
      impl: StatusBar/GetStatusBarColor
    GetStatusBarDesaturation:
      inputs: {}
      outputs:
      - name: desaturation
        type: number
    GetStatusBarTexture:
      getter:
      - name: statusBarTexture
    GetValue:
      getter:
      - name: value
    IsStatusBarDesaturated:
      inputs: {}
      outputs:
      - name: desaturated
        type: boolean
    SetColorFill:
      inputs:
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: a
        nilable: true
        type: number
      outputs: {}
    SetFillStyle:
      setter:
      - name: fillStyle
    SetMinMaxValues:
      setter:
      - name: min
      - name: max
    SetOrientation:
      inputs:
      - name: orientation
        type: Orientation
      outputs: {}
    SetReverseFill:
      inputs:
      - name: isReverseFill
        type: boolean
      outputs: {}
    SetRotatesTexture:
      inputs:
      - name: rotatesTexture
        type: boolean
      outputs: {}
    SetStatusBarColor:
      impl: StatusBar/SetStatusBarColor
    SetStatusBarDesaturated:
      inputs:
      - default: false
        name: desaturated
        type: boolean
      outputs: {}
    SetStatusBarDesaturation:
      inputs:
      - name: desaturation
        type: number
      outputs: {}
    SetStatusBarTexture:
      impl: StatusBar/SetStatusBarTexture
    SetValue:
      setter:
      - name: value
TabardModel:
  fields: {}
  inherits:
    PlayerModel: {}
  methods:
    CanSaveTabardNow:
      inputs: {}
      outputs:
      - name: canSave
        type: boolean
    CycleVariation:
      inputs:
      - name: variationIndex
        type: number
      - name: delta
        type: number
      outputs: {}
    GetLowerBackgroundFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetLowerEmblemFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetLowerEmblemTexture:
      inputs:
      - name: texture
        type: Texture
      outputs: {}
    GetUpperBackgroundFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetUpperEmblemFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetUpperEmblemTexture:
      inputs:
      - name: texture
        type: Texture
      outputs: {}
    InitializeTabardColors:
      inputs: {}
      outputs: {}
    IsGuildTabard:
      inputs: {}
      outputs:
      - name: isGuildTabard
        type: boolean
    Save:
      inputs: {}
      outputs: {}
Texture:
  fields: {}
  inherits:
    TextureBase: {}
  methods:
    AddMaskTexture:
      inputs:
      - name: mask
        type: table
      outputs: {}
    GetMaskTexture:
      inputs:
      - name: index
        type: number
      outputs:
      - name: mask
        type: table
    GetNumMaskTextures:
      inputs: {}
      outputs:
      - name: count
        type: number
    RemoveMaskTexture:
      inputs:
      - name: mask
        type: table
      outputs: {}
TextureBase:
  fields:
    atlas:
      nilable: true
      type: string
    blendMode:
      init: BLEND
      type: BlendMode
    blx:
      init: 0
      type: number
    bly:
      init: 1
      type: number
    brx:
      init: 1
      type: number
    bry:
      init: 1
      type: number
    colorTextureA:
      nilable: true
      type: number
    colorTextureB:
      nilable: true
      type: number
    colorTextureG:
      nilable: true
      type: number
    colorTextureR:
      nilable: true
      type: number
    horizTile:
      init: false
      type: boolean
    maskName:
      nilable: true
      type: string
    texture:
      nilable: true
      type: string
    tlx:
      init: 0
      type: number
    tly:
      init: 0
      type: number
    trx:
      init: 1
      type: number
    try:
      init: 0
      type: number
    vertTile:
      init: false
      type: boolean
  inherits:
    LayeredRegion: {}
    ScriptObject: {}
  methods:
    ClearTextureSlice:
      inputs: {}
      outputs: {}
    GetAtlas:
      getter:
      - name: atlas
    GetBlendMode:
      getter:
      - name: blendMode
    GetDesaturation:
      inputs: {}
      outputs:
      - name: desaturation
        type: number
    GetHorizTile:
      getter:
      - name: horizTile
    GetRotation:
      inputs: {}
      outputs:
      - name: radians
        type: number
      - name: normalizedRotationPoint
        type:
          structure: vector2
    GetTexCoord:
      getter:
      - name: tlx
      - name: tly
      - name: blx
      - name: bly
      - name: trx
      - name: try
      - name: brx
      - name: bry
    GetTexelSnappingBias:
      inputs: {}
      outputs:
      - name: bias
        type: number
    GetTexture:
      impl: Texture/GetTexture
    GetTextureFileID:
      inputs: {}
      outputs:
      - name: textureFile
        type: number
    GetTextureFilePath:
      inputs: {}
      outputs:
      - name: textureFile
        nilable: true
        type: string
    GetTextureSliceMargins:
      inputs: {}
      mayreturnnothing: true
      outputs:
      - name: left
        type: number
      - name: top
        type: number
      - name: right
        type: number
      - name: bottom
        type: number
    GetTextureSliceMode:
      inputs: {}
      mayreturnnothing: true
      outputs:
      - name: sliceMode
        type:
          enum: UITextureSliceMode
    GetVertexColor:
      getter:
      - name: vertexColorR
      - name: vertexColorG
      - name: vertexColorB
      - name: vertexColorA
    GetVertexOffset:
      inputs:
      - name: vertexIndex
        type: number
      outputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetVertTile:
      getter:
      - name: vertTile
    IsBlockingLoadRequested:
      inputs: {}
      outputs:
      - name: blocking
        type: boolean
    IsDesaturated:
      inputs: {}
      outputs:
      - name: desaturated
        type: boolean
    IsSnappingToPixelGrid:
      inputs: {}
      outputs:
      - name: snap
        type: boolean
    SetAtlas:
      impl: Texture/SetAtlas
    SetBlendMode:
      setter:
      - name: blendMode
    SetBlockingLoadsRequested:
      inputs:
      - default: false
        name: blocking
        type: boolean
      outputs: {}
    SetColorTexture:
      impl: Texture/SetColorTexture
    SetDesaturated:
      inputs:
      - default: false
        name: desaturated
        type: boolean
      outputs: {}
    SetDesaturation:
      inputs:
      - name: desaturation
        type: number
      outputs: {}
    SetGradient:
      inputs:
      - name: orientation
        type: Orientation
      - name: minColor
        type:
          structure: colorRGBA
      - name: maxColor
        type:
          structure: colorRGBA
      outputs: {}
    SetHorizTile:
      setter:
      - name: horizTile
    SetMask:
      setter:
      - name: maskName
    SetRotation:
      inputs:
      - name: radians
        type: number
      - name: normalizedRotationPoint
        nilable: true
        type:
          structure: vector2
      outputs: {}
    SetSnapToPixelGrid:
      inputs:
      - default: false
        name: snap
        type: boolean
      outputs: {}
    SetTexCoord:
      impl: Texture/SetTexCoord
    SetTexelSnappingBias:
      inputs:
      - name: bias
        type: number
      outputs: {}
    SetTexture:
      impl: Texture/SetTexture
    SetTextureSliceMargins:
      inputs:
      - name: left
        type: number
      - name: top
        type: number
      - name: right
        type: number
      - name: bottom
        type: number
      outputs: {}
    SetTextureSliceMode:
      inputs:
      - name: sliceMode
        type:
          enum: UITextureSliceMode
      outputs: {}
    SetVertexOffset:
      inputs:
      - name: vertexIndex
        type: number
      - name: offsetX
        type: number
      - name: offsetY
        type: number
      outputs: {}
    SetVertTile:
      setter:
      - name: vertTile
  virtual: true
TextureCoordTranslation:
  fields: {}
  inherits:
    Translation: {}
  methods: {}
Translation:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetOffset:
      inputs: {}
      outputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    SetOffset:
      inputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
      outputs: {}
UIObject:
  fields:
    forbidden:
      init: false
      type: boolean
    name:
      nilable: true
      type: string
  inherits: {}
  methods:
    GetName:
      getter:
      - name: name
    GetObjectType:
      impl: UIObject/GetObjectType
      inputs: {}
      outputs:
      - name: objectType
        type: string
    IsForbidden:
      getter:
      - name: forbidden
    IsObjectType:
      impl: UIObject/IsObjectType
      inputs:
      - name: objectType
        type: string
      outputs:
      - name: isType
        type: boolean
    SetForbidden:
      impl: ForbiddenMixin/SetForbidden
      inputs: {}
      outputs: {}
  virtual: true
UnitPositionFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    AddUnit:
      inputs:
      - name: unitTokenString
        type: string
      - name: asset
        type: string
      - name: width
        nilable: true
        type: number
      - name: height
        nilable: true
        type: number
      - name: r
        nilable: true
        type: number
      - name: g
        nilable: true
        type: number
      - name: b
        nilable: true
        type: number
      - name: a
        nilable: true
        type: number
      - name: sublayer
        nilable: true
        type: number
      - name: showFacing
        nilable: true
        type: boolean
      outputs: {}
    ClearUnits:
      inputs: {}
      outputs: {}
    FinalizeUnits:
      inputs: {}
      outputs: {}
    GetMouseOverUnits:
      inputs: {}
      outputs:
      - name: units
        type: string
      outstride: 1
      stuboutstrides: 0
    GetPlayerPingScale:
      inputs: {}
      outputs:
      - name: scale
        type: number
    GetUiMapID:
      inputs: {}
      outputs:
      - name: mapID
        type: number
    SetPlayerPingScale:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetPlayerPingTexture:
      inputs:
      - name: textureType
        type:
          enum: PingTextureType
      - name: asset
        type: string
      - default: 0
        name: width
        type: number
      - default: 0
        name: height
        type: number
      outputs: {}
    SetUiMapID:
      inputs:
      - name: mapID
        type: number
      outputs: {}
    SetUnitColor:
      inputs:
      - name: unit
        type: string
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: colorA
        type: number
      outputs: {}
    StartPlayerPing:
      inputs:
      - default: 0
        name: duration
        type: number
      - default: 0
        name: fadeDuration
        type: number
      outputs: {}
    StopPlayerPing:
      inputs: {}
      outputs: {}
VertexColor:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetEndColor:
      inputs: {}
      outputs:
      - name: color
        type:
          structure: colorRGBA
    GetStartColor:
      inputs: {}
      outputs:
      - name: color
        type:
          structure: colorRGBA
    SetEndColor:
      inputs:
      - name: color
        type:
          structure: colorRGBA
      outputs: {}
    SetStartColor:
      inputs:
      - name: color
        type:
          structure: colorRGBA
      outputs: {}

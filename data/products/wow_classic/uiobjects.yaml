---
Actor:
  fields: {}
  inherits:
    ParentedObjectBase: {}
    RegionBase: {}
    ScriptObjectBase: {}
  methods:
    ClearModel:
      inputs: {}
      outputs: {}
    GetActiveBoundingBox:
      inputs: {}
      outputs:
      - name: boxBottom
        type:
          structure: vector3
      - name: boxTop
        type:
          structure: vector3
    GetAnimation:
      inputs: {}
      outputs:
      - name: animation
        type: number
    GetAnimationBlendOperation:
      inputs: {}
      outputs:
      - name: blendOp
        type:
          enum: ModelBlendOperation
    GetAnimationVariation:
      inputs: {}
      outputs:
      - name: variation
        type: number
    GetDesaturation:
      inputs: {}
      outputs:
      - name: strength
        type: number
    GetMaxBoundingBox:
      inputs: {}
      outputs:
      - name: boxBottom
        type:
          structure: vector3
      - name: boxTop
        type:
          structure: vector3
    GetModelFileID:
      inputs: {}
      outputs:
      - name: file
        type: number
    GetModelPath:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetModelUnitGUID:
      inputs: {}
      outputs:
      - name: guid
        type: string
    GetParticleOverrideScale:
      inputs: {}
      outputs:
      - name: scale
        nilable: true
        type: number
    GetPitch:
      inputs: {}
      outputs:
      - name: pitch
        type: number
    GetPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
    GetRoll:
      inputs: {}
      outputs:
      - name: roll
        type: number
    GetSpellVisualKit:
      inputs: {}
      outputs:
      - name: spellVisualKitID
        type: number
    GetYaw:
      inputs: {}
      outputs:
      - name: yaw
        type: number
    IsLoaded:
      inputs: {}
      outputs:
      - name: isLoaded
        type: boolean
    IsUsingCenterForOrigin:
      inputs: {}
      outputs:
      - name: x
        type: boolean
      - name: y
        type: boolean
      - name: z
        type: boolean
    PlayAnimationKit:
      inputs:
      - name: animationKit
        type: number
      - default: false
        name: isLooping
        type: boolean
      outputs: {}
    SetAnimation:
      inputs:
      - name: animation
        type: number
      - name: variation
        nilable: true
        type: number
      - default: 1
        name: animSpeed
        type: number
      - default: 0
        name: animOffsetSeconds
        type: number
      outputs: {}
    SetAnimationBlendOperation:
      inputs:
      - name: blendOp
        type:
          enum: ModelBlendOperation
      outputs: {}
    SetDesaturation:
      inputs:
      - name: strength
        type: number
      outputs: {}
    SetModelByCreatureDisplayID:
      inputs:
      - name: creatureDisplayID
        type: number
      - default: false
        name: useActivePlayerCustomizations
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetModelByFileID:
      inputs:
      - name: asset
        type: string
      - default: false
        name: useMips
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetModelByPath:
      inputs:
      - name: asset
        type: string
      - default: false
        name: useMips
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetModelByUnit:
      inputs:
      - name: unit
        type: unit
      - default: false
        name: sheatheWeapons
        type: boolean
      - default: true
        name: autoDress
        type: boolean
      - default: false
        name: hideWeapons
        type: boolean
      - default: true
        name: usePlayerNativeForm
        type: boolean
      - default: false
        name: holdBowString
        type: boolean
      outputs:
      - name: success
        type: boolean
    SetParticleOverrideScale:
      inputs:
      - name: scale
        nilable: true
        type: number
      outputs: {}
    SetPitch:
      inputs:
      - name: pitch
        type: number
      outputs: {}
    SetPosition:
      inputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
      - name: positionZ
        type: number
      outputs: {}
    SetRoll:
      inputs:
      - name: roll
        type: number
      outputs: {}
    SetSpellVisualKit:
      inputs:
      - default: 0
        name: spellVisualKitID
        type: number
      - default: false
        name: oneShot
        type: boolean
      outputs: {}
    SetUseCenterForOrigin:
      inputs:
      - default: false
        name: x
        type: boolean
      - default: false
        name: y
        type: boolean
      - default: false
        name: z
        type: boolean
      outputs: {}
    SetYaw:
      inputs:
      - name: yaw
        type: number
      outputs: {}
    StopAnimationKit:
      inputs: {}
      outputs: {}
  objectType: ModelSceneActor
Alpha:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetFromAlpha:
      inputs: {}
      outputs:
      - name: normalizedAlpha
        type: number
    GetToAlpha:
      inputs: {}
      outputs:
      - name: normalizedAlpha
        type: number
    SetFromAlpha:
      inputs:
      - name: normalizedAlpha
        type: number
      outputs: {}
    SetToAlpha:
      inputs:
      - name: normalizedAlpha
        type: number
      outputs: {}
Animation:
  fields:
    endDelay:
      init: 0
      type: number
    smoothing:
      init: NONE
      type: SmoothingType
    startDelay:
      init: 0
      type: number
  inherits:
    ParentedObject: {}
    ScriptObject: {}
  methods:
    GetDuration: {}
    GetElapsed: {}
    GetEndDelay:
      getter:
      - name: endDelay
    GetOrder: {}
    GetProgress: {}
    GetRegionParent:
      impl: Animation/GetRegionParent
      inputs: {}
      outputs:
      - name: region
        type: UIObject
    GetSmoothing:
      getter:
      - name: smoothing
    GetSmoothProgress: {}
    GetStartDelay:
      getter:
      - name: startDelay
    GetTarget: {}
    IsDelaying: {}
    IsDone: {}
    IsPaused: {}
    IsPlaying: {}
    IsStopped: {}
    Pause: {}
    Play: {}
    Restart: {}
    SetChildKey: {}
    SetDuration: {}
    SetEndDelay:
      setter:
      - name: endDelay
    SetOrder: {}
    SetPlaying: {}
    SetSmoothing:
      setter:
      - name: smoothing
    SetSmoothProgress: {}
    SetStartDelay:
      setter:
      - name: startDelay
    SetTarget: {}
    SetTargetKey: {}
    SetTargetName: {}
    SetTargetParent: {}
    Stop: {}
AnimationGroup:
  fields:
    looping:
      init: NONE
      type: LoopType
  inherits:
    ParentedObjectBase: {}
    ScriptObject: {}
  methods:
    CreateAnimation:
      impl: AnimationGroup/CreateAnimation
      inputs:
      - name: animationType
        nilable: true
        type: string
      - name: name
        nilable: true
        type: string
      - name: templateName
        nilable: true
        type: string
      outputs:
      - name: anim
        type: Animation
    Finish: {}
    GetAnimations:
      impl: AnimationGroup/GetAnimations
      inputs: {}
      outputs:
      - name: scriptObject
        type: UIObject
      outstride: 1
    GetAnimationSpeedMultiplier: {}
    GetDuration: {}
    GetElapsed: {}
    GetLooping:
      getter:
      - name: looping
    GetLoopState: {}
    GetProgress: {}
    IsDone: {}
    IsPaused: {}
    IsPendingFinish: {}
    IsPlaying: {}
    IsReverse: {}
    IsSetToFinalAlpha: {}
    Pause: {}
    Play: {}
    RemoveAnimations: {}
    Restart: {}
    SetAnimationSpeedMultiplier: {}
    SetLooping:
      setter:
      - name: looping
    SetPlaying: {}
    SetToFinalAlpha: {}
    Stop: {}
ArchaeologyDigSiteFrame:
  fields: {}
  inherits:
    Frame: {}
    POIFrame: {}
  methods: {}
Browser:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
    mouseWheelEnabled: true
    resizable: true
  fields: {}
  inherits:
    Frame: {}
  methods:
    ClearFocus:
      inputs: {}
      outputs: {}
    CopyExternalLink:
      inputs: {}
      outputs: {}
    DeleteCookies:
      inputs: {}
      outputs: {}
    NavigateBack:
      inputs: {}
      outputs: {}
    NavigateForward:
      inputs: {}
      outputs: {}
    NavigateHome:
      inputs:
      - name: urlType
        type: string
      outputs: {}
    NavigateReload:
      inputs: {}
      outputs: {}
    NavigateStop:
      inputs: {}
      outputs: {}
    NavigateTo:
      inputs:
      - name: url
        type: string
      outputs: {}
    OpenExternalLink:
      inputs: {}
      outputs: {}
    OpenTicket:
      inputs:
      - name: index
        type: number
      outputs: {}
    SetFocus:
      inputs: {}
      outputs: {}
    SetZoom:
      inputs:
      - name: zoom
        type: number
      outputs: {}
Button:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    beingClicked:
      init: false
      type: boolean
    buttonLocked:
      init: false
      type: boolean
    buttonState:
      init: NORMAL
      type: SimpleButtonStateToken
    disabledTexture:
      nilable: true
      type: Texture
    fontstring:
      nilable: true
      type: FontString
    highlightTexture:
      nilable: true
      type: Texture
    motionScriptsWhileDisabled:
      init: false
      type: boolean
    normalFontObject:
      nilable: true
      type: Font
    normalTexture:
      nilable: true
      type: Texture
    pushedTextOffsetX:
      init: 0
      type: number
    pushedTextOffsetY:
      init: 0
      type: number
    pushedTexture:
      nilable: true
      type: Texture
    registeredClicks:
      init:
        leftbuttonup: true
      type: table
  inherits:
    Frame: {}
  methods:
    ClearDisabledTexture: {}
    ClearHighlightTexture: {}
    ClearNormalTexture: {}
    ClearPushedTexture: {}
    Click:
      impl: Button/Click
      inputs:
      - default: LeftButton
        name: button
        type: string
      - default: false
        name: isDown
        type: boolean
      outputs: {}
    Disable:
      impl: Button/Disable
      inputs: {}
      outputs: {}
    Enable:
      impl: Button/Enable
      inputs: {}
      outputs: {}
    GetButtonState:
      getter:
      - name: buttonState
    GetDisabledFontObject: {}
    GetDisabledTexture:
      getter:
      - name: disabledTexture
    GetFontString:
      getter:
      - name: fontstring
    GetHighlightFontObject: {}
    GetHighlightTexture:
      getter:
      - name: highlightTexture
    GetMotionScriptsWhileDisabled:
      getter:
      - name: motionScriptsWhileDisabled
    GetNormalFontObject:
      getter:
      - name: normalFontObject
    GetNormalTexture:
      getter:
      - name: normalTexture
    GetPushedTextOffset:
      getter:
      - name: pushedTextOffsetX
      - name: pushedTextOffsetY
    GetPushedTexture:
      getter:
      - name: pushedTexture
    GetText:
      impl: Button/GetText
    GetTextHeight:
      outputs:
      - type: number
    GetTextWidth:
      outputs:
      - type: number
    IsEnabled:
      impl: Button/IsEnabled
    RegisterForClicks:
      impl: Button/RegisterForClicks
    RegisterForMouse: {}
    SetButtonState:
      impl: Button/SetButtonState
      inputs:
      - name: buttonState
        type: SimpleButtonStateToken
      - default: false
        name: lock
        type: boolean
      outputs: {}
    SetDisabledAtlas:
      impl: Button/SetDisabledAtlas
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetDisabledFontObject: {}
    SetDisabledTexture:
      impl: Button/SetDisabledTexture
    SetEnabled:
      impl: Button/SetEnabled
    SetFontString:
      impl: Button/SetFontString
      inputs:
      - name: fontString
        type: FontString
      outputs: {}
    SetFormattedText:
      impl: Button/SetFormattedText
    SetHighlightAtlas:
      impl: Button/SetHighlightAtlas
    SetHighlightFontObject: {}
    SetHighlightTexture:
      impl: Button/SetHighlightTexture
    SetMotionScriptsWhileDisabled:
      setter:
      - name: motionScriptsWhileDisabled
    SetNormalAtlas:
      impl: Button/SetNormalAtlas
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetNormalFontObject:
      setter:
      - name: normalFontObject
    SetNormalTexture:
      impl: Button/SetNormalTexture
    SetPushedAtlas:
      impl: Button/SetPushedAtlas
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetPushedTextOffset:
      setter:
      - name: pushedTextOffsetX
      - name: pushedTextOffsetY
    SetPushedTexture:
      impl: Button/SetPushedTexture
    SetText:
      impl: Button/SetText
CheckButton:
  fields:
    checked:
      init: false
      type: boolean
    checkedTexture:
      nilable: true
      type: Texture
    disabledCheckedTexture:
      nilable: true
      type: Texture
  inherits:
    Button: {}
  methods:
    GetChecked:
      getter:
      - name: checked
    GetCheckedTexture:
      getter:
      - name: checkedTexture
    GetDisabledCheckedTexture:
      getter:
      - name: disabledCheckedTexture
    SetChecked:
      impl: CheckButton/SetChecked
    SetCheckedTexture:
      impl: CheckButton/SetCheckedTexture
    SetDisabledCheckedTexture:
      setter:
      - name: disabledCheckedTexture
Checkout:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
    mouseWheelEnabled: true
    resizable: true
  fields: {}
  inherits:
    Frame: {}
  methods:
    CancelOpenCheckout:
      inputs: {}
      outputs: {}
    ClearFocus:
      inputs: {}
      outputs: {}
    CloseCheckout:
      inputs: {}
      outputs: {}
    CopyExternalLink:
      inputs: {}
      outputs: {}
    OpenCheckout:
      inputs:
      - name: checkoutID
        type: number
      outputs:
      - name: wasOpened
        type: boolean
    OpenExternalLink:
      inputs: {}
      outputs: {}
    SetFocus:
      inputs: {}
      outputs: {}
    SetZoom:
      inputs:
      - name: zoomLevel
        type: number
      outputs: {}
  objectType: BlizzardCheckout
CinematicModel:
  fields: {}
  inherits:
    PlayerModel: {}
  methods:
    EquipItem:
      inputs:
      - name: itemID
        type: number
      outputs: {}
    InitializeCamera:
      inputs:
      - default: 0
        name: scaleFactor
        type: number
      outputs: {}
    InitializePanCamera:
      inputs:
      - default: 0
        name: scaleFactor
        type: number
      outputs: {}
    SetAnimOffset:
      inputs:
      - name: offset
        type: number
      outputs: {}
    SetCreatureData:
      inputs:
      - name: creatureID
        type: number
      outputs: {}
    SetFacingLeft:
      inputs:
      - default: false
        name: isFacingLeft
        type: boolean
      outputs: {}
    SetFadeTimes:
      inputs:
      - name: fadeInSeconds
        type: number
      - name: fadeOutSeconds
        type: number
      outputs: {}
    SetHeightFactor:
      inputs:
      - name: factor
        type: number
      outputs: {}
    SetJumpInfo:
      inputs:
      - name: jumpLength
        type: number
      - name: jumpHeight
        type: number
      outputs: {}
    SetPanDistance:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetSpellVisualKit:
      inputs:
      - name: visualKitID
        type: number
      outputs: {}
    SetTargetDistance:
      inputs:
      - name: scale
        type: number
      outputs: {}
    StartPan:
      inputs:
      - name: panType
        type: number
      - name: durationSeconds
        type: number
      - default: false
        name: doFade
        type: boolean
      - default: 0
        name: visKitID
        type: number
      - default: 0
        name: startPositionScale
        type: number
      - default: 1
        name: speedMultiplier
        type: number
      outputs: {}
    StopPan:
      inputs: {}
      outputs: {}
    UnequipItems:
      inputs: {}
      outputs: {}
ColorSelect:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    colorValueTexture:
      nilable: true
      type: Texture
    colorValueThumbTexture:
      nilable: true
      type: Texture
    colorWheelTexture:
      nilable: true
      type: Texture
    colorWheelThumbTexture:
      nilable: true
      type: Texture
  inherits:
    Frame: {}
  methods:
    ClearColorWheelTexture: {}
    GetColorAlpha: {}
    GetColorAlphaTexture: {}
    GetColorAlphaThumbTexture: {}
    GetColorHSV:
      outputs:
      - name: h
        type: number
      - name: s
        type: number
      - name: v
        type: number
    GetColorRGB:
      outputs:
      - name: r
        type: number
      - name: g
        type: number
      - name: b
        type: number
    GetColorValueTexture:
      getter:
      - name: colorValueTexture
    GetColorValueThumbTexture:
      getter:
      - name: colorValueThumbTexture
    GetColorWheelTexture:
      getter:
      - name: colorWheelTexture
    GetColorWheelThumbTexture:
      getter:
      - name: colorWheelThumbTexture
    SetColorAlpha: {}
    SetColorAlphaTexture: {}
    SetColorAlphaThumbTexture: {}
    SetColorHSV: {}
    SetColorRGB: {}
    SetColorValueTexture:
      setter:
      - name: colorValueTexture
    SetColorValueThumbTexture:
      setter:
      - name: colorValueThumbTexture
    SetColorWheelTexture:
      setter:
      - name: colorWheelTexture
    SetColorWheelThumbTexture:
      setter:
      - name: colorWheelThumbTexture
ControlPoint:
  fields: {}
  inherits:
    ParentedObject: {}
  methods:
    GetOffset:
      inputs: {}
      outputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetOrder:
      inputs: {}
      outputs:
      - name: order
        type: number
    SetOffset:
      inputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
      outputs: {}
    SetOrder:
      inputs:
      - name: order
        type: number
      outputs: {}
Cooldown:
  fields:
    blingTexture:
      nilable: true
      type: Texture
    durationMillis:
      init: 0
      type: number
    edgeTexture:
      nilable: true
      type: Texture
    startTimeMillis:
      init: 0
      type: number
    swipeTexture:
      nilable: true
      type: Texture
  inherits:
    Frame: {}
  methods:
    Clear: {}
    GetCooldownDisplayDuration: {}
    GetCooldownDuration: {}
    GetCooldownTimes:
      getter:
      - name: startTimeMillis
      - name: durationMillis
    GetDrawBling: {}
    GetDrawEdge: {}
    GetDrawSwipe: {}
    GetEdgeScale: {}
    GetReverse: {}
    GetRotation: {}
    IsPaused: {}
    Pause: {}
    Resume: {}
    SetBlingTexture:
      setter:
      - name: blingTexture
    SetCooldown: {}
    SetCooldownDuration: {}
    SetCooldownUNIX: {}
    SetCountdownAbbrevThreshold: {}
    SetCountdownFont: {}
    SetDrawBling: {}
    SetDrawEdge: {}
    SetDrawSwipe: {}
    SetEdgeScale: {}
    SetEdgeTexture:
      setter:
      - name: edgeTexture
    SetHideCountdownNumbers: {}
    SetReverse: {}
    SetRotation: {}
    SetSwipeColor: {}
    SetSwipeTexture:
      setter:
      - name: swipeTexture
    SetTexCoordRange: {}
    SetUseCircularEdge: {}
DressUpModel:
  fields: {}
  inherits:
    PlayerModel: {}
  methods:
    Dress:
      inputs: {}
      outputs: {}
    GetAutoDress:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    GetItemModifiedAppearanceID:
      inputs:
      - name: invSlot
        type: number
      outputs:
      - name: itemModAppearanceID
        type: number
    GetItemTransmogInfo:
      inputs:
      - name: inventorySlot
        type: number
      outputs:
      - name: itemTransmogInfo
        type:
          structure: ItemTransmogInfo
    GetItemTransmogInfoList:
      inputs: {}
      outputs:
      - name: infoList
        type:
          arrayof:
            structure: ItemTransmogInfo
    GetObeyHideInTransmogFlag:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    GetSheathed:
      inputs: {}
      outputs:
      - name: sheathed
        type: boolean
    GetSpellItemEnchantmentID:
      inputs:
      - name: invSlot
        type: number
      outputs:
      - name: spellItemEnchantID
        type: number
    GetUseTransmogChoices:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    GetUseTransmogSkin:
      inputs: {}
      outputs:
      - name: enabled
        type: boolean
    IsGeoReady:
      inputs: {}
      outputs:
      - name: ready
        type: boolean
    IsSlotAllowed:
      inputs:
      - name: inventorySlots
        type: number
      outputs:
      - name: allowed
        type: boolean
    IsSlotVisible:
      inputs:
      - name: inventorySlots
        type: number
      outputs:
      - name: visible
        type: boolean
    SetAutoDress:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetObeyHideInTransmogFlag:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetSheathed:
      inputs:
      - default: false
        name: sheathed
        type: boolean
      outputs: {}
    SetUseTransmogChoices:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    SetUseTransmogSkin:
      inputs:
      - default: false
        name: enabled
        type: boolean
      outputs: {}
    TryOn:
      inputs:
      - name: linkOrItemModifiedAppearanceID
        type: string
      - name: handSlotName
        nilable: true
        type: string
      - name: spellEnchantID
        nilable: true
        type: number
      outputs: {}
    Undress:
      inputs: {}
      outputs: {}
    UndressSlot:
      inputs:
      - name: inventorySlot
        type: number
      outputs: {}
EditBox:
  fieldinitoverrides:
    justifyh: LEFT
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    editboxText:
      init: ''
      type: string
    enabled:
      init: true
      type: boolean
    historyLines:
      init: 0
      type: number
    isAutoFocus:
      init: true
      type: boolean
    isCountInvisibleLetters:
      init: false
      type: boolean
    isMultiLine:
      init: false
      type: boolean
    isSecureText:
      init: false
      type: boolean
    maxBytes:
      init: 0
      type: number
    maxLetters:
      init: 0
      type: number
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    AddHistoryLine: {}
    ClearFocus: {}
    ClearHighlightText: {}
    ClearHistory: {}
    Disable:
      impl: EditBox/Disable
      inputs: {}
      outputs: {}
    Enable:
      impl: EditBox/Enable
      inputs: {}
      outputs: {}
    GetAltArrowKeyMode: {}
    GetBlinkSpeed: {}
    GetCursorPosition: {}
    GetDisplayText: {}
    GetHighlightColor: {}
    GetHistoryLines:
      getter:
      - name: historyLines
    GetInputLanguage:
      outputs:
      - name: language
        stub: ROMAN
        type: string
    GetMaxBytes:
      getter:
      - name: maxBytes
    GetMaxLetters:
      getter:
      - name: maxLetters
    GetNumber:
      outputs:
      - type: number
    GetNumLetters: {}
    GetText:
      getter:
      - name: editboxText
    GetTextInsets: {}
    GetUTF8CursorPosition: {}
    GetVisibleTextByteLimit: {}
    HasFocus: {}
    HasText: {}
    HighlightText: {}
    Insert:
      impl: EditBox/Insert
    IsAlphabeticOnly: {}
    IsAutoFocus:
      getter:
      - name: isAutoFocus
    IsCountInvisibleLetters:
      getter:
      - name: isCountInvisibleLetters
    IsEnabled:
      getter:
      - name: enabled
    IsInIMECompositionMode: {}
    IsMultiLine:
      getter:
      - name: isMultiLine
    IsNumeric: {}
    IsNumericFullRange: {}
    IsPassword: {}
    IsSecureText:
      getter:
      - name: isSecureText
    ResetInputMode: {}
    SetAlphabeticOnly: {}
    SetAltArrowKeyMode: {}
    SetAutoFocus:
      setter:
      - name: isAutoFocus
    SetBlinkSpeed: {}
    SetCountInvisibleLetters:
      setter:
      - name: isCountInvisibleLetters
    SetCursorPosition: {}
    SetEnabled:
      setter:
      - name: enabled
    SetFocus: {}
    SetHighlightColor: {}
    SetHistoryLines:
      setter:
      - name: historyLines
    SetMaxBytes:
      setter:
      - name: maxBytes
    SetMaxLetters:
      setter:
      - name: maxLetters
    SetMultiLine:
      setter:
      - name: isMultiLine
    SetNumber: {}
    SetNumeric: {}
    SetNumericFullRange: {}
    SetPassword: {}
    SetSecureText:
      setter:
      - name: isSecureText
    SetSecurityDisablePaste: {}
    SetSecurityDisableSetText: {}
    SetText:
      setter:
      - name: editboxText
    SetTextInsets: {}
    SetVisibleTextByteLimit: {}
    ToggleInputLanguage: {}
FlipBook:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetFlipBookColumns:
      inputs: {}
      outputs:
      - name: columns
        type: number
    GetFlipBookFrameHeight:
      inputs: {}
      outputs:
      - name: height
        type: number
    GetFlipBookFrames:
      inputs: {}
      outputs:
      - name: frames
        type: number
    GetFlipBookFrameWidth:
      inputs: {}
      outputs:
      - name: width
        type: number
    GetFlipBookRows:
      inputs: {}
      outputs:
      - name: rows
        type: number
    SetFlipBookColumns:
      inputs:
      - name: columns
        type: number
      outputs: {}
    SetFlipBookFrameHeight:
      inputs:
      - name: height
        type: number
      outputs: {}
    SetFlipBookFrames:
      inputs:
      - name: frames
        type: number
      outputs: {}
    SetFlipBookFrameWidth:
      inputs:
      - name: width
        type: number
      outputs: {}
    SetFlipBookRows:
      inputs:
      - name: rows
        type: number
      outputs: {}
FogOfWarFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    GetFogOfWarBackgroundAtlas:
      inputs: {}
      outputs:
      - name: atlas
        type: string
    GetFogOfWarBackgroundTexture:
      inputs: {}
      outputs:
      - name: asset
        nilable: true
        type: string
    GetFogOfWarMaskAtlas:
      inputs: {}
      outputs:
      - name: atlas
        type: string
    GetFogOfWarMaskTexture:
      inputs: {}
      outputs:
      - name: asset
        nilable: true
        type: string
    GetMaskScalar:
      inputs: {}
      outputs:
      - name: scalar
        type: number
    GetUiMapID:
      inputs: {}
      outputs:
      - name: uiMapID
        type: number
    SetFogOfWarBackgroundAtlas:
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetFogOfWarBackgroundTexture:
      inputs:
      - name: asset
        type: string
      - name: horizontalTile
        type: boolean
      - name: verticalTile
        type: boolean
      outputs: {}
    SetFogOfWarMaskAtlas:
      inputs:
      - name: atlas
        type: string
      outputs: {}
    SetFogOfWarMaskTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetMaskScalar:
      inputs:
      - name: scalar
        type: number
      outputs: {}
    SetUiMapID:
      inputs:
      - name: uiMapID
        type: number
      outputs: {}
Font:
  fields: {}
  inherits:
    FontInstance: {}
    UIObject: {}
  methods:
    CopyFontObject:
      inputs:
      - name: sourceFont
        type: table
      outputs: {}
    GetAlpha:
      inputs: {}
      outputs:
      - name: alpha
        type: number
    SetAlpha:
      inputs:
      - name: alpha
        type: number
      outputs: {}
FontInstance:
  fields:
    justifyh:
      init: CENTER
      type: JustifyHorizontal
    justifyv:
      init: MIDDLE
      type: JustifyVertical
  inherits: {}
  methods:
    GetFont:
      outputs:
      - name: fontName
        type: string
      - name: fontHeight
        stub: 12
        type: number
      - name: fontFlags
        type: string
    GetFontObject:
      impl: FontInstance/GetFontObject
      inputs: {}
      outputs:
      - name: font
        nilable: true
        type: FontInstance
    GetIndentedWordWrap: {}
    GetJustifyH:
      getter:
      - name: justifyh
    GetJustifyV:
      getter:
      - name: justifyv
    GetShadowColor:
      outputs:
      - type: number
      - type: number
      - type: number
    GetShadowOffset:
      outputs:
      - type: number
    GetSpacing:
      outputs:
      - type: number
    GetTextColor:
      outputs:
      - type: number
      - type: number
      - type: number
    SetFont: {}
    SetFontObject: {}
    SetIndentedWordWrap: {}
    SetJustifyH:
      setter:
      - name: justifyh
    SetJustifyV:
      setter:
      - name: justifyv
    SetShadowColor: {}
    SetShadowOffset: {}
    SetSpacing: {}
    SetTextColor: {}
  virtual: true
FontString:
  fields:
    maxLines:
      init: 0
      type: number
    text:
      nilable: true
      type: string
    textScale:
      init: 1
      type: number
  inherits:
    FontInstance: {}
    LayeredRegion: {}
    ScriptObject: {}
  methods:
    CalculateScreenAreaFromCharacterSpan: {}
    CanNonSpaceWrap: {}
    CanWordWrap: {}
    FindCharacterIndexAtCoordinate: {}
    GetFieldSize: {}
    GetLineHeight:
      outputs:
      - type: number
    GetMaxLines:
      getter:
      - name: maxLines
    GetNumLines:
      outputs:
      - type: number
    GetRotation: {}
    GetStringHeight:
      outputs:
      - type: number
    GetStringWidth:
      outputs:
      - type: number
    GetText:
      getter:
      - name: text
    GetTextScale:
      getter:
      - name: textScale
    GetUnboundedStringWidth:
      outputs:
      - type: number
    GetVertexColor: {}
    GetWrappedWidth:
      outputs:
      - type: number
    IsTruncated: {}
    SetAlphaGradient: {}
    SetFixedColor: {}
    SetFormattedText: {}
    SetMaxLines:
      setter:
      - name: maxLines
    SetNonSpaceWrap: {}
    SetRotation: {}
    SetText:
      impl: FontString/SetText
    SetTextHeight: {}
    SetTextScale:
      setter:
      - name: textScale
    SetTextToFit: {}
    SetWordWrap: {}
Frame:
  fields:
    attributes:
      init: {}
      type: table
    frameLevel:
      init: 0
      type: number
    frameStrata:
      init: MEDIUM
      type: FrameStrata
    hasFixedFrameLevel:
      init: false
      type: boolean
    hasFixedFrameStrata:
      init: false
      type: boolean
    hyperlinkPropagateToParent:
      init: false
      type: boolean
    hyperlinksEnabled:
      init: false
      type: boolean
    id:
      init: 0
      type: number
    isClampedToScreen:
      init: false
      type: boolean
    isUserPlaced:
      init: false
      type: boolean
    maxResizeHeight:
      init: 0
      type: number
    maxResizeWidth:
      init: 0
      type: number
    minResizeHeight:
      init: 0
      type: number
    minResizeWidth:
      init: 0
      type: number
    movable:
      init: false
      type: boolean
    propagateKeyboardInput:
      init: false
      type: boolean
    resizable:
      init: false
      type: boolean
    toplevel:
      init: false
      type: boolean
    usingParentLevel:
      init: false
      type: boolean
  inherits:
    Region: {}
    ScriptObject: {}
  methods:
    AbortDrag: {}
    CanChangeAttribute: {}
    CreateFontString:
      impl: Frame/CreateFontString
      inputs:
      - name: name
        nilable: true
        type: string
      - default: ARTWORK
        name: drawLayer
        nilable: true
        type: DrawLayer
      - name: templateName
        nilable: true
        type: string
      outputs:
      - name: fontString
        type: FontString
    CreateLine:
      impl: Frame/CreateLine
      inputs: {}
      outputs:
      - name: line
        type: Line
    CreateMaskTexture:
      impl: Frame/CreateMaskTexture
      inputs:
      - name: name
        nilable: true
        type: string
      - name: layer
        nilable: true
        type: DrawLayer
      - name: inheritsFrom
        nilable: true
        type: string
      - name: subLayer
        nilable: true
        type: number
      outputs:
      - name: mask
        type: MaskTexture
    CreateTexture:
      impl: Frame/CreateTexture
      inputs:
      - name: name
        nilable: true
        type: string
      - name: layer
        nilable: true
        type: DrawLayer
      - name: inheritsFrom
        nilable: true
        type: string
      - name: subLayer
        nilable: true
        type: number
      outputs:
      - name: texture
        type: Texture
    DesaturateHierarchy: {}
    DisableDrawLayer: {}
    DoesClipChildren: {}
    DoesHyperlinkPropagateToParent:
      getter:
      - name: hyperlinkPropagateToParent
    EnableDrawLayer: {}
    EnableGamePadButton: {}
    EnableGamePadStick: {}
    EnableKeyboard: {}
    ExecuteAttribute: {}
    GetAttribute:
      impl: Frame/GetAttribute
    GetBoundsRect: {}
    GetChildren:
      impl: Frame/GetChildren
    GetClampRectInsets: {}
    GetDontSavePosition: {}
    GetEffectiveAlpha:
      impl: Frame/GetEffectiveAlpha
    GetEffectivelyFlattensRenderLayers: {}
    GetFlattensRenderLayers: {}
    GetFrameLevel:
      getter:
      - name: frameLevel
    GetFrameStrata:
      getter:
      - name: frameStrata
    GetHitRectInsets: {}
    GetHyperlinksEnabled:
      getter:
      - name: hyperlinksEnabled
    GetID:
      getter:
      - name: id
    GetNumChildren:
      impl: Frame/GetNumChildren
    GetNumRegions:
      impl: Frame/GetNumRegions
    GetPropagateKeyboardInput:
      getter:
      - name: propagateKeyboardInput
    GetRaisedFrameLevel: {}
    GetRegions:
      impl: Frame/GetRegions
    GetResizeBounds:
      getter:
      - name: minResizeWidth
      - name: minResizeHeight
      - name: maxResizeWidth
      - name: maxResizeHeight
    GetWindow: {}
    HasFixedFrameLevel:
      getter:
      - name: hasFixedFrameLevel
    HasFixedFrameStrata:
      getter:
      - name: hasFixedFrameStrata
    InterceptStartDrag: {}
    IsClampedToScreen:
      getter:
      - name: isClampedToScreen
    IsEventRegistered:
      impl: Frame/IsEventRegistered
    IsGamePadButtonEnabled: {}
    IsGamePadStickEnabled: {}
    IsKeyboardEnabled: {}
    IsMovable:
      getter:
      - name: movable
    IsResizable:
      getter:
      - name: resizable
    IsToplevel:
      getter:
      - name: toplevel
    IsUserPlaced:
      getter:
      - name: isUserPlaced
    IsUsingParentLevel:
      getter:
      - name: usingParentLevel
    LockHighlight: {}
    Lower: {}
    Raise: {}
    RegisterAllEvents:
      impl: Frame/RegisterAllEvents
    RegisterEvent:
      impl: Frame/RegisterEvent
    RegisterForDrag: {}
    RegisterUnitEvent:
      impl: Frame/RegisterUnitEvent
    RotateTextures: {}
    SetAttribute:
      impl: Frame/SetAttribute
    SetAttributeNoHandler:
      impl: Frame/SetAttributeNoHandler
    SetClampedToScreen:
      setter:
      - name: isClampedToScreen
    SetClampRectInsets: {}
    SetClipsChildren: {}
    SetDontSavePosition: {}
    SetDrawLayerEnabled: {}
    SetFixedFrameLevel:
      setter:
      - name: hasFixedFrameLevel
    SetFixedFrameStrata:
      setter:
      - name: hasFixedFrameStrata
    SetFlattensRenderLayers: {}
    SetFrameLevel:
      impl: Frame/SetFrameLevel
    SetFrameStrata:
      setter:
      - name: frameStrata
    SetHighlightLocked: {}
    SetHitRectInsets: {}
    SetHyperlinkPropagateToParent:
      setter:
      - name: hyperlinkPropagateToParent
    SetHyperlinksEnabled:
      setter:
      - name: hyperlinksEnabled
    SetID:
      setter:
      - name: id
    SetIsFrameBuffer: {}
    SetMovable:
      setter:
      - name: movable
    SetPropagateKeyboardInput:
      setter:
      - name: propagateKeyboardInput
    SetResizable:
      setter:
      - name: resizable
    SetResizeBounds:
      impl: Frame/SetResizeBounds
    SetToplevel:
      setter:
      - name: toplevel
    SetUserPlaced:
      setter:
      - name: isUserPlaced
    SetUsingParentLevel:
      setter:
      - name: usingParentLevel
    SetWindow: {}
    StartMoving: {}
    StartSizing: {}
    StopMovingOrSizing: {}
    UnlockHighlight: {}
    UnregisterAllEvents:
      impl: Frame/UnregisterAllEvents
    UnregisterEvent:
      impl: Frame/UnregisterEvent
GameTooltip:
  fields:
    tooltipAnchorType:
      init: ANCHOR_NONE
      type: string
    tooltipLines:
      init: 0
      type: number
    tooltipOwner:
      nilable: true
      type: Frame
  inherits:
    Frame: {}
  methods:
    AddDoubleLine: {}
    AddFontStrings: {}
    AddLine: {}
    AddSpellByID: {}
    AddTexture: {}
    AdvanceSecondaryCompareItem: {}
    AppendText: {}
    ClearLines: {}
    CopyTooltip: {}
    FadeOut: {}
    GetAnchorType:
      getter:
      - name: tooltipAnchorType
    GetItem: {}
    GetMinimumWidth:
      outputs:
      - type: number
    GetOwner:
      getter:
      - name: tooltipOwner
    GetPadding: {}
    GetSpell: {}
    GetUnit: {}
    IsEquippedItem: {}
    IsOwned:
      impl: GameTooltip/IsOwned
    IsUnit: {}
    NumLines:
      getter:
      - name: tooltipLines
    ResetSecondaryCompareItem: {}
    SetAction: {}
    SetAnchorType: {}
    SetAuctionItem: {}
    SetAuctionSellItem: {}
    SetBackpackToken: {}
    SetBagItem: {}
    SetBagItemChild: {}
    SetBuybackItem: {}
    SetCompanionPet: {}
    SetCompareItem: {}
    SetCraftItem: {}
    SetCraftSpell: {}
    SetCurrencyToken: {}
    SetCurrencyTokenByID: {}
    SetEngravingRune: {}
    SetEquipmentSet: {}
    SetExistingSocketGem: {}
    SetFrameStack: {}
    SetGlyph: {}
    SetGlyphByID: {}
    SetGuildBankItem: {}
    SetHeirloomByItemID: {}
    SetHyperlink: {}
    SetInboxItem: {}
    SetInstanceLockEncountersComplete: {}
    SetInventoryItem: {}
    SetInventoryItemByID: {}
    SetItemByID: {}
    SetLFGDungeonReward: {}
    SetLFGDungeonShortageReward: {}
    SetLootCurrency: {}
    SetLootItem: {}
    SetLootRollItem: {}
    SetMerchantCostItem: {}
    SetMerchantItem: {}
    SetMinimumWidth: {}
    SetMountBySpellID: {}
    SetOwner:
      impl: GameTooltip/SetOwner
      inputs:
      - name: owner
        type: Frame
      - name: anchorType
        nilable: true
        type: string
      outputs: {}
    SetPadding: {}
    SetPetAction: {}
    SetPossession: {}
    SetQuestCurrency: {}
    SetQuestItem: {}
    SetQuestLogCurrency: {}
    SetQuestLogItem: {}
    SetQuestLogSpecialItem: {}
    SetReforgeItem: {}
    SetSendMailItem: {}
    SetShapeshift: {}
    SetSocketedItem: {}
    SetSocketGem: {}
    SetSpellBookItem: {}
    SetSpellByID: {}
    SetTalent: {}
    SetText: {}
    SetTotem: {}
    SetToyByItemID: {}
    SetTrackingSpell: {}
    SetTradePlayerItem: {}
    SetTradeSkillItem: {}
    SetTradeTargetItem: {}
    SetTrainerService: {}
    SetTransmogrifyItem: {}
    SetUnit: {}
    SetUnitAura: {}
    SetUnitBuff: {}
    SetUnitDebuff: {}
LayeredRegion:
  fields:
    layer:
      init: ARTWORK
      type: DrawLayer
    sublevel:
      init: 0
      type: number
    vertexColorA:
      init: 1
      type: number
    vertexColorB:
      init: 1
      type: number
    vertexColorG:
      init: 1
      type: number
    vertexColorR:
      init: 1
      type: number
  inherits:
    Region: {}
  methods:
    GetDrawLayer:
      getter:
      - name: layer
      - name: sublevel
    SetDrawLayer:
      setter:
      - name: layer
      - name: sublevel
        nilable: true
    SetVertexColor:
      impl: LayeredRegion/SetVertexColor
  virtual: true
Line:
  fields:
    thickness:
      init: 4
      type: number
  inherits:
    TextureBase: {}
  methods:
    GetEndPoint: {}
    GetHitRectThickness: {}
    GetStartPoint: {}
    GetThickness:
      getter:
      - name: thickness
    SetEndPoint: {}
    SetHitRectThickness: {}
    SetStartPoint: {}
    SetThickness:
      setter:
      - name: thickness
LineScale:
  fields: {}
  inherits:
    Scale: {}
  methods: {}
LineTranslation:
  fields: {}
  inherits:
    Translation: {}
  methods: {}
MaskTexture:
  fields: {}
  inherits:
    TextureBase: {}
  methods: {}
MessageFrame:
  fields: {}
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    AddMessage:
      impl: MessageFrame/AddMessage
    Clear: {}
    GetFadeDuration: {}
    GetFadePower: {}
    GetFading: {}
    GetFontStringByID: {}
    GetInsertMode: {}
    GetTimeVisible: {}
    HasMessageByID: {}
    ResetMessageFadeByID: {}
    SetFadeDuration: {}
    SetFadePower: {}
    SetFading: {}
    SetInsertMode: {}
    SetTimeVisible: {}
Minimap:
  fields: {}
  inherits:
    Frame: {}
  methods:
    GetPingPosition:
      inputs: {}
      outputs:
      - name: positionX
        type: number
      - name: positionY
        type: number
    GetZoom:
      inputs: {}
      outputs:
      - name: zoomFactor
        type: number
    GetZoomLevels:
      inputs: {}
      outputs:
      - name: zoomLevels
        type: number
    PingLocation:
      inputs:
      - name: locationX
        type: number
      - name: locationY
        type: number
      outputs: {}
    SetBlipTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetCorpsePOIArrowTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetIconTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetMaskTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetPlayerTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetPOIArrowTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetStaticPOIArrowTexture:
      inputs:
      - name: asset
        type: string
      outputs: {}
    SetZoom:
      inputs:
      - name: zoomFactor
        type: number
      outputs: {}
    UpdateBlips:
      inputs: {}
      outputs: {}
  singleton: true
Model:
  fields:
    modelScale:
      init: 1
      type: number
  inherits:
    Frame: {}
  methods:
    AdvanceTime: {}
    ClearFog: {}
    ClearModel: {}
    ClearTransform: {}
    GetCameraDistance: {}
    GetCameraFacing: {}
    GetCameraPosition: {}
    GetCameraRoll: {}
    GetCameraTarget: {}
    GetDesaturation: {}
    GetFacing: {}
    GetFogColor: {}
    GetFogFar: {}
    GetFogNear: {}
    GetLight: {}
    GetModelAlpha: {}
    GetModelDrawLayer: {}
    GetModelFileID: {}
    GetModelScale:
      getter:
      - name: modelScale
    GetPaused: {}
    GetPitch: {}
    GetPosition: {}
    GetRoll: {}
    GetShadowEffect: {}
    GetViewInsets: {}
    GetViewTranslation: {}
    GetWorldScale: {}
    HasAttachmentPoints: {}
    HasCustomCamera: {}
    IsUsingModelCenterToTransform: {}
    MakeCurrentCameraCustom: {}
    ReplaceIconTexture: {}
    SetCamera: {}
    SetCameraDistance: {}
    SetCameraFacing: {}
    SetCameraPosition: {}
    SetCameraRoll: {}
    SetCameraTarget: {}
    SetCustomCamera: {}
    SetDesaturation: {}
    SetFacing: {}
    SetFogColor: {}
    SetFogFar: {}
    SetFogNear: {}
    SetGlow: {}
    SetLight: {}
    SetModel: {}
    SetModelAlpha: {}
    SetModelDrawLayer: {}
    SetModelScale:
      setter:
      - name: modelScale
    SetParticlesEnabled: {}
    SetPaused: {}
    SetPitch: {}
    SetPosition: {}
    SetRoll: {}
    SetSequence: {}
    SetSequenceTime: {}
    SetShadowEffect: {}
    SetTransform: {}
    SetViewInsets: {}
    SetViewTranslation: {}
    TransformCameraSpaceToModelSpace:
      impl: Model/TransformCameraSpaceToModelSpace
    UseModelCenterToTransform: {}
ModelScene:
  fields: {}
  inherits:
    Frame: {}
  methods:
    ClearFog: {}
    CreateActor:
      impl: ModelScene/CreateActor
      inputs:
      - name: name
        nilable: true
        type: string
      - name: template
        nilable: true
        type: string
      outputs:
      - name: actor
        type: Actor
    GetActorAtIndex: {}
    GetCameraFarClip: {}
    GetCameraFieldOfView: {}
    GetCameraForward: {}
    GetCameraNearClip: {}
    GetCameraPosition: {}
    GetCameraRight: {}
    GetCameraUp: {}
    GetDrawLayer: {}
    GetFogColor: {}
    GetFogFar: {}
    GetFogNear: {}
    GetLightAmbientColor: {}
    GetLightDiffuseColor: {}
    GetLightDirection:
      outputs:
      - type: number
      - type: number
      - type: number
    GetLightPosition:
      outputs:
      - type: number
      - type: number
      - type: number
    GetLightType: {}
    GetNumActors: {}
    GetViewInsets:
      outputs:
      - type: number
      - type: number
      - type: number
      - type: number
    GetViewTranslation: {}
    IsLightVisible: {}
    Project3DPointTo2D: {}
    SetCameraFarClip: {}
    SetCameraFieldOfView: {}
    SetCameraNearClip: {}
    SetCameraOrientationByAxisVectors: {}
    SetCameraOrientationByYawPitchRoll: {}
    SetCameraPosition: {}
    SetDesaturation: {}
    SetDrawLayer: {}
    SetFogColor: {}
    SetFogFar: {}
    SetFogNear: {}
    SetLightAmbientColor: {}
    SetLightDiffuseColor: {}
    SetLightDirection: {}
    SetLightPosition: {}
    SetLightType: {}
    SetLightVisible: {}
    SetPaused: {}
    SetViewInsets: {}
    SetViewTranslation: {}
    TakeActor: {}
MovieFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    EnableSubtitles:
      inputs:
      - name: enable
        type: boolean
      outputs: {}
    StartMovie:
      inputs:
      - name: movieID
        type: number
      - default: false
        name: looping
        type: boolean
      outputs:
      - name: success
        type: boolean
      - name: returnCode
        type: number
    StartMovieByName:
      inputs:
      - name: movieName
        type: string
      - default: false
        name: looping
        type: boolean
      - default: 0
        name: resolution
        type: number
      outputs:
      - name: success
        type: boolean
      - name: returnCode
        type: number
    StopMovie:
      inputs: {}
      outputs: {}
OffScreenFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    ApplySnapshot:
      inputs:
      - name: texture
        type: Texture
      - name: snapshotID
        type: number
      outputs:
      - name: success
        type: boolean
    Flush:
      inputs: {}
      outputs: {}
    GetMaxSnapshots:
      inputs: {}
      outputs:
      - name: maxSnapshots
        type: number
    IsSnapshotValid:
      inputs:
      - name: snapshotID
        type: number
      outputs:
      - name: isValid
        type: boolean
    SetMaxSnapshots:
      inputs:
      - name: maxSnapshots
        type: number
      outputs: {}
    TakeSnapshot:
      inputs: {}
      outputs:
      - name: snapshotID
        nilable: true
        type: number
    TestPrintToFile:
      inputs:
      - name: snapshotID
        type: number
      - name: filename
        type: string
      outputs:
      - name: success
        type: boolean
    UsesNPOT:
      inputs: {}
      outputs:
      - name: usesNPOT
        nilable: true
        type: boolean
ParentedObject:
  fields: {}
  inherits:
    ParentedObjectBase: {}
  methods:
    SetParent:
      impl: ParentedObject/SetParent
      inputs:
      - name: parent
        nilable: true
        type: UIObject
      outputs: {}
  virtual: true
ParentedObjectBase:
  fields:
    children:
      type: hlist
    parent:
      nilable: true
      type: UIObject
  inherits:
    UIObject: {}
  methods:
    ClearParentKey:
      impl: ParentedObjectBase/ClearParentKey
    GetDebugName:
      impl: ParentedObject/GetDebugName
    GetParent:
      getter:
      - name: parent
    GetParentKey:
      impl: ParentedObjectBase/GetParentKey
    SetParentKey:
      impl: ParentedObjectBase/SetParentKey
  virtual: true
Path:
  fields:
    curveType:
      init: NONE
      type: CurveType
  inherits:
    Animation: {}
  methods:
    CreateControlPoint:
      impl: Path/CreateControlPoint
      inputs:
      - name: name
        nilable: true
        type: string
      - name: templateName
        nilable: true
        type: string
      - name: order
        nilable: true
        type: number
      outputs:
      - name: point
        type: ControlPoint
    GetControlPoints: {}
    GetCurveType:
      getter:
      - name: curveType
    GetMaxControlPointOrder: {}
    SetCurveType:
      setter:
      - name: curveType
PlayerModel:
  fields: {}
  inherits:
    Model: {}
  methods:
    ApplySpellVisualKit:
      inputs:
      - name: spellVisualKitID
        type: number
      - default: false
        name: oneShot
        type: boolean
      outputs: {}
    CanSetUnit:
      inputs:
      - name: unit
        type: unit
      outputs: {}
    FreezeAnimation:
      inputs:
      - name: anim
        type: number
      - name: variation
        type: number
      - name: frame
        type: number
      outputs: {}
    GetDisplayInfo:
      inputs: {}
      outputs:
      - name: displayID
        type: number
    GetDoBlend:
      inputs: {}
      outputs:
      - name: doBlend
        type: boolean
    GetKeepModelOnHide:
      inputs: {}
      outputs:
      - name: keepModelOnHide
        type: boolean
    HasAnimation:
      inputs:
      - name: anim
        type: number
      outputs:
      - name: hasAnimation
        type: boolean
    PlayAnimKit:
      inputs:
      - name: animKit
        type: number
      - default: false
        name: loop
        type: boolean
      outputs: {}
    RefreshCamera:
      inputs: {}
      outputs: {}
    RefreshUnit:
      inputs: {}
      outputs: {}
    SetAnimation:
      inputs:
      - name: anim
        type: number
      - name: variation
        nilable: true
        type: number
      outputs: {}
    SetBarberShopAlternateForm:
      inputs: {}
      outputs: {}
    SetCamDistanceScale:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetCreature:
      inputs:
      - name: creatureID
        type: number
      - default: 0
        name: displayID
        type: number
      outputs: {}
    SetDisplayInfo:
      inputs:
      - name: displayID
        type: number
      - name: mountDisplayID
        nilable: true
        type: number
      outputs: {}
    SetDoBlend:
      inputs:
      - default: false
        name: doBlend
        type: boolean
      outputs: {}
    SetItem:
      inputs:
      - name: itemID
        type: number
      - name: appearanceModID
        nilable: true
        type: number
      - name: itemVisualID
        nilable: true
        type: number
      outputs: {}
    SetItemAppearance:
      inputs:
      - name: itemAppearanceID
        type: number
      - name: itemVisualID
        nilable: true
        type: number
      - name: itemSubclass
        nilable: true
        type:
          enum: ItemWeaponSubclass
      outputs: {}
    SetKeepModelOnHide:
      inputs:
      - name: keepModelOnHide
        type: boolean
      outputs: {}
    SetPortraitZoom:
      inputs:
      - name: zoom
        type: number
      outputs: {}
    SetRotation:
      inputs:
      - name: radians
        type: number
      - default: true
        name: animate
        type: boolean
      outputs: {}
    SetUnit:
      inputs:
      - name: unit
        type: unit
      - default: true
        name: blend
        type: boolean
      outputs:
      - name: success
        type: boolean
    StopAnimKit:
      inputs: {}
      outputs: {}
    ZeroCachedCenterXY:
      inputs: {}
      outputs: {}
POIFrame:
  fields: {}
  inherits: {}
  methods:
    DrawAll: {}
    DrawBlob: {}
    DrawNone: {}
    EnableMerging: {}
    EnableSmoothing: {}
    GetMapID: {}
    SetBorderAlpha: {}
    SetBorderScalar: {}
    SetBorderTexture: {}
    SetFillAlpha: {}
    SetFillTexture: {}
    SetMapID: {}
    SetMergeThreshold: {}
    SetNumSplinePoints: {}
  virtual: true
QuestPOIFrame:
  fields: {}
  inherits:
    Frame: {}
    POIFrame: {}
  methods:
    GetNumTooltips:
      inputs: {}
      outputs:
      - name: numObjectives
        type: number
    GetTooltipIndex:
      inputs:
      - name: index
        type: number
      outputs:
      - name: objectiveIndex
        type: number
    UpdateMouseOverTooltip:
      inputs:
      - name: x
        type: number
      - name: y
        type: number
      outputs:
      - name: questID
        nilable: true
        type: number
      - name: numObjectives
        nilable: true
        type: number
Region:
  fields:
    animationGroups:
      init: {}
      type: table
    bottom:
      init: 0
      type: number
    explicitlyProtected:
      init: false
      type: boolean
    height:
      init: 0
      type: number
    isIgnoringParentAlpha:
      init: false
      type: boolean
    isIgnoringParentScale:
      init: false
      type: boolean
    left:
      init: 0
      type: number
    mouseClickEnabled:
      init: false
      type: boolean
    mouseMotionEnabled:
      init: false
      type: boolean
    mouseWheelEnabled:
      init: false
      type: boolean
    points:
      init: {}
      type: table
    width:
      init: 0
      type: number
  inherits:
    ParentedObject: {}
    RegionBase: {}
  methods:
    AdjustPointsOffset: {}
    CanChangeProtectedState: {}
    ClearAllPoints:
      impl: Region/ClearAllPoints
    ClearPoint: {}
    ClearPointsOffset: {}
    CollapsesLayout: {}
    CreateAnimationGroup:
      impl: Region/CreateAnimationGroup
      inputs:
      - name: name
        nilable: true
        type: string
      - name: templateName
        nilable: true
        type: string
      outputs:
      - name: animationGroup
        type: AnimationGroup
    EnableMouse:
      impl: MouseMixin/EnableMouse
    EnableMouseMotion: {}
    EnableMouseWheel:
      setter:
      - name: mouseWheelEnabled
    GetAnimationGroups:
      impl: Region/GetAnimationGroups
    GetBottom:
      getter:
      - name: bottom
    GetCenter:
      impl: Region/GetCenter
    GetEffectiveScale:
      impl: Region/GetEffectiveScale
    GetHeight:
      getter:
      - name: height
    GetLeft:
      getter:
      - name: left
    GetNumPoints:
      impl: Region/GetNumPoints
    GetPoint:
      impl: Region/GetPoint
      inputs:
      - default: 1
        name: anchorIndex
        nilable: true
        type: tonumber
      mayreturnnothing: true
      outputs:
      - name: point
        type: FramePoint
      - name: relativeTo
        nilable: true
        type: UIObject
      - name: relativePoint
        type: FramePoint
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    GetPointByName: {}
    GetRect:
      getter:
      - name: bottom
      - name: left
      - name: width
      - name: height
    GetRight:
      impl: Region/GetRight
    GetScaledRect:
      impl: Region/GetScaledRect
    GetSize:
      getter:
      - name: width
      - name: height
    GetSourceLocation: {}
    GetTop:
      impl: Region/GetTop
    GetWidth:
      getter:
      - name: width
    IsAnchoringRestricted: {}
    IsCollapsed: {}
    IsDragging: {}
    IsIgnoringParentAlpha:
      getter:
      - name: isIgnoringParentAlpha
    IsIgnoringParentScale:
      getter:
      - name: isIgnoringParentScale
    IsMouseClickEnabled:
      getter:
      - name: mouseClickEnabled
    IsMouseEnabled:
      impl: MouseMixin/IsMouseEnabled
    IsMouseMotionEnabled:
      getter:
      - name: mouseMotionEnabled
    IsMouseMotionFocus: {}
    IsMouseOver: {}
    IsMouseWheelEnabled:
      getter:
      - name: mouseWheelEnabled
    IsObjectLoaded: {}
    IsProtected:
      impl: Region/IsProtected
    IsRectValid: {}
    SetAllPoints:
      impl: Region/SetAllPoints
    SetCollapsesLayout: {}
    SetHeight:
      setter:
      - name: height
    SetIgnoreParentAlpha:
      setter:
      - name: isIgnoringParentAlpha
    SetIgnoreParentScale:
      setter:
      - name: isIgnoringParentScale
    SetMouseClickEnabled:
      setter:
      - name: mouseClickEnabled
    SetMouseMotionEnabled:
      setter:
      - name: mouseMotionEnabled
    SetPassThroughButtons: {}
    SetPoint:
      impl: Region/SetPoint
    SetPropagateMouseClicks: {}
    SetPropagateMouseMotion: {}
    SetSize:
      setter:
      - name: width
      - name: height
    SetWidth:
      setter:
      - name: width
    StopAnimating: {}
  virtual: true
RegionBase:
  fields:
    alpha:
      init: 1
      type: number
    scale:
      init: 1
      type: number
    shown:
      init: true
      type: boolean
  inherits: {}
  methods:
    GetAlpha:
      getter:
      - name: alpha
    GetScale:
      getter:
      - name: scale
    Hide:
      impl: Region/Hide
    IsShown:
      getter:
      - name: shown
    IsVisible:
      impl: Region/IsVisible
    SetAlpha:
      impl: Region/SetAlpha
    SetScale:
      impl: Region/SetScale
    SetShown:
      impl: Region/SetShown
    Show:
      impl: Region/Show
  virtual: true
Rotation:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetDegrees:
      inputs: {}
      outputs:
      - name: angle
        type: number
    GetOrigin:
      inputs: {}
      outputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
    GetRadians:
      inputs: {}
      outputs:
      - name: angle
        type: number
    SetDegrees:
      inputs:
      - name: angle
        type: number
      outputs: {}
    SetOrigin:
      inputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
      outputs: {}
    SetRadians:
      inputs:
      - name: angle
        type: number
      outputs: {}
Scale:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetOrigin:
      inputs: {}
      outputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
    GetScale:
      inputs: {}
      outputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
    GetScaleFrom:
      inputs: {}
      outputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
    GetScaleTo:
      inputs: {}
      outputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
    SetOrigin:
      inputs:
      - name: point
        type: FramePoint
      - name: originX
        type: number
      - name: originY
        type: number
      outputs: {}
    SetScale:
      inputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
      outputs: {}
    SetScaleFrom:
      inputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
      outputs: {}
    SetScaleTo:
      inputs:
      - name: scaleX
        type: number
      - name: scaleY
        type: number
      outputs: {}
ScriptObject:
  fields: {}
  inherits:
    ScriptObjectBase: {}
  methods:
    GetScript:
      impl: ScriptObject/GetScript
    HasScript:
      outputs:
      - name: hasScript
        stub: true
        type: boolean
    HookScript:
      impl: ScriptObject/HookScript
    SetScript:
      impl: ScriptObject/SetScript
  virtual: true
ScriptObjectBase:
  fields:
    scripts:
      init:
        0: {}
        1: {}
        2: {}
      type: table
  inherits: {}
  methods: {}
  virtual: true
ScrollFrame:
  fields:
    scrollChild:
      nilable: true
      type: Frame
  inherits:
    Frame: {}
  methods:
    GetHorizontalScroll:
      outputs:
      - type: number
    GetHorizontalScrollRange:
      outputs:
      - type: number
    GetScrollChild:
      getter:
      - name: scrollChild
    GetVerticalScroll:
      outputs:
      - type: number
    GetVerticalScrollRange:
      outputs:
      - type: number
    SetHorizontalScroll: {}
    SetScrollChild:
      impl: ScrollFrame/SetScrollChild
    SetVerticalScroll: {}
    UpdateScrollChildRect: {}
SimpleHTML:
  fieldinitoverrides:
    hyperlinksEnabled: true
  fields: {}
  inherits:
    FontInstance: {}
    Frame: {}
  methods:
    GetContentHeight:
      inputs: {}
      outputs:
      - name: height
        type: number
    GetHyperlinkFormat:
      inputs: {}
      outputs:
      - name: format
        type: string
    GetTextData:
      inputs: {}
      outputs:
      - name: content
        type:
          arrayof:
            structure: HTMLContentNode
    SetHyperlinkFormat:
      inputs:
      - name: format
        type: string
      outputs: {}
    SetText:
      inputs:
      - name: text
        type: string
      - default: false
        name: ignoreMarkup
        type: boolean
      outputs: {}
Slider:
  fieldinitoverrides:
    mouseClickEnabled: true
    mouseMotionEnabled: true
  fields:
    enabled:
      init: true
      type: boolean
    max:
      init: 0
      type: number
    min:
      init: 0
      type: number
    orientation:
      init: VERTICAL
      type: Orientation
    thumbTexture:
      nilable: true
      type: Texture
    value:
      init: 0
      type: number
  inherits:
    Frame: {}
  methods:
    Disable:
      impl: Slider/Disable
    Enable:
      impl: Slider/Enable
    GetMinMaxValues:
      getter:
      - name: min
      - name: max
    GetObeyStepOnDrag: {}
    GetOrientation:
      getter:
      - name: orientation
    GetStepsPerPage: {}
    GetThumbTexture:
      getter:
      - name: thumbTexture
    GetValue:
      getter:
      - name: value
    GetValueStep: {}
    IsDraggingThumb: {}
    IsEnabled: {}
    SetEnabled: {}
    SetMinMaxValues:
      setter:
      - name: min
      - name: max
    SetObeyStepOnDrag: {}
    SetOrientation:
      setter:
      - name: orientation
    SetStepsPerPage: {}
    SetThumbTexture:
      setter:
      - name: thumbTexture
    SetValue:
      setter:
      - name: value
    SetValueStep: {}
StatusBar:
  fields:
    fillStyle:
      init: STANDARD
      type: StatusBarFillStyle
    max:
      init: 0
      type: number
    min:
      init: 0
      type: number
    statusBarTexture:
      nilable: true
      type: Texture
    value:
      init: 0
      type: number
  inherits:
    Frame: {}
  methods:
    GetFillStyle:
      getter:
      - name: fillStyle
    GetMinMaxValues:
      getter:
      - name: min
      - name: max
    GetOrientation: {}
    GetReverseFill: {}
    GetRotatesTexture: {}
    GetStatusBarColor:
      impl: StatusBar/GetStatusBarColor
    GetStatusBarDesaturation: {}
    GetStatusBarTexture:
      getter:
      - name: statusBarTexture
    GetValue:
      getter:
      - name: value
    IsStatusBarDesaturated: {}
    SetColorFill: {}
    SetFillStyle:
      setter:
      - name: fillStyle
    SetMinMaxValues:
      setter:
      - name: min
      - name: max
    SetOrientation: {}
    SetReverseFill: {}
    SetRotatesTexture: {}
    SetStatusBarColor:
      impl: StatusBar/SetStatusBarColor
    SetStatusBarDesaturated: {}
    SetStatusBarDesaturation: {}
    SetStatusBarTexture:
      impl: StatusBar/SetStatusBarTexture
    SetValue:
      setter:
      - name: value
TabardModel:
  fields: {}
  inherits:
    PlayerModel: {}
  methods:
    CanSaveTabardNow:
      inputs: {}
      outputs:
      - name: canSave
        type: boolean
    CycleVariation:
      inputs:
      - name: variationIndex
        type: number
      - name: delta
        type: number
      outputs: {}
    GetLowerBackgroundFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetLowerEmblemFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetLowerEmblemTexture:
      inputs:
      - name: texture
        type: Texture
      outputs: {}
    GetUpperBackgroundFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetUpperEmblemFileName:
      inputs: {}
      outputs:
      - name: path
        type: string
    GetUpperEmblemTexture:
      inputs:
      - name: texture
        type: Texture
      outputs: {}
    InitializeTabardColors:
      inputs: {}
      outputs: {}
    IsGuildTabard:
      inputs: {}
      outputs:
      - name: isGuildTabard
        type: boolean
    Save:
      inputs: {}
      outputs: {}
Texture:
  fields: {}
  inherits:
    TextureBase: {}
  methods:
    AddMaskTexture:
      inputs:
      - name: mask
        type: table
      outputs: {}
    GetMaskTexture:
      inputs:
      - name: index
        type: number
      outputs:
      - name: mask
        type: table
    GetNumMaskTextures:
      inputs: {}
      outputs:
      - name: count
        type: number
    RemoveMaskTexture:
      inputs:
      - name: mask
        type: table
      outputs: {}
TextureBase:
  fields:
    blendMode:
      init: BLEND
      type: BlendMode
    blx:
      init: 0
      type: number
    bly:
      init: 1
      type: number
    brx:
      init: 1
      type: number
    bry:
      init: 1
      type: number
    colorTextureA:
      nilable: true
      type: number
    colorTextureB:
      nilable: true
      type: number
    colorTextureG:
      nilable: true
      type: number
    colorTextureR:
      nilable: true
      type: number
    horizTile:
      init: false
      type: boolean
    maskName:
      nilable: true
      type: string
    texture:
      nilable: true
      type: string
    tlx:
      init: 0
      type: number
    tly:
      init: 0
      type: number
    trx:
      init: 1
      type: number
    try:
      init: 0
      type: number
    vertTile:
      init: false
      type: boolean
  inherits:
    LayeredRegion: {}
    ScriptObject: {}
  methods:
    ClearTextureSlice: {}
    GetAtlas: {}
    GetBlendMode:
      getter:
      - name: blendMode
    GetDesaturation: {}
    GetHorizTile:
      getter:
      - name: horizTile
    GetRotation: {}
    GetTexCoord:
      getter:
      - name: tlx
      - name: tly
      - name: blx
      - name: bly
      - name: trx
      - name: try
      - name: brx
      - name: bry
    GetTexelSnappingBias: {}
    GetTexture:
      impl: Texture/GetTexture
    GetTextureFileID: {}
    GetTextureFilePath: {}
    GetTextureSliceMargins: {}
    GetTextureSliceMode: {}
    GetVertexColor:
      getter:
      - name: vertexColorR
      - name: vertexColorG
      - name: vertexColorB
      - name: vertexColorA
    GetVertexOffset: {}
    GetVertTile:
      getter:
      - name: vertTile
    IsBlockingLoadRequested: {}
    IsDesaturated: {}
    IsSnappingToPixelGrid: {}
    SetAtlas:
      impl: Texture/SetAtlas
    SetBlendMode:
      setter:
      - name: blendMode
    SetBlockingLoadsRequested: {}
    SetColorTexture:
      impl: Texture/SetColorTexture
    SetDesaturated: {}
    SetDesaturation: {}
    SetGradient: {}
    SetHorizTile:
      setter:
      - name: horizTile
    SetMask:
      setter:
      - name: maskName
    SetRotation: {}
    SetSnapToPixelGrid: {}
    SetTexCoord:
      impl: Texture/SetTexCoord
    SetTexelSnappingBias: {}
    SetTexture:
      impl: Texture/SetTexture
    SetTextureSliceMargins: {}
    SetTextureSliceMode: {}
    SetVertexOffset: {}
    SetVertTile:
      setter:
      - name: vertTile
  virtual: true
TextureCoordTranslation:
  fields: {}
  inherits:
    Translation: {}
  methods: {}
Translation:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetOffset:
      inputs: {}
      outputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
    SetOffset:
      inputs:
      - name: offsetX
        type: number
      - name: offsetY
        type: number
      outputs: {}
UIObject:
  fields:
    forbidden:
      init: false
      type: boolean
    name:
      nilable: true
      type: string
  inherits: {}
  methods:
    GetName:
      getter:
      - name: name
    GetObjectType:
      impl: UIObject/GetObjectType
    IsForbidden:
      getter:
      - name: forbidden
    IsObjectType:
      impl: UIObject/IsObjectType
    SetForbidden:
      impl: ForbiddenMixin/SetForbidden
  virtual: true
UnitPositionFrame:
  fields: {}
  inherits:
    Frame: {}
  methods:
    AddUnit:
      inputs:
      - name: unitTokenString
        type: string
      - name: asset
        type: string
      - name: width
        nilable: true
        type: number
      - name: height
        nilable: true
        type: number
      - name: r
        nilable: true
        type: number
      - name: g
        nilable: true
        type: number
      - name: b
        nilable: true
        type: number
      - name: a
        nilable: true
        type: number
      - name: sublayer
        nilable: true
        type: number
      - name: showFacing
        nilable: true
        type: boolean
      outputs: {}
    ClearUnits:
      inputs: {}
      outputs: {}
    FinalizeUnits:
      inputs: {}
      outputs: {}
    GetMouseOverUnits:
      inputs: {}
      outputs:
      - name: units
        type: string
      outstride: 1
    GetPlayerPingScale:
      inputs: {}
      outputs:
      - name: scale
        type: number
    GetUiMapID:
      inputs: {}
      outputs:
      - name: mapID
        type: number
    SetPlayerPingScale:
      inputs:
      - name: scale
        type: number
      outputs: {}
    SetPlayerPingTexture:
      inputs:
      - name: textureType
        type:
          enum: PingTextureType
      - name: asset
        type: string
      - default: 0
        name: width
        type: number
      - default: 0
        name: height
        type: number
      outputs: {}
    SetUiMapID:
      inputs:
      - name: mapID
        type: number
      outputs: {}
    SetUnitColor:
      inputs:
      - name: unit
        type: string
      - name: colorR
        type: number
      - name: colorG
        type: number
      - name: colorB
        type: number
      - name: colorA
        type: number
      outputs: {}
    StartPlayerPing:
      inputs:
      - default: 0
        name: duration
        type: number
      - default: 0
        name: fadeDuration
        type: number
      outputs: {}
    StopPlayerPing:
      inputs: {}
      outputs: {}
VertexColor:
  fields: {}
  inherits:
    Animation: {}
  methods:
    GetEndColor:
      inputs: {}
      outputs:
      - name: color
        type:
          structure: colorRGBA
    GetStartColor:
      inputs: {}
      outputs:
      - name: color
        type:
          structure: colorRGBA
    SetEndColor:
      inputs:
      - name: color
        type:
          structure: colorRGBA
      outputs: {}
    SetStartColor:
      inputs:
      - name: color
        type:
          structure: colorRGBA
      outputs: {}

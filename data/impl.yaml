---
assert:
  stdlib: assert
bit.arshift:
  stdlib: bit.arshift
bit.band:
  stdlib: bit.band
bit.bnot:
  stdlib: bit.bnot
bit.bor:
  stdlib: bit.bor
bit.bxor:
  stdlib: bit.bxor
bit.lshift:
  stdlib: bit.lshift
bit.mod:
  stdlib: bit.mod
bit.rshift:
  stdlib: bit.rshift
C_AuctionHouse.GetAuctionItemSubClasses:
  sqls:
  - C_AuctionHouse.GetAuctionItemSubClasses
C_Calendar.GetMonthInfo:
  module: calendar
C_Calendar.SetAbsMonth:
  module: calendar
C_Calendar.SetMonth:
  module: calendar
C_ChatInfo.ReplaceIconAndGroupExpressions: {}
C_ClassTalents.GetActiveConfigID:
  frameworks:
  - api
C_ClassTalents.GetTraitTreeForSpec:
  sqls:
  - C_ClassTalents.GetTraitTreeForSpec
C_ClassTalents.InitializeViewLoadout:
  frameworks:
  - api
C_ClassTalents.ViewLoadout:
  frameworks:
  - api
  sqls:
  - GetSpecializationInfoByID
C_Covenants.GetCovenantData:
  sqls:
  - C_Covenants.GetCovenantData
  - C_Covenants.GetCovenantData.soulbinds
C_CovenantSanctumUI.GetRenownLevels:
  sqls:
  - C_CovenantSanctumUI.GetRenownLevels
C_CovenantSanctumUI.GetRenownRewardsForLevel:
  sqls:
  - C_CovenantSanctumUI.GetRenownRewardsForLevel
C_CreatureInfo.GetClassInfo:
  directsql: C_CreatureInfo.GetClassInfo
C_CVar.GetCVar:
  module: cvars
C_CVar.GetCVarBool:
  module: cvars
C_CVar.GetCVarDefault:
  module: cvars
C_CVar.RegisterCVar:
  module: cvars
C_CVar.SetCVar:
  module: cvars
C_DateAndTime.AdjustTimeByDays:
  module: datetime
C_DateAndTime.AdjustTimeByMinutes:
  module: datetime
C_DateAndTime.CompareCalendarTime:
  module: datetime
C_EventUtils.IsEventValid:
  function: IsEventValid
  module: events
C_Item.DoesItemExistByID:
  sqls:
  - C_Item.DoesItemExistByID
C_Item.GetItemClassInfo:
  sqls:
  - C_Item.GetItemClassInfo
C_Item.GetItemSubClassInfo:
  sqls:
  - C_Item.GetItemSubClassInfo
C_ItemInteraction.GetItemInteractionInfo:
  sqls:
  - C_ItemInteraction.GetItemInteractionInfo
C_Macro.SetMacroExecuteLineCallback:
  function: SetCallback
  module: macrotext
C_Map.GetMapInfo:
  directsql: C_Map.GetMapInfo
C_Map.GetMapInfo_Vanilla:
  directsql: C_Map.GetMapInfo_Vanilla
C_ScriptedAnimations.GetAllScriptedAnimationEffects:
  sqls:
  - C_ScriptedAnimations.GetAllScriptedAnimationEffects
C_SpecializationInfo.GetSpecializationInfo:
  frameworks:
  - api
  sqls:
  - GetSpecializationInfo
C_SpecializationInfo.GetSpecIDs:
  sqls:
  - C_SpecializationInfo.GetSpecIDs
C_Texture.GetAtlasInfo:
  sqls:
  - C_Texture.GetAtlasInfo
C_Texture.GetAtlasInfo_11_1_5:
  sqls:
  - C_Texture.GetAtlasInfo_11_1_5
C_Timer.After:
  module: time
C_Timer.NewTicker:
  module: time
C_Timer.NewTimer:
  module: time
C_Traits.GetConfigInfo:
  frameworks:
  - api
  sqls:
  - C_Traits.GetConfigInfo
C_Traits.GetNodeInfo:
  frameworks:
  - api
  sqls:
  - C_Traits.GetNodeInfo
  - C_Traits.GetNodeInfo.entries
  - C_Traits.GetNodeInfo.edges
  - C_Traits.GetNodeInfo.groups
  - C_Traits.GetNodeInfo.conditions
C_Traits.GetTreeNodes:
  sqls:
  - C_Traits.GetTreeNodes
C_UI.GetUIParent:
  frameworks:
  - env
C_UI.GetWorldFrame:
  frameworks:
  - env
C_UIColor.GetColors:
  sqls:
  - C_UIColor.GetColors
C_XMLUtil.GetTemplateInfo_10_2:
  frameworks:
  - api
ClassicExpansionAtLeast:
  frameworks:
  - datalua
collectgarbage:
  stdlib: collectgarbage
ConsoleGetAllCommands:
  frameworks:
  - datalua
coroutine.create:
  stdlib: coroutine.create
coroutine.resume:
  stdlib: coroutine.resume
coroutine.running:
  stdlib: coroutine.running
coroutine.status:
  stdlib: coroutine.status
coroutine.wrap:
  stdlib: coroutine.wrap
coroutine.yield:
  stdlib: coroutine.yield
CreateFont:
  frameworks:
  - api
CreateForbiddenFrame:
  frameworks:
  - api
CreateFrame:
  frameworks:
  - api
CreateWindow: {}
date:
  stdlib: date
debuglocals:
  stdlib: debuglocals
debugprofilestart:
  stdlib: debugprofilestart
debugprofilestop:
  stdlib: debugprofilestop
debugstack:
  stdlib: debugstack
difftime:
  stdlib: difftime
DoEmote:
  frameworks:
  - api
  sqls:
  - DoEmote
EnumerateFrames:
  frameworks:
  - api
error:
  stdlib: error
fastrandom:
  stdlib: fastrandom
FillLocalizedClassList:
  sqls:
  - FillLocalizedClassList
forceinsecure:
  stdlib: forceinsecure
gcinfo:
  stdlib: gcinfo
GetAddOnEnableState: {}
GetAddOnInfo: {}
GetAddOnMetadata: {}
GetAuctionItemSubClasses:
  sqls:
  - C_AuctionHouse.GetAuctionItemSubClasses
GetBuildInfo_10_1:
  frameworks:
  - datalua
GetBuildInfo_1_15_0:
  frameworks:
  - datalua
GetBuildInfo_3_4_2:
  frameworks:
  - datalua
GetButtonMetatable:
  frameworks:
  - api
GetChatWindowInfo: {}
GetChatWindowMessages:
  frameworks:
  - env
GetClassInfo:
  directsql: GetClassInfo
GetClassInfo_Classic:
  directsql: GetClassInfo_Classic
GetClickFrame:
  frameworks:
  - api
GetCurrentEnvironment:
  module: env
geterrorhandler:
  stdlib: geterrorhandler
getfenv:
  module: env
GetFontStringMetatable:
  frameworks:
  - api
GetFrameMetatable:
  frameworks:
  - api
GetFramesRegisteredForEvent:
  function: GetFramesRegisteredForEventUnpacked
  module: events
GetGlobalEnvironment:
  module: env
GetInventorySlotInfo:
  directsql: GetInventorySlotInfo
GetItemQualityColor: {}
GetLootSpecialization:
  module: units
getmetatable:
  stdlib: getmetatable
GetNumAddOns:
  frameworks:
  - api
GetNumClasses:
  directsql: GetNumClasses
GetNumSpecializationsForClassID:
  directsql: GetNumSpecializationsForClassID
GetNumTalents:
  frameworks:
  - api
  sqls:
  - GetNumTalents
GetNumTalentTabs:
  frameworks:
  - api
  sqls:
  - GetNumTalentTabs
GetScreenHeight:
  module: system
GetScreenWidth:
  module: system
GetSpecializationInfo:
  frameworks:
  - api
  sqls:
  - GetSpecializationInfo
GetSpecializationInfoByID:
  directsql: GetSpecializationInfoByID
GetSpecializationInfoForClassID:
  frameworks:
  - api
  sqls:
  - GetSpecializationInfoForClassID
GetSpecializationInfoForSpecID:
  frameworks:
  - api
  sqls:
  - GetSpecializationInfoForSpecID
GetTalentInfo_Vanilla:
  frameworks:
  - api
  sqls:
  - GetTalentInfo_Vanilla
GetTalentPrereqs:
  frameworks:
  - api
  sqls:
  - GetTalentPrereqs
GetTalentTabInfo:
  frameworks:
  - api
  sqls:
  - GetTalentTabInfo
GetTime:
  module: time
hooksecurefunc:
  stdlib: hooksecurefunc
ipairs:
  stdlib: ipairs
IsAddOnLoaded: {}
IsAddOnLoadOnDemand: {}
IsDebugBuild: {}
IsGMClient: {}
IsInGlobalEnvironment:
  module: env
IsLinuxClient:
  frameworks:
  - api
IsLoggedIn:
  module: system
IsMacClient:
  frameworks:
  - api
IsPublicBuild: {}
issecure:
  stdlib: issecure
issecurevariable:
  stdlib: issecurevariable
IsTestBuild:
  frameworks:
  - datalua
IsWindowsClient:
  frameworks:
  - api
LoadAddOn:
  frameworks:
  - loader
loadstring:
  stdlib: loadstring
loadstring_untainted:
  stdlib: loadstring_untainted
math.abs:
  stdlib: math.abs
math.acos:
  stdlib: math.acos
math.asin:
  stdlib: math.asin
math.atan:
  stdlib: math.atan
math.atan2:
  stdlib: math.atan2
math.ceil:
  stdlib: math.ceil
math.cos:
  stdlib: math.cos
math.cosh:
  stdlib: math.cosh
math.deg:
  stdlib: math.deg
math.exp:
  stdlib: math.exp
math.floor:
  stdlib: math.floor
math.fmod:
  stdlib: math.fmod
math.frexp:
  stdlib: math.frexp
math.huge:
  stdlib: math.huge
math.ldexp:
  stdlib: math.ldexp
math.log:
  stdlib: math.log
math.log10:
  stdlib: math.log10
math.max:
  stdlib: math.max
math.min:
  stdlib: math.min
math.modf:
  stdlib: math.modf
math.pi:
  stdlib: math.pi
math.pow:
  stdlib: math.pow
math.rad:
  stdlib: math.rad
math.random:
  stdlib: math.random
math.sin:
  stdlib: math.sin
math.sinh:
  stdlib: math.sinh
math.sqrt:
  stdlib: math.sqrt
math.tan:
  stdlib: math.tan
math.tanh:
  stdlib: math.tanh
newproxy:
  stdlib: newproxy
next:
  stdlib: next
pairs:
  stdlib: pairs
pcall:
  stdlib: pcall
pcallwithenv:
  stdlib: pcallwithenv
rawequal:
  stdlib: rawequal
rawget:
  stdlib: rawget
rawset:
  stdlib: rawset
RequestTimePlayed:
  frameworks:
  - api
RunMacroText:
  module: macrotext
RunScript: {}
scrub:
  stdlib: scrub
securecall:
  stdlib: securecall
securecallfunction:
  stdlib: securecallfunction
SecureCmdOptionParse: {}
secureexecuterange:
  stdlib: secureexecuterange
select:
  stdlib: select
SendSystemMessage:
  frameworks:
  - api
seterrorhandler:
  stdlib: seterrorhandler
setfenv:
  stdlib: setfenv
setmetatable:
  stdlib: setmetatable
SetPortraitTexture: {}
strcmputf8i:
  stdlib: strcmputf8i
strconcat:
  stdlib: strconcat
string.byte:
  stdlib: string.byte
string.char:
  stdlib: string.char
string.find:
  stdlib: string.find
string.format:
  stdlib: string.format
string.gfind:
  stdlib: string.gfind
string.gmatch:
  stdlib: string.gmatch
string.gsub:
  stdlib: string.gsub
string.join:
  delegate: strjoin
string.len:
  stdlib: string.len
string.lower:
  stdlib: string.lower
string.match:
  stdlib: string.match
string.rep:
  stdlib: string.rep
string.reverse:
  stdlib: string.reverse
string.split:
  delegate: strsplit
string.sub:
  stdlib: string.sub
string.trim:
  delegate: strtrim
string.upper:
  stdlib: string.upper
strjoin:
  stdlib: strjoin
strlenutf8:
  stdlib: strlenutf8
strsplit:
  stdlib: strsplit
strsplittable:
  stdlib: strsplittable
strtrim:
  stdlib: strtrim
SwapToGlobalEnvironment:
  module: env
table.concat:
  stdlib: table.concat
table.foreach:
  stdlib: table.foreach
table.foreachi:
  stdlib: table.foreachi
table.getn:
  stdlib: table.getn
table.insert:
  stdlib: table.insert
table.maxn:
  stdlib: table.maxn
table.remove:
  stdlib: table.remove
table.removemulti:
  stdlib: table.removemulti
table.setn:
  stdlib: table.setn
table.sort:
  stdlib: table.sort
table.wipe:
  stdlib: table.wipe
time:
  stdlib: time
tonumber:
  stdlib: tonumber
tostring:
  stdlib: tostring
type:
  stdlib: type
UnitClass:
  sqls:
  - UnitClass
UnitClassBase:
  sqls:
  - UnitClassBase
UnitExists: {}
UnitFactionGroup:
  sqls:
  - UnitFactionGroup
UnitGUID: {}
UnitIsPlayer: {}
UnitIsUnit: {}
UnitLevel: {}
UnitName: {}
UnitPowerType:
  sqls:
  - UnitPowerType
UnitRace:
  sqls:
  - UnitRace
UnitSex: {}
unpack:
  stdlib: unpack
xpcall:
  stdlib: xpcall

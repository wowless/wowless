load("bazel/lua.bzl", "run_lua_script")

cc_binary(
    name = "wowless",
    features = ["fully_static_link"],
    deps = [":lib"],
)

cc_library(
    name = "lib",
    srcs = [
        "main.c",
        "wowless/ext.c",
    ],
    deps = [
        "@elune",
        "@lsqlite3",
        "@luaexpat",
        "@luafilesystem//:lib",
        "@lyaml",
        "@lzlib",
    ],
    data = [
        "@luadate",
        "@luapath",
        "wowapi/yaml.lua",
        "wowless/hlist.lua",
        "wowless/util.lua",
    ],
)

filegroup(
    name = "tools_util",
    srcs = [
        "@penlight",
        "tools/util.lua",
    ],
)

run_lua_script(
    name = "build_listfile",
    script = "tools/listfile.lua",
    output = "build/listfile.lua",
    data = [
        ":tools_util",
        "vendor/listfile/community-listfile.csv",
    ],
)

run_lua_script(
    name = "build_tactkeys",
    script = "tools/tactkeys.lua",
    output = "build/tactkeys.lua",
    data = [
        ":tools_util",
        "vendor/tactkeys/WoW.txt",
    ],
)

filegroup(
    name = "tests",
    srcs = [
        "spec/data/impl/C_DateAndTime.AdjustTimeByDays_spec.lua",
        "spec/elune_spec.lua",
        "spec/wowapi/yaml_spec.lua",
        "spec/wowless/hlist_spec.lua",
    ],
)

cc_test(
    name = "test",
    deps = [":lib"],
    data = [
        "@luassert",
        ":tests",
        "data/impl/C_DateAndTime.AdjustTimeByDays.lua",
        "tools/runtests.lua",
    ],
    args = [
        "$(location tools/runtests.lua)",
        "$(locations :tests)",
    ],
    env = {
        "LUA_PATH": ";".join([
            "?.lua",
            "external/luadate/src/?.lua",
            "external/luapath/lua/?.lua",
            "external/luassert/?.lua",
            "external/luassert/?/init.lua",
            "external/lyaml/lib/?.lua",
            "external/lyaml/lib/?/init.lua",
            "external/say/?/init.lua",
        ]),
    },
)
